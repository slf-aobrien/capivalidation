// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetPremiumLivesRptUsingGETParams creates a new GetPremiumLivesRptUsingGETParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetPremiumLivesRptUsingGETParams() *GetPremiumLivesRptUsingGETParams {
	return &GetPremiumLivesRptUsingGETParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetPremiumLivesRptUsingGETParamsWithTimeout creates a new GetPremiumLivesRptUsingGETParams object
// with the ability to set a timeout on a request.
func NewGetPremiumLivesRptUsingGETParamsWithTimeout(timeout time.Duration) *GetPremiumLivesRptUsingGETParams {
	return &GetPremiumLivesRptUsingGETParams{
		timeout: timeout,
	}
}

// NewGetPremiumLivesRptUsingGETParamsWithContext creates a new GetPremiumLivesRptUsingGETParams object
// with the ability to set a context for a request.
func NewGetPremiumLivesRptUsingGETParamsWithContext(ctx context.Context) *GetPremiumLivesRptUsingGETParams {
	return &GetPremiumLivesRptUsingGETParams{
		Context: ctx,
	}
}

// NewGetPremiumLivesRptUsingGETParamsWithHTTPClient creates a new GetPremiumLivesRptUsingGETParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetPremiumLivesRptUsingGETParamsWithHTTPClient(client *http.Client) *GetPremiumLivesRptUsingGETParams {
	return &GetPremiumLivesRptUsingGETParams{
		HTTPClient: client,
	}
}

/*
GetPremiumLivesRptUsingGETParams contains all the parameters to send to the API endpoint

	for the get premium lives rpt using g e t operation.

	Typically these are written to a http.Request.
*/
type GetPremiumLivesRptUsingGETParams struct {

	/* PolicyNumber.

	   policyNumber
	*/
	PolicyNumber string

	/* RequestApplication.

	   requestApplication
	*/
	RequestApplication string

	/* RequestUser.

	   requestUser
	*/
	RequestUser string

	/* StartDt.

	   startDt
	*/
	StartDt string

	/* StopDt.

	   stopDt
	*/
	StopDt string

	/* VarianceFormat.

	   varianceFormat
	*/
	VarianceFormat string

	/* VarianceLevel.

	   varianceLevel
	*/
	VarianceLevel *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get premium lives rpt using g e t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetPremiumLivesRptUsingGETParams) WithDefaults() *GetPremiumLivesRptUsingGETParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get premium lives rpt using g e t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetPremiumLivesRptUsingGETParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get premium lives rpt using g e t params
func (o *GetPremiumLivesRptUsingGETParams) WithTimeout(timeout time.Duration) *GetPremiumLivesRptUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get premium lives rpt using g e t params
func (o *GetPremiumLivesRptUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get premium lives rpt using g e t params
func (o *GetPremiumLivesRptUsingGETParams) WithContext(ctx context.Context) *GetPremiumLivesRptUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get premium lives rpt using g e t params
func (o *GetPremiumLivesRptUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get premium lives rpt using g e t params
func (o *GetPremiumLivesRptUsingGETParams) WithHTTPClient(client *http.Client) *GetPremiumLivesRptUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get premium lives rpt using g e t params
func (o *GetPremiumLivesRptUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPolicyNumber adds the policyNumber to the get premium lives rpt using g e t params
func (o *GetPremiumLivesRptUsingGETParams) WithPolicyNumber(policyNumber string) *GetPremiumLivesRptUsingGETParams {
	o.SetPolicyNumber(policyNumber)
	return o
}

// SetPolicyNumber adds the policyNumber to the get premium lives rpt using g e t params
func (o *GetPremiumLivesRptUsingGETParams) SetPolicyNumber(policyNumber string) {
	o.PolicyNumber = policyNumber
}

// WithRequestApplication adds the requestApplication to the get premium lives rpt using g e t params
func (o *GetPremiumLivesRptUsingGETParams) WithRequestApplication(requestApplication string) *GetPremiumLivesRptUsingGETParams {
	o.SetRequestApplication(requestApplication)
	return o
}

// SetRequestApplication adds the requestApplication to the get premium lives rpt using g e t params
func (o *GetPremiumLivesRptUsingGETParams) SetRequestApplication(requestApplication string) {
	o.RequestApplication = requestApplication
}

// WithRequestUser adds the requestUser to the get premium lives rpt using g e t params
func (o *GetPremiumLivesRptUsingGETParams) WithRequestUser(requestUser string) *GetPremiumLivesRptUsingGETParams {
	o.SetRequestUser(requestUser)
	return o
}

// SetRequestUser adds the requestUser to the get premium lives rpt using g e t params
func (o *GetPremiumLivesRptUsingGETParams) SetRequestUser(requestUser string) {
	o.RequestUser = requestUser
}

// WithStartDt adds the startDt to the get premium lives rpt using g e t params
func (o *GetPremiumLivesRptUsingGETParams) WithStartDt(startDt string) *GetPremiumLivesRptUsingGETParams {
	o.SetStartDt(startDt)
	return o
}

// SetStartDt adds the startDt to the get premium lives rpt using g e t params
func (o *GetPremiumLivesRptUsingGETParams) SetStartDt(startDt string) {
	o.StartDt = startDt
}

// WithStopDt adds the stopDt to the get premium lives rpt using g e t params
func (o *GetPremiumLivesRptUsingGETParams) WithStopDt(stopDt string) *GetPremiumLivesRptUsingGETParams {
	o.SetStopDt(stopDt)
	return o
}

// SetStopDt adds the stopDt to the get premium lives rpt using g e t params
func (o *GetPremiumLivesRptUsingGETParams) SetStopDt(stopDt string) {
	o.StopDt = stopDt
}

// WithVarianceFormat adds the varianceFormat to the get premium lives rpt using g e t params
func (o *GetPremiumLivesRptUsingGETParams) WithVarianceFormat(varianceFormat string) *GetPremiumLivesRptUsingGETParams {
	o.SetVarianceFormat(varianceFormat)
	return o
}

// SetVarianceFormat adds the varianceFormat to the get premium lives rpt using g e t params
func (o *GetPremiumLivesRptUsingGETParams) SetVarianceFormat(varianceFormat string) {
	o.VarianceFormat = varianceFormat
}

// WithVarianceLevel adds the varianceLevel to the get premium lives rpt using g e t params
func (o *GetPremiumLivesRptUsingGETParams) WithVarianceLevel(varianceLevel *string) *GetPremiumLivesRptUsingGETParams {
	o.SetVarianceLevel(varianceLevel)
	return o
}

// SetVarianceLevel adds the varianceLevel to the get premium lives rpt using g e t params
func (o *GetPremiumLivesRptUsingGETParams) SetVarianceLevel(varianceLevel *string) {
	o.VarianceLevel = varianceLevel
}

// WriteToRequest writes these params to a swagger request
func (o *GetPremiumLivesRptUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param policyNumber
	qrPolicyNumber := o.PolicyNumber
	qPolicyNumber := qrPolicyNumber
	if qPolicyNumber != "" {

		if err := r.SetQueryParam("policyNumber", qPolicyNumber); err != nil {
			return err
		}
	}

	// query param requestApplication
	qrRequestApplication := o.RequestApplication
	qRequestApplication := qrRequestApplication
	if qRequestApplication != "" {

		if err := r.SetQueryParam("requestApplication", qRequestApplication); err != nil {
			return err
		}
	}

	// query param requestUser
	qrRequestUser := o.RequestUser
	qRequestUser := qrRequestUser
	if qRequestUser != "" {

		if err := r.SetQueryParam("requestUser", qRequestUser); err != nil {
			return err
		}
	}

	// query param startDt
	qrStartDt := o.StartDt
	qStartDt := qrStartDt
	if qStartDt != "" {

		if err := r.SetQueryParam("startDt", qStartDt); err != nil {
			return err
		}
	}

	// query param stopDt
	qrStopDt := o.StopDt
	qStopDt := qrStopDt
	if qStopDt != "" {

		if err := r.SetQueryParam("stopDt", qStopDt); err != nil {
			return err
		}
	}

	// query param varianceFormat
	qrVarianceFormat := o.VarianceFormat
	qVarianceFormat := qrVarianceFormat
	if qVarianceFormat != "" {

		if err := r.SetQueryParam("varianceFormat", qVarianceFormat); err != nil {
			return err
		}
	}

	if o.VarianceLevel != nil {

		// query param varianceLevel
		var qrVarianceLevel string

		if o.VarianceLevel != nil {
			qrVarianceLevel = *o.VarianceLevel
		}
		qVarianceLevel := qrVarianceLevel
		if qVarianceLevel != "" {

			if err := r.SetQueryParam("varianceLevel", qVarianceLevel); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
