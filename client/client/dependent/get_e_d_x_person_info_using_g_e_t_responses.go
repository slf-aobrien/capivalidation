// Code generated by go-swagger; DO NOT EDIT.

package dependent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetEDXPersonInfoUsingGETReader is a Reader for the GetEDXPersonInfoUsingGET structure.
type GetEDXPersonInfoUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEDXPersonInfoUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEDXPersonInfoUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetEDXPersonInfoUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetEDXPersonInfoUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEDXPersonInfoUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEDXPersonInfoUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEDXPersonInfoUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/dependent/edxPersonInfo] getEDXPersonInfoUsingGET", response, response.Code())
	}
}

// NewGetEDXPersonInfoUsingGETOK creates a GetEDXPersonInfoUsingGETOK with default headers values
func NewGetEDXPersonInfoUsingGETOK() *GetEDXPersonInfoUsingGETOK {
	return &GetEDXPersonInfoUsingGETOK{}
}

/*
GetEDXPersonInfoUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetEDXPersonInfoUsingGETOK struct {
	Payload *models.ResponseWrapperDependentDTO
}

// IsSuccess returns true when this get e d x person info using g e t o k response has a 2xx status code
func (o *GetEDXPersonInfoUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get e d x person info using g e t o k response has a 3xx status code
func (o *GetEDXPersonInfoUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x person info using g e t o k response has a 4xx status code
func (o *GetEDXPersonInfoUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get e d x person info using g e t o k response has a 5xx status code
func (o *GetEDXPersonInfoUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x person info using g e t o k response a status code equal to that given
func (o *GetEDXPersonInfoUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get e d x person info using g e t o k response
func (o *GetEDXPersonInfoUsingGETOK) Code() int {
	return 200
}

func (o *GetEDXPersonInfoUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/dependent/edxPersonInfo][%d] getEDXPersonInfoUsingGETOK %s", 200, payload)
}

func (o *GetEDXPersonInfoUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/dependent/edxPersonInfo][%d] getEDXPersonInfoUsingGETOK %s", 200, payload)
}

func (o *GetEDXPersonInfoUsingGETOK) GetPayload() *models.ResponseWrapperDependentDTO {
	return o.Payload
}

func (o *GetEDXPersonInfoUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperDependentDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEDXPersonInfoUsingGETBadRequest creates a GetEDXPersonInfoUsingGETBadRequest with default headers values
func NewGetEDXPersonInfoUsingGETBadRequest() *GetEDXPersonInfoUsingGETBadRequest {
	return &GetEDXPersonInfoUsingGETBadRequest{}
}

/*
GetEDXPersonInfoUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetEDXPersonInfoUsingGETBadRequest struct {
}

// IsSuccess returns true when this get e d x person info using g e t bad request response has a 2xx status code
func (o *GetEDXPersonInfoUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x person info using g e t bad request response has a 3xx status code
func (o *GetEDXPersonInfoUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x person info using g e t bad request response has a 4xx status code
func (o *GetEDXPersonInfoUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get e d x person info using g e t bad request response has a 5xx status code
func (o *GetEDXPersonInfoUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x person info using g e t bad request response a status code equal to that given
func (o *GetEDXPersonInfoUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get e d x person info using g e t bad request response
func (o *GetEDXPersonInfoUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetEDXPersonInfoUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/dependent/edxPersonInfo][%d] getEDXPersonInfoUsingGETBadRequest", 400)
}

func (o *GetEDXPersonInfoUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/dependent/edxPersonInfo][%d] getEDXPersonInfoUsingGETBadRequest", 400)
}

func (o *GetEDXPersonInfoUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEDXPersonInfoUsingGETUnauthorized creates a GetEDXPersonInfoUsingGETUnauthorized with default headers values
func NewGetEDXPersonInfoUsingGETUnauthorized() *GetEDXPersonInfoUsingGETUnauthorized {
	return &GetEDXPersonInfoUsingGETUnauthorized{}
}

/*
GetEDXPersonInfoUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetEDXPersonInfoUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get e d x person info using g e t unauthorized response has a 2xx status code
func (o *GetEDXPersonInfoUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x person info using g e t unauthorized response has a 3xx status code
func (o *GetEDXPersonInfoUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x person info using g e t unauthorized response has a 4xx status code
func (o *GetEDXPersonInfoUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get e d x person info using g e t unauthorized response has a 5xx status code
func (o *GetEDXPersonInfoUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x person info using g e t unauthorized response a status code equal to that given
func (o *GetEDXPersonInfoUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get e d x person info using g e t unauthorized response
func (o *GetEDXPersonInfoUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetEDXPersonInfoUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/dependent/edxPersonInfo][%d] getEDXPersonInfoUsingGETUnauthorized", 401)
}

func (o *GetEDXPersonInfoUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/dependent/edxPersonInfo][%d] getEDXPersonInfoUsingGETUnauthorized", 401)
}

func (o *GetEDXPersonInfoUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEDXPersonInfoUsingGETForbidden creates a GetEDXPersonInfoUsingGETForbidden with default headers values
func NewGetEDXPersonInfoUsingGETForbidden() *GetEDXPersonInfoUsingGETForbidden {
	return &GetEDXPersonInfoUsingGETForbidden{}
}

/*
GetEDXPersonInfoUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetEDXPersonInfoUsingGETForbidden struct {
}

// IsSuccess returns true when this get e d x person info using g e t forbidden response has a 2xx status code
func (o *GetEDXPersonInfoUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x person info using g e t forbidden response has a 3xx status code
func (o *GetEDXPersonInfoUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x person info using g e t forbidden response has a 4xx status code
func (o *GetEDXPersonInfoUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get e d x person info using g e t forbidden response has a 5xx status code
func (o *GetEDXPersonInfoUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x person info using g e t forbidden response a status code equal to that given
func (o *GetEDXPersonInfoUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get e d x person info using g e t forbidden response
func (o *GetEDXPersonInfoUsingGETForbidden) Code() int {
	return 403
}

func (o *GetEDXPersonInfoUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/dependent/edxPersonInfo][%d] getEDXPersonInfoUsingGETForbidden", 403)
}

func (o *GetEDXPersonInfoUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/dependent/edxPersonInfo][%d] getEDXPersonInfoUsingGETForbidden", 403)
}

func (o *GetEDXPersonInfoUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEDXPersonInfoUsingGETNotFound creates a GetEDXPersonInfoUsingGETNotFound with default headers values
func NewGetEDXPersonInfoUsingGETNotFound() *GetEDXPersonInfoUsingGETNotFound {
	return &GetEDXPersonInfoUsingGETNotFound{}
}

/*
GetEDXPersonInfoUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetEDXPersonInfoUsingGETNotFound struct {
}

// IsSuccess returns true when this get e d x person info using g e t not found response has a 2xx status code
func (o *GetEDXPersonInfoUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x person info using g e t not found response has a 3xx status code
func (o *GetEDXPersonInfoUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x person info using g e t not found response has a 4xx status code
func (o *GetEDXPersonInfoUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get e d x person info using g e t not found response has a 5xx status code
func (o *GetEDXPersonInfoUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x person info using g e t not found response a status code equal to that given
func (o *GetEDXPersonInfoUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get e d x person info using g e t not found response
func (o *GetEDXPersonInfoUsingGETNotFound) Code() int {
	return 404
}

func (o *GetEDXPersonInfoUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/dependent/edxPersonInfo][%d] getEDXPersonInfoUsingGETNotFound", 404)
}

func (o *GetEDXPersonInfoUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/dependent/edxPersonInfo][%d] getEDXPersonInfoUsingGETNotFound", 404)
}

func (o *GetEDXPersonInfoUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEDXPersonInfoUsingGETInternalServerError creates a GetEDXPersonInfoUsingGETInternalServerError with default headers values
func NewGetEDXPersonInfoUsingGETInternalServerError() *GetEDXPersonInfoUsingGETInternalServerError {
	return &GetEDXPersonInfoUsingGETInternalServerError{}
}

/*
GetEDXPersonInfoUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetEDXPersonInfoUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get e d x person info using g e t internal server error response has a 2xx status code
func (o *GetEDXPersonInfoUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x person info using g e t internal server error response has a 3xx status code
func (o *GetEDXPersonInfoUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x person info using g e t internal server error response has a 4xx status code
func (o *GetEDXPersonInfoUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get e d x person info using g e t internal server error response has a 5xx status code
func (o *GetEDXPersonInfoUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get e d x person info using g e t internal server error response a status code equal to that given
func (o *GetEDXPersonInfoUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get e d x person info using g e t internal server error response
func (o *GetEDXPersonInfoUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetEDXPersonInfoUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/dependent/edxPersonInfo][%d] getEDXPersonInfoUsingGETInternalServerError", 500)
}

func (o *GetEDXPersonInfoUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/dependent/edxPersonInfo][%d] getEDXPersonInfoUsingGETInternalServerError", 500)
}

func (o *GetEDXPersonInfoUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
