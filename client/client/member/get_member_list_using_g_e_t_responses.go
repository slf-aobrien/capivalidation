// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetMemberListUsingGETReader is a Reader for the GetMemberListUsingGET structure.
type GetMemberListUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMemberListUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMemberListUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetMemberListUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetMemberListUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMemberListUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMemberListUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetMemberListUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/member/list] getMemberListUsingGET", response, response.Code())
	}
}

// NewGetMemberListUsingGETOK creates a GetMemberListUsingGETOK with default headers values
func NewGetMemberListUsingGETOK() *GetMemberListUsingGETOK {
	return &GetMemberListUsingGETOK{}
}

/*
GetMemberListUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetMemberListUsingGETOK struct {
	Payload *models.ResponseWrapperMemberListDTO
}

// IsSuccess returns true when this get member list using g e t o k response has a 2xx status code
func (o *GetMemberListUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get member list using g e t o k response has a 3xx status code
func (o *GetMemberListUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member list using g e t o k response has a 4xx status code
func (o *GetMemberListUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get member list using g e t o k response has a 5xx status code
func (o *GetMemberListUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get member list using g e t o k response a status code equal to that given
func (o *GetMemberListUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get member list using g e t o k response
func (o *GetMemberListUsingGETOK) Code() int {
	return 200
}

func (o *GetMemberListUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/list][%d] getMemberListUsingGETOK %s", 200, payload)
}

func (o *GetMemberListUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/list][%d] getMemberListUsingGETOK %s", 200, payload)
}

func (o *GetMemberListUsingGETOK) GetPayload() *models.ResponseWrapperMemberListDTO {
	return o.Payload
}

func (o *GetMemberListUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperMemberListDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMemberListUsingGETBadRequest creates a GetMemberListUsingGETBadRequest with default headers values
func NewGetMemberListUsingGETBadRequest() *GetMemberListUsingGETBadRequest {
	return &GetMemberListUsingGETBadRequest{}
}

/*
GetMemberListUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetMemberListUsingGETBadRequest struct {
}

// IsSuccess returns true when this get member list using g e t bad request response has a 2xx status code
func (o *GetMemberListUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member list using g e t bad request response has a 3xx status code
func (o *GetMemberListUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member list using g e t bad request response has a 4xx status code
func (o *GetMemberListUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member list using g e t bad request response has a 5xx status code
func (o *GetMemberListUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get member list using g e t bad request response a status code equal to that given
func (o *GetMemberListUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get member list using g e t bad request response
func (o *GetMemberListUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetMemberListUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/list][%d] getMemberListUsingGETBadRequest", 400)
}

func (o *GetMemberListUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/list][%d] getMemberListUsingGETBadRequest", 400)
}

func (o *GetMemberListUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberListUsingGETUnauthorized creates a GetMemberListUsingGETUnauthorized with default headers values
func NewGetMemberListUsingGETUnauthorized() *GetMemberListUsingGETUnauthorized {
	return &GetMemberListUsingGETUnauthorized{}
}

/*
GetMemberListUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetMemberListUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get member list using g e t unauthorized response has a 2xx status code
func (o *GetMemberListUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member list using g e t unauthorized response has a 3xx status code
func (o *GetMemberListUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member list using g e t unauthorized response has a 4xx status code
func (o *GetMemberListUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member list using g e t unauthorized response has a 5xx status code
func (o *GetMemberListUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get member list using g e t unauthorized response a status code equal to that given
func (o *GetMemberListUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get member list using g e t unauthorized response
func (o *GetMemberListUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetMemberListUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/list][%d] getMemberListUsingGETUnauthorized", 401)
}

func (o *GetMemberListUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/list][%d] getMemberListUsingGETUnauthorized", 401)
}

func (o *GetMemberListUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberListUsingGETForbidden creates a GetMemberListUsingGETForbidden with default headers values
func NewGetMemberListUsingGETForbidden() *GetMemberListUsingGETForbidden {
	return &GetMemberListUsingGETForbidden{}
}

/*
GetMemberListUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetMemberListUsingGETForbidden struct {
}

// IsSuccess returns true when this get member list using g e t forbidden response has a 2xx status code
func (o *GetMemberListUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member list using g e t forbidden response has a 3xx status code
func (o *GetMemberListUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member list using g e t forbidden response has a 4xx status code
func (o *GetMemberListUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member list using g e t forbidden response has a 5xx status code
func (o *GetMemberListUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get member list using g e t forbidden response a status code equal to that given
func (o *GetMemberListUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get member list using g e t forbidden response
func (o *GetMemberListUsingGETForbidden) Code() int {
	return 403
}

func (o *GetMemberListUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/list][%d] getMemberListUsingGETForbidden", 403)
}

func (o *GetMemberListUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/list][%d] getMemberListUsingGETForbidden", 403)
}

func (o *GetMemberListUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberListUsingGETNotFound creates a GetMemberListUsingGETNotFound with default headers values
func NewGetMemberListUsingGETNotFound() *GetMemberListUsingGETNotFound {
	return &GetMemberListUsingGETNotFound{}
}

/*
GetMemberListUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetMemberListUsingGETNotFound struct {
}

// IsSuccess returns true when this get member list using g e t not found response has a 2xx status code
func (o *GetMemberListUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member list using g e t not found response has a 3xx status code
func (o *GetMemberListUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member list using g e t not found response has a 4xx status code
func (o *GetMemberListUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member list using g e t not found response has a 5xx status code
func (o *GetMemberListUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get member list using g e t not found response a status code equal to that given
func (o *GetMemberListUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get member list using g e t not found response
func (o *GetMemberListUsingGETNotFound) Code() int {
	return 404
}

func (o *GetMemberListUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/list][%d] getMemberListUsingGETNotFound", 404)
}

func (o *GetMemberListUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/list][%d] getMemberListUsingGETNotFound", 404)
}

func (o *GetMemberListUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberListUsingGETInternalServerError creates a GetMemberListUsingGETInternalServerError with default headers values
func NewGetMemberListUsingGETInternalServerError() *GetMemberListUsingGETInternalServerError {
	return &GetMemberListUsingGETInternalServerError{}
}

/*
GetMemberListUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetMemberListUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get member list using g e t internal server error response has a 2xx status code
func (o *GetMemberListUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member list using g e t internal server error response has a 3xx status code
func (o *GetMemberListUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member list using g e t internal server error response has a 4xx status code
func (o *GetMemberListUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get member list using g e t internal server error response has a 5xx status code
func (o *GetMemberListUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get member list using g e t internal server error response a status code equal to that given
func (o *GetMemberListUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get member list using g e t internal server error response
func (o *GetMemberListUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetMemberListUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/list][%d] getMemberListUsingGETInternalServerError", 500)
}

func (o *GetMemberListUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/list][%d] getMemberListUsingGETInternalServerError", 500)
}

func (o *GetMemberListUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
