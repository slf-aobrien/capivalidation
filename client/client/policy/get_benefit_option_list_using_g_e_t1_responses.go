// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetBenefitOptionListUsingGET1Reader is a Reader for the GetBenefitOptionListUsingGET1 structure.
type GetBenefitOptionListUsingGET1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBenefitOptionListUsingGET1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBenefitOptionListUsingGET1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBenefitOptionListUsingGET1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBenefitOptionListUsingGET1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBenefitOptionListUsingGET1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBenefitOptionListUsingGET1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBenefitOptionListUsingGET1InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}] getBenefitOptionListUsingGET_1", response, response.Code())
	}
}

// NewGetBenefitOptionListUsingGET1OK creates a GetBenefitOptionListUsingGET1OK with default headers values
func NewGetBenefitOptionListUsingGET1OK() *GetBenefitOptionListUsingGET1OK {
	return &GetBenefitOptionListUsingGET1OK{}
}

/*
GetBenefitOptionListUsingGET1OK describes a response with status code 200, with default header values.

Success
*/
type GetBenefitOptionListUsingGET1OK struct {
	Payload *models.ResponseWrapperListBenefitDTO
}

// IsSuccess returns true when this get benefit option list using g e t1 o k response has a 2xx status code
func (o *GetBenefitOptionListUsingGET1OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get benefit option list using g e t1 o k response has a 3xx status code
func (o *GetBenefitOptionListUsingGET1OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit option list using g e t1 o k response has a 4xx status code
func (o *GetBenefitOptionListUsingGET1OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get benefit option list using g e t1 o k response has a 5xx status code
func (o *GetBenefitOptionListUsingGET1OK) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit option list using g e t1 o k response a status code equal to that given
func (o *GetBenefitOptionListUsingGET1OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get benefit option list using g e t1 o k response
func (o *GetBenefitOptionListUsingGET1OK) Code() int {
	return 200
}

func (o *GetBenefitOptionListUsingGET1OK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}][%d] getBenefitOptionListUsingGET1OK %s", 200, payload)
}

func (o *GetBenefitOptionListUsingGET1OK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}][%d] getBenefitOptionListUsingGET1OK %s", 200, payload)
}

func (o *GetBenefitOptionListUsingGET1OK) GetPayload() *models.ResponseWrapperListBenefitDTO {
	return o.Payload
}

func (o *GetBenefitOptionListUsingGET1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperListBenefitDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBenefitOptionListUsingGET1BadRequest creates a GetBenefitOptionListUsingGET1BadRequest with default headers values
func NewGetBenefitOptionListUsingGET1BadRequest() *GetBenefitOptionListUsingGET1BadRequest {
	return &GetBenefitOptionListUsingGET1BadRequest{}
}

/*
GetBenefitOptionListUsingGET1BadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetBenefitOptionListUsingGET1BadRequest struct {
}

// IsSuccess returns true when this get benefit option list using g e t1 bad request response has a 2xx status code
func (o *GetBenefitOptionListUsingGET1BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit option list using g e t1 bad request response has a 3xx status code
func (o *GetBenefitOptionListUsingGET1BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit option list using g e t1 bad request response has a 4xx status code
func (o *GetBenefitOptionListUsingGET1BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get benefit option list using g e t1 bad request response has a 5xx status code
func (o *GetBenefitOptionListUsingGET1BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit option list using g e t1 bad request response a status code equal to that given
func (o *GetBenefitOptionListUsingGET1BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get benefit option list using g e t1 bad request response
func (o *GetBenefitOptionListUsingGET1BadRequest) Code() int {
	return 400
}

func (o *GetBenefitOptionListUsingGET1BadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}][%d] getBenefitOptionListUsingGET1BadRequest", 400)
}

func (o *GetBenefitOptionListUsingGET1BadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}][%d] getBenefitOptionListUsingGET1BadRequest", 400)
}

func (o *GetBenefitOptionListUsingGET1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBenefitOptionListUsingGET1Unauthorized creates a GetBenefitOptionListUsingGET1Unauthorized with default headers values
func NewGetBenefitOptionListUsingGET1Unauthorized() *GetBenefitOptionListUsingGET1Unauthorized {
	return &GetBenefitOptionListUsingGET1Unauthorized{}
}

/*
GetBenefitOptionListUsingGET1Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetBenefitOptionListUsingGET1Unauthorized struct {
}

// IsSuccess returns true when this get benefit option list using g e t1 unauthorized response has a 2xx status code
func (o *GetBenefitOptionListUsingGET1Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit option list using g e t1 unauthorized response has a 3xx status code
func (o *GetBenefitOptionListUsingGET1Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit option list using g e t1 unauthorized response has a 4xx status code
func (o *GetBenefitOptionListUsingGET1Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get benefit option list using g e t1 unauthorized response has a 5xx status code
func (o *GetBenefitOptionListUsingGET1Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit option list using g e t1 unauthorized response a status code equal to that given
func (o *GetBenefitOptionListUsingGET1Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get benefit option list using g e t1 unauthorized response
func (o *GetBenefitOptionListUsingGET1Unauthorized) Code() int {
	return 401
}

func (o *GetBenefitOptionListUsingGET1Unauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}][%d] getBenefitOptionListUsingGET1Unauthorized", 401)
}

func (o *GetBenefitOptionListUsingGET1Unauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}][%d] getBenefitOptionListUsingGET1Unauthorized", 401)
}

func (o *GetBenefitOptionListUsingGET1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBenefitOptionListUsingGET1Forbidden creates a GetBenefitOptionListUsingGET1Forbidden with default headers values
func NewGetBenefitOptionListUsingGET1Forbidden() *GetBenefitOptionListUsingGET1Forbidden {
	return &GetBenefitOptionListUsingGET1Forbidden{}
}

/*
GetBenefitOptionListUsingGET1Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBenefitOptionListUsingGET1Forbidden struct {
}

// IsSuccess returns true when this get benefit option list using g e t1 forbidden response has a 2xx status code
func (o *GetBenefitOptionListUsingGET1Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit option list using g e t1 forbidden response has a 3xx status code
func (o *GetBenefitOptionListUsingGET1Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit option list using g e t1 forbidden response has a 4xx status code
func (o *GetBenefitOptionListUsingGET1Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get benefit option list using g e t1 forbidden response has a 5xx status code
func (o *GetBenefitOptionListUsingGET1Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit option list using g e t1 forbidden response a status code equal to that given
func (o *GetBenefitOptionListUsingGET1Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get benefit option list using g e t1 forbidden response
func (o *GetBenefitOptionListUsingGET1Forbidden) Code() int {
	return 403
}

func (o *GetBenefitOptionListUsingGET1Forbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}][%d] getBenefitOptionListUsingGET1Forbidden", 403)
}

func (o *GetBenefitOptionListUsingGET1Forbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}][%d] getBenefitOptionListUsingGET1Forbidden", 403)
}

func (o *GetBenefitOptionListUsingGET1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBenefitOptionListUsingGET1NotFound creates a GetBenefitOptionListUsingGET1NotFound with default headers values
func NewGetBenefitOptionListUsingGET1NotFound() *GetBenefitOptionListUsingGET1NotFound {
	return &GetBenefitOptionListUsingGET1NotFound{}
}

/*
GetBenefitOptionListUsingGET1NotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetBenefitOptionListUsingGET1NotFound struct {
}

// IsSuccess returns true when this get benefit option list using g e t1 not found response has a 2xx status code
func (o *GetBenefitOptionListUsingGET1NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit option list using g e t1 not found response has a 3xx status code
func (o *GetBenefitOptionListUsingGET1NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit option list using g e t1 not found response has a 4xx status code
func (o *GetBenefitOptionListUsingGET1NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get benefit option list using g e t1 not found response has a 5xx status code
func (o *GetBenefitOptionListUsingGET1NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit option list using g e t1 not found response a status code equal to that given
func (o *GetBenefitOptionListUsingGET1NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get benefit option list using g e t1 not found response
func (o *GetBenefitOptionListUsingGET1NotFound) Code() int {
	return 404
}

func (o *GetBenefitOptionListUsingGET1NotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}][%d] getBenefitOptionListUsingGET1NotFound", 404)
}

func (o *GetBenefitOptionListUsingGET1NotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}][%d] getBenefitOptionListUsingGET1NotFound", 404)
}

func (o *GetBenefitOptionListUsingGET1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBenefitOptionListUsingGET1InternalServerError creates a GetBenefitOptionListUsingGET1InternalServerError with default headers values
func NewGetBenefitOptionListUsingGET1InternalServerError() *GetBenefitOptionListUsingGET1InternalServerError {
	return &GetBenefitOptionListUsingGET1InternalServerError{}
}

/*
GetBenefitOptionListUsingGET1InternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetBenefitOptionListUsingGET1InternalServerError struct {
}

// IsSuccess returns true when this get benefit option list using g e t1 internal server error response has a 2xx status code
func (o *GetBenefitOptionListUsingGET1InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit option list using g e t1 internal server error response has a 3xx status code
func (o *GetBenefitOptionListUsingGET1InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit option list using g e t1 internal server error response has a 4xx status code
func (o *GetBenefitOptionListUsingGET1InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get benefit option list using g e t1 internal server error response has a 5xx status code
func (o *GetBenefitOptionListUsingGET1InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get benefit option list using g e t1 internal server error response a status code equal to that given
func (o *GetBenefitOptionListUsingGET1InternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get benefit option list using g e t1 internal server error response
func (o *GetBenefitOptionListUsingGET1InternalServerError) Code() int {
	return 500
}

func (o *GetBenefitOptionListUsingGET1InternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}][%d] getBenefitOptionListUsingGET1InternalServerError", 500)
}

func (o *GetBenefitOptionListUsingGET1InternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}][%d] getBenefitOptionListUsingGET1InternalServerError", 500)
}

func (o *GetBenefitOptionListUsingGET1InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
