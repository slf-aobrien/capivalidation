// Code generated by go-swagger; DO NOT EDIT.

package bill

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetArrearsBillUsingGETReader is a Reader for the GetArrearsBillUsingGET structure.
type GetArrearsBillUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArrearsBillUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArrearsBillUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetArrearsBillUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetArrearsBillUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetArrearsBillUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArrearsBillUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetArrearsBillUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/bill/arrears] getArrearsBillUsingGET", response, response.Code())
	}
}

// NewGetArrearsBillUsingGETOK creates a GetArrearsBillUsingGETOK with default headers values
func NewGetArrearsBillUsingGETOK() *GetArrearsBillUsingGETOK {
	return &GetArrearsBillUsingGETOK{}
}

/*
GetArrearsBillUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetArrearsBillUsingGETOK struct {
	Payload *models.ResponseWrapperArrearsBillPageDTO
}

// IsSuccess returns true when this get arrears bill using g e t o k response has a 2xx status code
func (o *GetArrearsBillUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get arrears bill using g e t o k response has a 3xx status code
func (o *GetArrearsBillUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get arrears bill using g e t o k response has a 4xx status code
func (o *GetArrearsBillUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get arrears bill using g e t o k response has a 5xx status code
func (o *GetArrearsBillUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get arrears bill using g e t o k response a status code equal to that given
func (o *GetArrearsBillUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get arrears bill using g e t o k response
func (o *GetArrearsBillUsingGETOK) Code() int {
	return 200
}

func (o *GetArrearsBillUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/bill/arrears][%d] getArrearsBillUsingGETOK %s", 200, payload)
}

func (o *GetArrearsBillUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/bill/arrears][%d] getArrearsBillUsingGETOK %s", 200, payload)
}

func (o *GetArrearsBillUsingGETOK) GetPayload() *models.ResponseWrapperArrearsBillPageDTO {
	return o.Payload
}

func (o *GetArrearsBillUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperArrearsBillPageDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArrearsBillUsingGETBadRequest creates a GetArrearsBillUsingGETBadRequest with default headers values
func NewGetArrearsBillUsingGETBadRequest() *GetArrearsBillUsingGETBadRequest {
	return &GetArrearsBillUsingGETBadRequest{}
}

/*
GetArrearsBillUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetArrearsBillUsingGETBadRequest struct {
}

// IsSuccess returns true when this get arrears bill using g e t bad request response has a 2xx status code
func (o *GetArrearsBillUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get arrears bill using g e t bad request response has a 3xx status code
func (o *GetArrearsBillUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get arrears bill using g e t bad request response has a 4xx status code
func (o *GetArrearsBillUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get arrears bill using g e t bad request response has a 5xx status code
func (o *GetArrearsBillUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get arrears bill using g e t bad request response a status code equal to that given
func (o *GetArrearsBillUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get arrears bill using g e t bad request response
func (o *GetArrearsBillUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetArrearsBillUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/arrears][%d] getArrearsBillUsingGETBadRequest", 400)
}

func (o *GetArrearsBillUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/arrears][%d] getArrearsBillUsingGETBadRequest", 400)
}

func (o *GetArrearsBillUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetArrearsBillUsingGETUnauthorized creates a GetArrearsBillUsingGETUnauthorized with default headers values
func NewGetArrearsBillUsingGETUnauthorized() *GetArrearsBillUsingGETUnauthorized {
	return &GetArrearsBillUsingGETUnauthorized{}
}

/*
GetArrearsBillUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetArrearsBillUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get arrears bill using g e t unauthorized response has a 2xx status code
func (o *GetArrearsBillUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get arrears bill using g e t unauthorized response has a 3xx status code
func (o *GetArrearsBillUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get arrears bill using g e t unauthorized response has a 4xx status code
func (o *GetArrearsBillUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get arrears bill using g e t unauthorized response has a 5xx status code
func (o *GetArrearsBillUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get arrears bill using g e t unauthorized response a status code equal to that given
func (o *GetArrearsBillUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get arrears bill using g e t unauthorized response
func (o *GetArrearsBillUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetArrearsBillUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/arrears][%d] getArrearsBillUsingGETUnauthorized", 401)
}

func (o *GetArrearsBillUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/arrears][%d] getArrearsBillUsingGETUnauthorized", 401)
}

func (o *GetArrearsBillUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetArrearsBillUsingGETForbidden creates a GetArrearsBillUsingGETForbidden with default headers values
func NewGetArrearsBillUsingGETForbidden() *GetArrearsBillUsingGETForbidden {
	return &GetArrearsBillUsingGETForbidden{}
}

/*
GetArrearsBillUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetArrearsBillUsingGETForbidden struct {
}

// IsSuccess returns true when this get arrears bill using g e t forbidden response has a 2xx status code
func (o *GetArrearsBillUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get arrears bill using g e t forbidden response has a 3xx status code
func (o *GetArrearsBillUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get arrears bill using g e t forbidden response has a 4xx status code
func (o *GetArrearsBillUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get arrears bill using g e t forbidden response has a 5xx status code
func (o *GetArrearsBillUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get arrears bill using g e t forbidden response a status code equal to that given
func (o *GetArrearsBillUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get arrears bill using g e t forbidden response
func (o *GetArrearsBillUsingGETForbidden) Code() int {
	return 403
}

func (o *GetArrearsBillUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/arrears][%d] getArrearsBillUsingGETForbidden", 403)
}

func (o *GetArrearsBillUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/arrears][%d] getArrearsBillUsingGETForbidden", 403)
}

func (o *GetArrearsBillUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetArrearsBillUsingGETNotFound creates a GetArrearsBillUsingGETNotFound with default headers values
func NewGetArrearsBillUsingGETNotFound() *GetArrearsBillUsingGETNotFound {
	return &GetArrearsBillUsingGETNotFound{}
}

/*
GetArrearsBillUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetArrearsBillUsingGETNotFound struct {
}

// IsSuccess returns true when this get arrears bill using g e t not found response has a 2xx status code
func (o *GetArrearsBillUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get arrears bill using g e t not found response has a 3xx status code
func (o *GetArrearsBillUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get arrears bill using g e t not found response has a 4xx status code
func (o *GetArrearsBillUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get arrears bill using g e t not found response has a 5xx status code
func (o *GetArrearsBillUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get arrears bill using g e t not found response a status code equal to that given
func (o *GetArrearsBillUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get arrears bill using g e t not found response
func (o *GetArrearsBillUsingGETNotFound) Code() int {
	return 404
}

func (o *GetArrearsBillUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/arrears][%d] getArrearsBillUsingGETNotFound", 404)
}

func (o *GetArrearsBillUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/arrears][%d] getArrearsBillUsingGETNotFound", 404)
}

func (o *GetArrearsBillUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetArrearsBillUsingGETInternalServerError creates a GetArrearsBillUsingGETInternalServerError with default headers values
func NewGetArrearsBillUsingGETInternalServerError() *GetArrearsBillUsingGETInternalServerError {
	return &GetArrearsBillUsingGETInternalServerError{}
}

/*
GetArrearsBillUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetArrearsBillUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get arrears bill using g e t internal server error response has a 2xx status code
func (o *GetArrearsBillUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get arrears bill using g e t internal server error response has a 3xx status code
func (o *GetArrearsBillUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get arrears bill using g e t internal server error response has a 4xx status code
func (o *GetArrearsBillUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get arrears bill using g e t internal server error response has a 5xx status code
func (o *GetArrearsBillUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get arrears bill using g e t internal server error response a status code equal to that given
func (o *GetArrearsBillUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get arrears bill using g e t internal server error response
func (o *GetArrearsBillUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetArrearsBillUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/arrears][%d] getArrearsBillUsingGETInternalServerError", 500)
}

func (o *GetArrearsBillUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/arrears][%d] getArrearsBillUsingGETInternalServerError", 500)
}

func (o *GetArrearsBillUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
