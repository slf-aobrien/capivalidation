// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdatePolicyBenefitOptionsUsingPUTReader is a Reader for the UpdatePolicyBenefitOptionsUsingPUT structure.
type UpdatePolicyBenefitOptionsUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePolicyBenefitOptionsUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdatePolicyBenefitOptionsUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdatePolicyBenefitOptionsUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdatePolicyBenefitOptionsUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdatePolicyBenefitOptionsUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdatePolicyBenefitOptionsUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdatePolicyBenefitOptionsUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdatePolicyBenefitOptionsUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/policy/policyBenefitOptions] updatePolicyBenefitOptionsUsingPUT", response, response.Code())
	}
}

// NewUpdatePolicyBenefitOptionsUsingPUTOK creates a UpdatePolicyBenefitOptionsUsingPUTOK with default headers values
func NewUpdatePolicyBenefitOptionsUsingPUTOK() *UpdatePolicyBenefitOptionsUsingPUTOK {
	return &UpdatePolicyBenefitOptionsUsingPUTOK{}
}

/*
UpdatePolicyBenefitOptionsUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdatePolicyBenefitOptionsUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update policy benefit options using p u t o k response has a 2xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update policy benefit options using p u t o k response has a 3xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy benefit options using p u t o k response has a 4xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update policy benefit options using p u t o k response has a 5xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy benefit options using p u t o k response a status code equal to that given
func (o *UpdatePolicyBenefitOptionsUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update policy benefit options using p u t o k response
func (o *UpdatePolicyBenefitOptionsUsingPUTOK) Code() int {
	return 200
}

func (o *UpdatePolicyBenefitOptionsUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyBenefitOptions][%d] updatePolicyBenefitOptionsUsingPUTOK %s", 200, payload)
}

func (o *UpdatePolicyBenefitOptionsUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyBenefitOptions][%d] updatePolicyBenefitOptionsUsingPUTOK %s", 200, payload)
}

func (o *UpdatePolicyBenefitOptionsUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdatePolicyBenefitOptionsUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePolicyBenefitOptionsUsingPUTCreated creates a UpdatePolicyBenefitOptionsUsingPUTCreated with default headers values
func NewUpdatePolicyBenefitOptionsUsingPUTCreated() *UpdatePolicyBenefitOptionsUsingPUTCreated {
	return &UpdatePolicyBenefitOptionsUsingPUTCreated{}
}

/*
UpdatePolicyBenefitOptionsUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdatePolicyBenefitOptionsUsingPUTCreated struct {
}

// IsSuccess returns true when this update policy benefit options using p u t created response has a 2xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update policy benefit options using p u t created response has a 3xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy benefit options using p u t created response has a 4xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update policy benefit options using p u t created response has a 5xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy benefit options using p u t created response a status code equal to that given
func (o *UpdatePolicyBenefitOptionsUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update policy benefit options using p u t created response
func (o *UpdatePolicyBenefitOptionsUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdatePolicyBenefitOptionsUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyBenefitOptions][%d] updatePolicyBenefitOptionsUsingPUTCreated", 201)
}

func (o *UpdatePolicyBenefitOptionsUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyBenefitOptions][%d] updatePolicyBenefitOptionsUsingPUTCreated", 201)
}

func (o *UpdatePolicyBenefitOptionsUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyBenefitOptionsUsingPUTBadRequest creates a UpdatePolicyBenefitOptionsUsingPUTBadRequest with default headers values
func NewUpdatePolicyBenefitOptionsUsingPUTBadRequest() *UpdatePolicyBenefitOptionsUsingPUTBadRequest {
	return &UpdatePolicyBenefitOptionsUsingPUTBadRequest{}
}

/*
UpdatePolicyBenefitOptionsUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdatePolicyBenefitOptionsUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update policy benefit options using p u t bad request response has a 2xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy benefit options using p u t bad request response has a 3xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy benefit options using p u t bad request response has a 4xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy benefit options using p u t bad request response has a 5xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy benefit options using p u t bad request response a status code equal to that given
func (o *UpdatePolicyBenefitOptionsUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update policy benefit options using p u t bad request response
func (o *UpdatePolicyBenefitOptionsUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdatePolicyBenefitOptionsUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyBenefitOptions][%d] updatePolicyBenefitOptionsUsingPUTBadRequest", 400)
}

func (o *UpdatePolicyBenefitOptionsUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyBenefitOptions][%d] updatePolicyBenefitOptionsUsingPUTBadRequest", 400)
}

func (o *UpdatePolicyBenefitOptionsUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyBenefitOptionsUsingPUTUnauthorized creates a UpdatePolicyBenefitOptionsUsingPUTUnauthorized with default headers values
func NewUpdatePolicyBenefitOptionsUsingPUTUnauthorized() *UpdatePolicyBenefitOptionsUsingPUTUnauthorized {
	return &UpdatePolicyBenefitOptionsUsingPUTUnauthorized{}
}

/*
UpdatePolicyBenefitOptionsUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdatePolicyBenefitOptionsUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update policy benefit options using p u t unauthorized response has a 2xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy benefit options using p u t unauthorized response has a 3xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy benefit options using p u t unauthorized response has a 4xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy benefit options using p u t unauthorized response has a 5xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy benefit options using p u t unauthorized response a status code equal to that given
func (o *UpdatePolicyBenefitOptionsUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update policy benefit options using p u t unauthorized response
func (o *UpdatePolicyBenefitOptionsUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdatePolicyBenefitOptionsUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyBenefitOptions][%d] updatePolicyBenefitOptionsUsingPUTUnauthorized", 401)
}

func (o *UpdatePolicyBenefitOptionsUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyBenefitOptions][%d] updatePolicyBenefitOptionsUsingPUTUnauthorized", 401)
}

func (o *UpdatePolicyBenefitOptionsUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyBenefitOptionsUsingPUTForbidden creates a UpdatePolicyBenefitOptionsUsingPUTForbidden with default headers values
func NewUpdatePolicyBenefitOptionsUsingPUTForbidden() *UpdatePolicyBenefitOptionsUsingPUTForbidden {
	return &UpdatePolicyBenefitOptionsUsingPUTForbidden{}
}

/*
UpdatePolicyBenefitOptionsUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdatePolicyBenefitOptionsUsingPUTForbidden struct {
}

// IsSuccess returns true when this update policy benefit options using p u t forbidden response has a 2xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy benefit options using p u t forbidden response has a 3xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy benefit options using p u t forbidden response has a 4xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy benefit options using p u t forbidden response has a 5xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy benefit options using p u t forbidden response a status code equal to that given
func (o *UpdatePolicyBenefitOptionsUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update policy benefit options using p u t forbidden response
func (o *UpdatePolicyBenefitOptionsUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdatePolicyBenefitOptionsUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyBenefitOptions][%d] updatePolicyBenefitOptionsUsingPUTForbidden", 403)
}

func (o *UpdatePolicyBenefitOptionsUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyBenefitOptions][%d] updatePolicyBenefitOptionsUsingPUTForbidden", 403)
}

func (o *UpdatePolicyBenefitOptionsUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyBenefitOptionsUsingPUTNotFound creates a UpdatePolicyBenefitOptionsUsingPUTNotFound with default headers values
func NewUpdatePolicyBenefitOptionsUsingPUTNotFound() *UpdatePolicyBenefitOptionsUsingPUTNotFound {
	return &UpdatePolicyBenefitOptionsUsingPUTNotFound{}
}

/*
UpdatePolicyBenefitOptionsUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdatePolicyBenefitOptionsUsingPUTNotFound struct {
}

// IsSuccess returns true when this update policy benefit options using p u t not found response has a 2xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy benefit options using p u t not found response has a 3xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy benefit options using p u t not found response has a 4xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy benefit options using p u t not found response has a 5xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy benefit options using p u t not found response a status code equal to that given
func (o *UpdatePolicyBenefitOptionsUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update policy benefit options using p u t not found response
func (o *UpdatePolicyBenefitOptionsUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdatePolicyBenefitOptionsUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyBenefitOptions][%d] updatePolicyBenefitOptionsUsingPUTNotFound", 404)
}

func (o *UpdatePolicyBenefitOptionsUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyBenefitOptions][%d] updatePolicyBenefitOptionsUsingPUTNotFound", 404)
}

func (o *UpdatePolicyBenefitOptionsUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyBenefitOptionsUsingPUTInternalServerError creates a UpdatePolicyBenefitOptionsUsingPUTInternalServerError with default headers values
func NewUpdatePolicyBenefitOptionsUsingPUTInternalServerError() *UpdatePolicyBenefitOptionsUsingPUTInternalServerError {
	return &UpdatePolicyBenefitOptionsUsingPUTInternalServerError{}
}

/*
UpdatePolicyBenefitOptionsUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdatePolicyBenefitOptionsUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update policy benefit options using p u t internal server error response has a 2xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy benefit options using p u t internal server error response has a 3xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy benefit options using p u t internal server error response has a 4xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update policy benefit options using p u t internal server error response has a 5xx status code
func (o *UpdatePolicyBenefitOptionsUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update policy benefit options using p u t internal server error response a status code equal to that given
func (o *UpdatePolicyBenefitOptionsUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update policy benefit options using p u t internal server error response
func (o *UpdatePolicyBenefitOptionsUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdatePolicyBenefitOptionsUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyBenefitOptions][%d] updatePolicyBenefitOptionsUsingPUTInternalServerError", 500)
}

func (o *UpdatePolicyBenefitOptionsUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyBenefitOptions][%d] updatePolicyBenefitOptionsUsingPUTInternalServerError", 500)
}

func (o *UpdatePolicyBenefitOptionsUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
