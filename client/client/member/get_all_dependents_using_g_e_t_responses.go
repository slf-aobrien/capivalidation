// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetAllDependentsUsingGETReader is a Reader for the GetAllDependentsUsingGET structure.
type GetAllDependentsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllDependentsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllDependentsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllDependentsUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAllDependentsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllDependentsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllDependentsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllDependentsUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/member/allDependents] getAllDependentsUsingGET", response, response.Code())
	}
}

// NewGetAllDependentsUsingGETOK creates a GetAllDependentsUsingGETOK with default headers values
func NewGetAllDependentsUsingGETOK() *GetAllDependentsUsingGETOK {
	return &GetAllDependentsUsingGETOK{}
}

/*
GetAllDependentsUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetAllDependentsUsingGETOK struct {
	Payload *models.ResponseWrapperListDependentDTO
}

// IsSuccess returns true when this get all dependents using g e t o k response has a 2xx status code
func (o *GetAllDependentsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all dependents using g e t o k response has a 3xx status code
func (o *GetAllDependentsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all dependents using g e t o k response has a 4xx status code
func (o *GetAllDependentsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all dependents using g e t o k response has a 5xx status code
func (o *GetAllDependentsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all dependents using g e t o k response a status code equal to that given
func (o *GetAllDependentsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all dependents using g e t o k response
func (o *GetAllDependentsUsingGETOK) Code() int {
	return 200
}

func (o *GetAllDependentsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/allDependents][%d] getAllDependentsUsingGETOK %s", 200, payload)
}

func (o *GetAllDependentsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/allDependents][%d] getAllDependentsUsingGETOK %s", 200, payload)
}

func (o *GetAllDependentsUsingGETOK) GetPayload() *models.ResponseWrapperListDependentDTO {
	return o.Payload
}

func (o *GetAllDependentsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperListDependentDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllDependentsUsingGETBadRequest creates a GetAllDependentsUsingGETBadRequest with default headers values
func NewGetAllDependentsUsingGETBadRequest() *GetAllDependentsUsingGETBadRequest {
	return &GetAllDependentsUsingGETBadRequest{}
}

/*
GetAllDependentsUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllDependentsUsingGETBadRequest struct {
}

// IsSuccess returns true when this get all dependents using g e t bad request response has a 2xx status code
func (o *GetAllDependentsUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all dependents using g e t bad request response has a 3xx status code
func (o *GetAllDependentsUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all dependents using g e t bad request response has a 4xx status code
func (o *GetAllDependentsUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all dependents using g e t bad request response has a 5xx status code
func (o *GetAllDependentsUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all dependents using g e t bad request response a status code equal to that given
func (o *GetAllDependentsUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all dependents using g e t bad request response
func (o *GetAllDependentsUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetAllDependentsUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/allDependents][%d] getAllDependentsUsingGETBadRequest", 400)
}

func (o *GetAllDependentsUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/allDependents][%d] getAllDependentsUsingGETBadRequest", 400)
}

func (o *GetAllDependentsUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllDependentsUsingGETUnauthorized creates a GetAllDependentsUsingGETUnauthorized with default headers values
func NewGetAllDependentsUsingGETUnauthorized() *GetAllDependentsUsingGETUnauthorized {
	return &GetAllDependentsUsingGETUnauthorized{}
}

/*
GetAllDependentsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllDependentsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all dependents using g e t unauthorized response has a 2xx status code
func (o *GetAllDependentsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all dependents using g e t unauthorized response has a 3xx status code
func (o *GetAllDependentsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all dependents using g e t unauthorized response has a 4xx status code
func (o *GetAllDependentsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all dependents using g e t unauthorized response has a 5xx status code
func (o *GetAllDependentsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all dependents using g e t unauthorized response a status code equal to that given
func (o *GetAllDependentsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all dependents using g e t unauthorized response
func (o *GetAllDependentsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllDependentsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/allDependents][%d] getAllDependentsUsingGETUnauthorized", 401)
}

func (o *GetAllDependentsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/allDependents][%d] getAllDependentsUsingGETUnauthorized", 401)
}

func (o *GetAllDependentsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllDependentsUsingGETForbidden creates a GetAllDependentsUsingGETForbidden with default headers values
func NewGetAllDependentsUsingGETForbidden() *GetAllDependentsUsingGETForbidden {
	return &GetAllDependentsUsingGETForbidden{}
}

/*
GetAllDependentsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllDependentsUsingGETForbidden struct {
}

// IsSuccess returns true when this get all dependents using g e t forbidden response has a 2xx status code
func (o *GetAllDependentsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all dependents using g e t forbidden response has a 3xx status code
func (o *GetAllDependentsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all dependents using g e t forbidden response has a 4xx status code
func (o *GetAllDependentsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all dependents using g e t forbidden response has a 5xx status code
func (o *GetAllDependentsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all dependents using g e t forbidden response a status code equal to that given
func (o *GetAllDependentsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all dependents using g e t forbidden response
func (o *GetAllDependentsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllDependentsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/allDependents][%d] getAllDependentsUsingGETForbidden", 403)
}

func (o *GetAllDependentsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/allDependents][%d] getAllDependentsUsingGETForbidden", 403)
}

func (o *GetAllDependentsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllDependentsUsingGETNotFound creates a GetAllDependentsUsingGETNotFound with default headers values
func NewGetAllDependentsUsingGETNotFound() *GetAllDependentsUsingGETNotFound {
	return &GetAllDependentsUsingGETNotFound{}
}

/*
GetAllDependentsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllDependentsUsingGETNotFound struct {
}

// IsSuccess returns true when this get all dependents using g e t not found response has a 2xx status code
func (o *GetAllDependentsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all dependents using g e t not found response has a 3xx status code
func (o *GetAllDependentsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all dependents using g e t not found response has a 4xx status code
func (o *GetAllDependentsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all dependents using g e t not found response has a 5xx status code
func (o *GetAllDependentsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all dependents using g e t not found response a status code equal to that given
func (o *GetAllDependentsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all dependents using g e t not found response
func (o *GetAllDependentsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllDependentsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/allDependents][%d] getAllDependentsUsingGETNotFound", 404)
}

func (o *GetAllDependentsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/allDependents][%d] getAllDependentsUsingGETNotFound", 404)
}

func (o *GetAllDependentsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllDependentsUsingGETInternalServerError creates a GetAllDependentsUsingGETInternalServerError with default headers values
func NewGetAllDependentsUsingGETInternalServerError() *GetAllDependentsUsingGETInternalServerError {
	return &GetAllDependentsUsingGETInternalServerError{}
}

/*
GetAllDependentsUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetAllDependentsUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get all dependents using g e t internal server error response has a 2xx status code
func (o *GetAllDependentsUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all dependents using g e t internal server error response has a 3xx status code
func (o *GetAllDependentsUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all dependents using g e t internal server error response has a 4xx status code
func (o *GetAllDependentsUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all dependents using g e t internal server error response has a 5xx status code
func (o *GetAllDependentsUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all dependents using g e t internal server error response a status code equal to that given
func (o *GetAllDependentsUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all dependents using g e t internal server error response
func (o *GetAllDependentsUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetAllDependentsUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/allDependents][%d] getAllDependentsUsingGETInternalServerError", 500)
}

func (o *GetAllDependentsUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/allDependents][%d] getAllDependentsUsingGETInternalServerError", 500)
}

func (o *GetAllDependentsUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
