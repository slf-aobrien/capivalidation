// Code generated by go-swagger; DO NOT EDIT.

package c_b_s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostCBSManagerResponseUsingPOSTParams creates a new PostCBSManagerResponseUsingPOSTParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostCBSManagerResponseUsingPOSTParams() *PostCBSManagerResponseUsingPOSTParams {
	return &PostCBSManagerResponseUsingPOSTParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostCBSManagerResponseUsingPOSTParamsWithTimeout creates a new PostCBSManagerResponseUsingPOSTParams object
// with the ability to set a timeout on a request.
func NewPostCBSManagerResponseUsingPOSTParamsWithTimeout(timeout time.Duration) *PostCBSManagerResponseUsingPOSTParams {
	return &PostCBSManagerResponseUsingPOSTParams{
		timeout: timeout,
	}
}

// NewPostCBSManagerResponseUsingPOSTParamsWithContext creates a new PostCBSManagerResponseUsingPOSTParams object
// with the ability to set a context for a request.
func NewPostCBSManagerResponseUsingPOSTParamsWithContext(ctx context.Context) *PostCBSManagerResponseUsingPOSTParams {
	return &PostCBSManagerResponseUsingPOSTParams{
		Context: ctx,
	}
}

// NewPostCBSManagerResponseUsingPOSTParamsWithHTTPClient creates a new PostCBSManagerResponseUsingPOSTParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostCBSManagerResponseUsingPOSTParamsWithHTTPClient(client *http.Client) *PostCBSManagerResponseUsingPOSTParams {
	return &PostCBSManagerResponseUsingPOSTParams{
		HTTPClient: client,
	}
}

/*
PostCBSManagerResponseUsingPOSTParams contains all the parameters to send to the API endpoint

	for the post c b s manager response using p o s t operation.

	Typically these are written to a http.Request.
*/
type PostCBSManagerResponseUsingPOSTParams struct {

	/* Headers.

	   headers
	*/
	Headers *string

	/* MessagepayLoad.

	   messagepayLoad
	*/
	MessagepayLoad string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post c b s manager response using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostCBSManagerResponseUsingPOSTParams) WithDefaults() *PostCBSManagerResponseUsingPOSTParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post c b s manager response using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostCBSManagerResponseUsingPOSTParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post c b s manager response using p o s t params
func (o *PostCBSManagerResponseUsingPOSTParams) WithTimeout(timeout time.Duration) *PostCBSManagerResponseUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post c b s manager response using p o s t params
func (o *PostCBSManagerResponseUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post c b s manager response using p o s t params
func (o *PostCBSManagerResponseUsingPOSTParams) WithContext(ctx context.Context) *PostCBSManagerResponseUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post c b s manager response using p o s t params
func (o *PostCBSManagerResponseUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post c b s manager response using p o s t params
func (o *PostCBSManagerResponseUsingPOSTParams) WithHTTPClient(client *http.Client) *PostCBSManagerResponseUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post c b s manager response using p o s t params
func (o *PostCBSManagerResponseUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithHeaders adds the headers to the post c b s manager response using p o s t params
func (o *PostCBSManagerResponseUsingPOSTParams) WithHeaders(headers *string) *PostCBSManagerResponseUsingPOSTParams {
	o.SetHeaders(headers)
	return o
}

// SetHeaders adds the headers to the post c b s manager response using p o s t params
func (o *PostCBSManagerResponseUsingPOSTParams) SetHeaders(headers *string) {
	o.Headers = headers
}

// WithMessagepayLoad adds the messagepayLoad to the post c b s manager response using p o s t params
func (o *PostCBSManagerResponseUsingPOSTParams) WithMessagepayLoad(messagepayLoad string) *PostCBSManagerResponseUsingPOSTParams {
	o.SetMessagepayLoad(messagepayLoad)
	return o
}

// SetMessagepayLoad adds the messagepayLoad to the post c b s manager response using p o s t params
func (o *PostCBSManagerResponseUsingPOSTParams) SetMessagepayLoad(messagepayLoad string) {
	o.MessagepayLoad = messagepayLoad
}

// WriteToRequest writes these params to a swagger request
func (o *PostCBSManagerResponseUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Headers != nil {

		// header param headers
		if err := r.SetHeaderParam("headers", *o.Headers); err != nil {
			return err
		}
	}
	if err := r.SetBodyParam(o.MessagepayLoad); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
