// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetMemberBenefitOptionUsingGETReader is a Reader for the GetMemberBenefitOptionUsingGET structure.
type GetMemberBenefitOptionUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMemberBenefitOptionUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMemberBenefitOptionUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetMemberBenefitOptionUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetMemberBenefitOptionUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMemberBenefitOptionUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMemberBenefitOptionUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetMemberBenefitOptionUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/member/memberBenefitOptions] getMemberBenefitOptionUsingGET", response, response.Code())
	}
}

// NewGetMemberBenefitOptionUsingGETOK creates a GetMemberBenefitOptionUsingGETOK with default headers values
func NewGetMemberBenefitOptionUsingGETOK() *GetMemberBenefitOptionUsingGETOK {
	return &GetMemberBenefitOptionUsingGETOK{}
}

/*
GetMemberBenefitOptionUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetMemberBenefitOptionUsingGETOK struct {
	Payload *models.ResponseWrapperMemberBenefitOptionDTO
}

// IsSuccess returns true when this get member benefit option using g e t o k response has a 2xx status code
func (o *GetMemberBenefitOptionUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get member benefit option using g e t o k response has a 3xx status code
func (o *GetMemberBenefitOptionUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member benefit option using g e t o k response has a 4xx status code
func (o *GetMemberBenefitOptionUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get member benefit option using g e t o k response has a 5xx status code
func (o *GetMemberBenefitOptionUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get member benefit option using g e t o k response a status code equal to that given
func (o *GetMemberBenefitOptionUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get member benefit option using g e t o k response
func (o *GetMemberBenefitOptionUsingGETOK) Code() int {
	return 200
}

func (o *GetMemberBenefitOptionUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberBenefitOptions][%d] getMemberBenefitOptionUsingGETOK %s", 200, payload)
}

func (o *GetMemberBenefitOptionUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberBenefitOptions][%d] getMemberBenefitOptionUsingGETOK %s", 200, payload)
}

func (o *GetMemberBenefitOptionUsingGETOK) GetPayload() *models.ResponseWrapperMemberBenefitOptionDTO {
	return o.Payload
}

func (o *GetMemberBenefitOptionUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperMemberBenefitOptionDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMemberBenefitOptionUsingGETBadRequest creates a GetMemberBenefitOptionUsingGETBadRequest with default headers values
func NewGetMemberBenefitOptionUsingGETBadRequest() *GetMemberBenefitOptionUsingGETBadRequest {
	return &GetMemberBenefitOptionUsingGETBadRequest{}
}

/*
GetMemberBenefitOptionUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetMemberBenefitOptionUsingGETBadRequest struct {
}

// IsSuccess returns true when this get member benefit option using g e t bad request response has a 2xx status code
func (o *GetMemberBenefitOptionUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member benefit option using g e t bad request response has a 3xx status code
func (o *GetMemberBenefitOptionUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member benefit option using g e t bad request response has a 4xx status code
func (o *GetMemberBenefitOptionUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member benefit option using g e t bad request response has a 5xx status code
func (o *GetMemberBenefitOptionUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get member benefit option using g e t bad request response a status code equal to that given
func (o *GetMemberBenefitOptionUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get member benefit option using g e t bad request response
func (o *GetMemberBenefitOptionUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetMemberBenefitOptionUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberBenefitOptions][%d] getMemberBenefitOptionUsingGETBadRequest", 400)
}

func (o *GetMemberBenefitOptionUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberBenefitOptions][%d] getMemberBenefitOptionUsingGETBadRequest", 400)
}

func (o *GetMemberBenefitOptionUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberBenefitOptionUsingGETUnauthorized creates a GetMemberBenefitOptionUsingGETUnauthorized with default headers values
func NewGetMemberBenefitOptionUsingGETUnauthorized() *GetMemberBenefitOptionUsingGETUnauthorized {
	return &GetMemberBenefitOptionUsingGETUnauthorized{}
}

/*
GetMemberBenefitOptionUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetMemberBenefitOptionUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get member benefit option using g e t unauthorized response has a 2xx status code
func (o *GetMemberBenefitOptionUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member benefit option using g e t unauthorized response has a 3xx status code
func (o *GetMemberBenefitOptionUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member benefit option using g e t unauthorized response has a 4xx status code
func (o *GetMemberBenefitOptionUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member benefit option using g e t unauthorized response has a 5xx status code
func (o *GetMemberBenefitOptionUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get member benefit option using g e t unauthorized response a status code equal to that given
func (o *GetMemberBenefitOptionUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get member benefit option using g e t unauthorized response
func (o *GetMemberBenefitOptionUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetMemberBenefitOptionUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberBenefitOptions][%d] getMemberBenefitOptionUsingGETUnauthorized", 401)
}

func (o *GetMemberBenefitOptionUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberBenefitOptions][%d] getMemberBenefitOptionUsingGETUnauthorized", 401)
}

func (o *GetMemberBenefitOptionUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberBenefitOptionUsingGETForbidden creates a GetMemberBenefitOptionUsingGETForbidden with default headers values
func NewGetMemberBenefitOptionUsingGETForbidden() *GetMemberBenefitOptionUsingGETForbidden {
	return &GetMemberBenefitOptionUsingGETForbidden{}
}

/*
GetMemberBenefitOptionUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetMemberBenefitOptionUsingGETForbidden struct {
}

// IsSuccess returns true when this get member benefit option using g e t forbidden response has a 2xx status code
func (o *GetMemberBenefitOptionUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member benefit option using g e t forbidden response has a 3xx status code
func (o *GetMemberBenefitOptionUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member benefit option using g e t forbidden response has a 4xx status code
func (o *GetMemberBenefitOptionUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member benefit option using g e t forbidden response has a 5xx status code
func (o *GetMemberBenefitOptionUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get member benefit option using g e t forbidden response a status code equal to that given
func (o *GetMemberBenefitOptionUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get member benefit option using g e t forbidden response
func (o *GetMemberBenefitOptionUsingGETForbidden) Code() int {
	return 403
}

func (o *GetMemberBenefitOptionUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberBenefitOptions][%d] getMemberBenefitOptionUsingGETForbidden", 403)
}

func (o *GetMemberBenefitOptionUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberBenefitOptions][%d] getMemberBenefitOptionUsingGETForbidden", 403)
}

func (o *GetMemberBenefitOptionUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberBenefitOptionUsingGETNotFound creates a GetMemberBenefitOptionUsingGETNotFound with default headers values
func NewGetMemberBenefitOptionUsingGETNotFound() *GetMemberBenefitOptionUsingGETNotFound {
	return &GetMemberBenefitOptionUsingGETNotFound{}
}

/*
GetMemberBenefitOptionUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetMemberBenefitOptionUsingGETNotFound struct {
}

// IsSuccess returns true when this get member benefit option using g e t not found response has a 2xx status code
func (o *GetMemberBenefitOptionUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member benefit option using g e t not found response has a 3xx status code
func (o *GetMemberBenefitOptionUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member benefit option using g e t not found response has a 4xx status code
func (o *GetMemberBenefitOptionUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member benefit option using g e t not found response has a 5xx status code
func (o *GetMemberBenefitOptionUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get member benefit option using g e t not found response a status code equal to that given
func (o *GetMemberBenefitOptionUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get member benefit option using g e t not found response
func (o *GetMemberBenefitOptionUsingGETNotFound) Code() int {
	return 404
}

func (o *GetMemberBenefitOptionUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberBenefitOptions][%d] getMemberBenefitOptionUsingGETNotFound", 404)
}

func (o *GetMemberBenefitOptionUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberBenefitOptions][%d] getMemberBenefitOptionUsingGETNotFound", 404)
}

func (o *GetMemberBenefitOptionUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberBenefitOptionUsingGETInternalServerError creates a GetMemberBenefitOptionUsingGETInternalServerError with default headers values
func NewGetMemberBenefitOptionUsingGETInternalServerError() *GetMemberBenefitOptionUsingGETInternalServerError {
	return &GetMemberBenefitOptionUsingGETInternalServerError{}
}

/*
GetMemberBenefitOptionUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetMemberBenefitOptionUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get member benefit option using g e t internal server error response has a 2xx status code
func (o *GetMemberBenefitOptionUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member benefit option using g e t internal server error response has a 3xx status code
func (o *GetMemberBenefitOptionUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member benefit option using g e t internal server error response has a 4xx status code
func (o *GetMemberBenefitOptionUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get member benefit option using g e t internal server error response has a 5xx status code
func (o *GetMemberBenefitOptionUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get member benefit option using g e t internal server error response a status code equal to that given
func (o *GetMemberBenefitOptionUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get member benefit option using g e t internal server error response
func (o *GetMemberBenefitOptionUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetMemberBenefitOptionUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberBenefitOptions][%d] getMemberBenefitOptionUsingGETInternalServerError", 500)
}

func (o *GetMemberBenefitOptionUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberBenefitOptions][%d] getMemberBenefitOptionUsingGETInternalServerError", 500)
}

func (o *GetMemberBenefitOptionUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
