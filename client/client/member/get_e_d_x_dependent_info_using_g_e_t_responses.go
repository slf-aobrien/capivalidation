// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetEDXDependentInfoUsingGETReader is a Reader for the GetEDXDependentInfoUsingGET structure.
type GetEDXDependentInfoUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEDXDependentInfoUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEDXDependentInfoUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetEDXDependentInfoUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetEDXDependentInfoUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEDXDependentInfoUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEDXDependentInfoUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEDXDependentInfoUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/member/edxDependentInfo] getEDXDependentInfoUsingGET", response, response.Code())
	}
}

// NewGetEDXDependentInfoUsingGETOK creates a GetEDXDependentInfoUsingGETOK with default headers values
func NewGetEDXDependentInfoUsingGETOK() *GetEDXDependentInfoUsingGETOK {
	return &GetEDXDependentInfoUsingGETOK{}
}

/*
GetEDXDependentInfoUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetEDXDependentInfoUsingGETOK struct {
	Payload *models.ResponseWrapperMemberDTO
}

// IsSuccess returns true when this get e d x dependent info using g e t o k response has a 2xx status code
func (o *GetEDXDependentInfoUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get e d x dependent info using g e t o k response has a 3xx status code
func (o *GetEDXDependentInfoUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x dependent info using g e t o k response has a 4xx status code
func (o *GetEDXDependentInfoUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get e d x dependent info using g e t o k response has a 5xx status code
func (o *GetEDXDependentInfoUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x dependent info using g e t o k response a status code equal to that given
func (o *GetEDXDependentInfoUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get e d x dependent info using g e t o k response
func (o *GetEDXDependentInfoUsingGETOK) Code() int {
	return 200
}

func (o *GetEDXDependentInfoUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxDependentInfo][%d] getEDXDependentInfoUsingGETOK %s", 200, payload)
}

func (o *GetEDXDependentInfoUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxDependentInfo][%d] getEDXDependentInfoUsingGETOK %s", 200, payload)
}

func (o *GetEDXDependentInfoUsingGETOK) GetPayload() *models.ResponseWrapperMemberDTO {
	return o.Payload
}

func (o *GetEDXDependentInfoUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperMemberDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEDXDependentInfoUsingGETBadRequest creates a GetEDXDependentInfoUsingGETBadRequest with default headers values
func NewGetEDXDependentInfoUsingGETBadRequest() *GetEDXDependentInfoUsingGETBadRequest {
	return &GetEDXDependentInfoUsingGETBadRequest{}
}

/*
GetEDXDependentInfoUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetEDXDependentInfoUsingGETBadRequest struct {
}

// IsSuccess returns true when this get e d x dependent info using g e t bad request response has a 2xx status code
func (o *GetEDXDependentInfoUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x dependent info using g e t bad request response has a 3xx status code
func (o *GetEDXDependentInfoUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x dependent info using g e t bad request response has a 4xx status code
func (o *GetEDXDependentInfoUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get e d x dependent info using g e t bad request response has a 5xx status code
func (o *GetEDXDependentInfoUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x dependent info using g e t bad request response a status code equal to that given
func (o *GetEDXDependentInfoUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get e d x dependent info using g e t bad request response
func (o *GetEDXDependentInfoUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetEDXDependentInfoUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxDependentInfo][%d] getEDXDependentInfoUsingGETBadRequest", 400)
}

func (o *GetEDXDependentInfoUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxDependentInfo][%d] getEDXDependentInfoUsingGETBadRequest", 400)
}

func (o *GetEDXDependentInfoUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEDXDependentInfoUsingGETUnauthorized creates a GetEDXDependentInfoUsingGETUnauthorized with default headers values
func NewGetEDXDependentInfoUsingGETUnauthorized() *GetEDXDependentInfoUsingGETUnauthorized {
	return &GetEDXDependentInfoUsingGETUnauthorized{}
}

/*
GetEDXDependentInfoUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetEDXDependentInfoUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get e d x dependent info using g e t unauthorized response has a 2xx status code
func (o *GetEDXDependentInfoUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x dependent info using g e t unauthorized response has a 3xx status code
func (o *GetEDXDependentInfoUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x dependent info using g e t unauthorized response has a 4xx status code
func (o *GetEDXDependentInfoUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get e d x dependent info using g e t unauthorized response has a 5xx status code
func (o *GetEDXDependentInfoUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x dependent info using g e t unauthorized response a status code equal to that given
func (o *GetEDXDependentInfoUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get e d x dependent info using g e t unauthorized response
func (o *GetEDXDependentInfoUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetEDXDependentInfoUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxDependentInfo][%d] getEDXDependentInfoUsingGETUnauthorized", 401)
}

func (o *GetEDXDependentInfoUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxDependentInfo][%d] getEDXDependentInfoUsingGETUnauthorized", 401)
}

func (o *GetEDXDependentInfoUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEDXDependentInfoUsingGETForbidden creates a GetEDXDependentInfoUsingGETForbidden with default headers values
func NewGetEDXDependentInfoUsingGETForbidden() *GetEDXDependentInfoUsingGETForbidden {
	return &GetEDXDependentInfoUsingGETForbidden{}
}

/*
GetEDXDependentInfoUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetEDXDependentInfoUsingGETForbidden struct {
}

// IsSuccess returns true when this get e d x dependent info using g e t forbidden response has a 2xx status code
func (o *GetEDXDependentInfoUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x dependent info using g e t forbidden response has a 3xx status code
func (o *GetEDXDependentInfoUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x dependent info using g e t forbidden response has a 4xx status code
func (o *GetEDXDependentInfoUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get e d x dependent info using g e t forbidden response has a 5xx status code
func (o *GetEDXDependentInfoUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x dependent info using g e t forbidden response a status code equal to that given
func (o *GetEDXDependentInfoUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get e d x dependent info using g e t forbidden response
func (o *GetEDXDependentInfoUsingGETForbidden) Code() int {
	return 403
}

func (o *GetEDXDependentInfoUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxDependentInfo][%d] getEDXDependentInfoUsingGETForbidden", 403)
}

func (o *GetEDXDependentInfoUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxDependentInfo][%d] getEDXDependentInfoUsingGETForbidden", 403)
}

func (o *GetEDXDependentInfoUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEDXDependentInfoUsingGETNotFound creates a GetEDXDependentInfoUsingGETNotFound with default headers values
func NewGetEDXDependentInfoUsingGETNotFound() *GetEDXDependentInfoUsingGETNotFound {
	return &GetEDXDependentInfoUsingGETNotFound{}
}

/*
GetEDXDependentInfoUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetEDXDependentInfoUsingGETNotFound struct {
}

// IsSuccess returns true when this get e d x dependent info using g e t not found response has a 2xx status code
func (o *GetEDXDependentInfoUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x dependent info using g e t not found response has a 3xx status code
func (o *GetEDXDependentInfoUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x dependent info using g e t not found response has a 4xx status code
func (o *GetEDXDependentInfoUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get e d x dependent info using g e t not found response has a 5xx status code
func (o *GetEDXDependentInfoUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x dependent info using g e t not found response a status code equal to that given
func (o *GetEDXDependentInfoUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get e d x dependent info using g e t not found response
func (o *GetEDXDependentInfoUsingGETNotFound) Code() int {
	return 404
}

func (o *GetEDXDependentInfoUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxDependentInfo][%d] getEDXDependentInfoUsingGETNotFound", 404)
}

func (o *GetEDXDependentInfoUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxDependentInfo][%d] getEDXDependentInfoUsingGETNotFound", 404)
}

func (o *GetEDXDependentInfoUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEDXDependentInfoUsingGETInternalServerError creates a GetEDXDependentInfoUsingGETInternalServerError with default headers values
func NewGetEDXDependentInfoUsingGETInternalServerError() *GetEDXDependentInfoUsingGETInternalServerError {
	return &GetEDXDependentInfoUsingGETInternalServerError{}
}

/*
GetEDXDependentInfoUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetEDXDependentInfoUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get e d x dependent info using g e t internal server error response has a 2xx status code
func (o *GetEDXDependentInfoUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x dependent info using g e t internal server error response has a 3xx status code
func (o *GetEDXDependentInfoUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x dependent info using g e t internal server error response has a 4xx status code
func (o *GetEDXDependentInfoUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get e d x dependent info using g e t internal server error response has a 5xx status code
func (o *GetEDXDependentInfoUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get e d x dependent info using g e t internal server error response a status code equal to that given
func (o *GetEDXDependentInfoUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get e d x dependent info using g e t internal server error response
func (o *GetEDXDependentInfoUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetEDXDependentInfoUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxDependentInfo][%d] getEDXDependentInfoUsingGETInternalServerError", 500)
}

func (o *GetEDXDependentInfoUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxDependentInfo][%d] getEDXDependentInfoUsingGETInternalServerError", 500)
}

func (o *GetEDXDependentInfoUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
