// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateBasicPolicyDetailsUsingPUTReader is a Reader for the UpdateBasicPolicyDetailsUsingPUT structure.
type UpdateBasicPolicyDetailsUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBasicPolicyDetailsUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateBasicPolicyDetailsUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateBasicPolicyDetailsUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateBasicPolicyDetailsUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateBasicPolicyDetailsUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateBasicPolicyDetailsUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateBasicPolicyDetailsUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateBasicPolicyDetailsUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/policy/updateBasicPolicyDetails] updateBasicPolicyDetailsUsingPUT", response, response.Code())
	}
}

// NewUpdateBasicPolicyDetailsUsingPUTOK creates a UpdateBasicPolicyDetailsUsingPUTOK with default headers values
func NewUpdateBasicPolicyDetailsUsingPUTOK() *UpdateBasicPolicyDetailsUsingPUTOK {
	return &UpdateBasicPolicyDetailsUsingPUTOK{}
}

/*
UpdateBasicPolicyDetailsUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateBasicPolicyDetailsUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update basic policy details using p u t o k response has a 2xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update basic policy details using p u t o k response has a 3xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update basic policy details using p u t o k response has a 4xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update basic policy details using p u t o k response has a 5xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update basic policy details using p u t o k response a status code equal to that given
func (o *UpdateBasicPolicyDetailsUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update basic policy details using p u t o k response
func (o *UpdateBasicPolicyDetailsUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateBasicPolicyDetailsUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updateBasicPolicyDetails][%d] updateBasicPolicyDetailsUsingPUTOK %s", 200, payload)
}

func (o *UpdateBasicPolicyDetailsUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updateBasicPolicyDetails][%d] updateBasicPolicyDetailsUsingPUTOK %s", 200, payload)
}

func (o *UpdateBasicPolicyDetailsUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateBasicPolicyDetailsUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBasicPolicyDetailsUsingPUTCreated creates a UpdateBasicPolicyDetailsUsingPUTCreated with default headers values
func NewUpdateBasicPolicyDetailsUsingPUTCreated() *UpdateBasicPolicyDetailsUsingPUTCreated {
	return &UpdateBasicPolicyDetailsUsingPUTCreated{}
}

/*
UpdateBasicPolicyDetailsUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateBasicPolicyDetailsUsingPUTCreated struct {
}

// IsSuccess returns true when this update basic policy details using p u t created response has a 2xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update basic policy details using p u t created response has a 3xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update basic policy details using p u t created response has a 4xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update basic policy details using p u t created response has a 5xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update basic policy details using p u t created response a status code equal to that given
func (o *UpdateBasicPolicyDetailsUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update basic policy details using p u t created response
func (o *UpdateBasicPolicyDetailsUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateBasicPolicyDetailsUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updateBasicPolicyDetails][%d] updateBasicPolicyDetailsUsingPUTCreated", 201)
}

func (o *UpdateBasicPolicyDetailsUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updateBasicPolicyDetails][%d] updateBasicPolicyDetailsUsingPUTCreated", 201)
}

func (o *UpdateBasicPolicyDetailsUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBasicPolicyDetailsUsingPUTBadRequest creates a UpdateBasicPolicyDetailsUsingPUTBadRequest with default headers values
func NewUpdateBasicPolicyDetailsUsingPUTBadRequest() *UpdateBasicPolicyDetailsUsingPUTBadRequest {
	return &UpdateBasicPolicyDetailsUsingPUTBadRequest{}
}

/*
UpdateBasicPolicyDetailsUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateBasicPolicyDetailsUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update basic policy details using p u t bad request response has a 2xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update basic policy details using p u t bad request response has a 3xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update basic policy details using p u t bad request response has a 4xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update basic policy details using p u t bad request response has a 5xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update basic policy details using p u t bad request response a status code equal to that given
func (o *UpdateBasicPolicyDetailsUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update basic policy details using p u t bad request response
func (o *UpdateBasicPolicyDetailsUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateBasicPolicyDetailsUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updateBasicPolicyDetails][%d] updateBasicPolicyDetailsUsingPUTBadRequest", 400)
}

func (o *UpdateBasicPolicyDetailsUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updateBasicPolicyDetails][%d] updateBasicPolicyDetailsUsingPUTBadRequest", 400)
}

func (o *UpdateBasicPolicyDetailsUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBasicPolicyDetailsUsingPUTUnauthorized creates a UpdateBasicPolicyDetailsUsingPUTUnauthorized with default headers values
func NewUpdateBasicPolicyDetailsUsingPUTUnauthorized() *UpdateBasicPolicyDetailsUsingPUTUnauthorized {
	return &UpdateBasicPolicyDetailsUsingPUTUnauthorized{}
}

/*
UpdateBasicPolicyDetailsUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateBasicPolicyDetailsUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update basic policy details using p u t unauthorized response has a 2xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update basic policy details using p u t unauthorized response has a 3xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update basic policy details using p u t unauthorized response has a 4xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update basic policy details using p u t unauthorized response has a 5xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update basic policy details using p u t unauthorized response a status code equal to that given
func (o *UpdateBasicPolicyDetailsUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update basic policy details using p u t unauthorized response
func (o *UpdateBasicPolicyDetailsUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateBasicPolicyDetailsUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updateBasicPolicyDetails][%d] updateBasicPolicyDetailsUsingPUTUnauthorized", 401)
}

func (o *UpdateBasicPolicyDetailsUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updateBasicPolicyDetails][%d] updateBasicPolicyDetailsUsingPUTUnauthorized", 401)
}

func (o *UpdateBasicPolicyDetailsUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBasicPolicyDetailsUsingPUTForbidden creates a UpdateBasicPolicyDetailsUsingPUTForbidden with default headers values
func NewUpdateBasicPolicyDetailsUsingPUTForbidden() *UpdateBasicPolicyDetailsUsingPUTForbidden {
	return &UpdateBasicPolicyDetailsUsingPUTForbidden{}
}

/*
UpdateBasicPolicyDetailsUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateBasicPolicyDetailsUsingPUTForbidden struct {
}

// IsSuccess returns true when this update basic policy details using p u t forbidden response has a 2xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update basic policy details using p u t forbidden response has a 3xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update basic policy details using p u t forbidden response has a 4xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update basic policy details using p u t forbidden response has a 5xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update basic policy details using p u t forbidden response a status code equal to that given
func (o *UpdateBasicPolicyDetailsUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update basic policy details using p u t forbidden response
func (o *UpdateBasicPolicyDetailsUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateBasicPolicyDetailsUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updateBasicPolicyDetails][%d] updateBasicPolicyDetailsUsingPUTForbidden", 403)
}

func (o *UpdateBasicPolicyDetailsUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updateBasicPolicyDetails][%d] updateBasicPolicyDetailsUsingPUTForbidden", 403)
}

func (o *UpdateBasicPolicyDetailsUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBasicPolicyDetailsUsingPUTNotFound creates a UpdateBasicPolicyDetailsUsingPUTNotFound with default headers values
func NewUpdateBasicPolicyDetailsUsingPUTNotFound() *UpdateBasicPolicyDetailsUsingPUTNotFound {
	return &UpdateBasicPolicyDetailsUsingPUTNotFound{}
}

/*
UpdateBasicPolicyDetailsUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateBasicPolicyDetailsUsingPUTNotFound struct {
}

// IsSuccess returns true when this update basic policy details using p u t not found response has a 2xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update basic policy details using p u t not found response has a 3xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update basic policy details using p u t not found response has a 4xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update basic policy details using p u t not found response has a 5xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update basic policy details using p u t not found response a status code equal to that given
func (o *UpdateBasicPolicyDetailsUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update basic policy details using p u t not found response
func (o *UpdateBasicPolicyDetailsUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateBasicPolicyDetailsUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updateBasicPolicyDetails][%d] updateBasicPolicyDetailsUsingPUTNotFound", 404)
}

func (o *UpdateBasicPolicyDetailsUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updateBasicPolicyDetails][%d] updateBasicPolicyDetailsUsingPUTNotFound", 404)
}

func (o *UpdateBasicPolicyDetailsUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBasicPolicyDetailsUsingPUTInternalServerError creates a UpdateBasicPolicyDetailsUsingPUTInternalServerError with default headers values
func NewUpdateBasicPolicyDetailsUsingPUTInternalServerError() *UpdateBasicPolicyDetailsUsingPUTInternalServerError {
	return &UpdateBasicPolicyDetailsUsingPUTInternalServerError{}
}

/*
UpdateBasicPolicyDetailsUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateBasicPolicyDetailsUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update basic policy details using p u t internal server error response has a 2xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update basic policy details using p u t internal server error response has a 3xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update basic policy details using p u t internal server error response has a 4xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update basic policy details using p u t internal server error response has a 5xx status code
func (o *UpdateBasicPolicyDetailsUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update basic policy details using p u t internal server error response a status code equal to that given
func (o *UpdateBasicPolicyDetailsUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update basic policy details using p u t internal server error response
func (o *UpdateBasicPolicyDetailsUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateBasicPolicyDetailsUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updateBasicPolicyDetails][%d] updateBasicPolicyDetailsUsingPUTInternalServerError", 500)
}

func (o *UpdateBasicPolicyDetailsUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updateBasicPolicyDetails][%d] updateBasicPolicyDetailsUsingPUTInternalServerError", 500)
}

func (o *UpdateBasicPolicyDetailsUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
