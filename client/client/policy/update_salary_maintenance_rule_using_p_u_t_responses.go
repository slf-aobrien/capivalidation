// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateSalaryMaintenanceRuleUsingPUTReader is a Reader for the UpdateSalaryMaintenanceRuleUsingPUT structure.
type UpdateSalaryMaintenanceRuleUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateSalaryMaintenanceRuleUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateSalaryMaintenanceRuleUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateSalaryMaintenanceRuleUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateSalaryMaintenanceRuleUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateSalaryMaintenanceRuleUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateSalaryMaintenanceRuleUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateSalaryMaintenanceRuleUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateSalaryMaintenanceRuleUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/policy/salaryMaintenanceRule] updateSalaryMaintenanceRuleUsingPUT", response, response.Code())
	}
}

// NewUpdateSalaryMaintenanceRuleUsingPUTOK creates a UpdateSalaryMaintenanceRuleUsingPUTOK with default headers values
func NewUpdateSalaryMaintenanceRuleUsingPUTOK() *UpdateSalaryMaintenanceRuleUsingPUTOK {
	return &UpdateSalaryMaintenanceRuleUsingPUTOK{}
}

/*
UpdateSalaryMaintenanceRuleUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateSalaryMaintenanceRuleUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update salary maintenance rule using p u t o k response has a 2xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update salary maintenance rule using p u t o k response has a 3xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update salary maintenance rule using p u t o k response has a 4xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update salary maintenance rule using p u t o k response has a 5xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update salary maintenance rule using p u t o k response a status code equal to that given
func (o *UpdateSalaryMaintenanceRuleUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update salary maintenance rule using p u t o k response
func (o *UpdateSalaryMaintenanceRuleUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/salaryMaintenanceRule][%d] updateSalaryMaintenanceRuleUsingPUTOK %s", 200, payload)
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/salaryMaintenanceRule][%d] updateSalaryMaintenanceRuleUsingPUTOK %s", 200, payload)
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSalaryMaintenanceRuleUsingPUTCreated creates a UpdateSalaryMaintenanceRuleUsingPUTCreated with default headers values
func NewUpdateSalaryMaintenanceRuleUsingPUTCreated() *UpdateSalaryMaintenanceRuleUsingPUTCreated {
	return &UpdateSalaryMaintenanceRuleUsingPUTCreated{}
}

/*
UpdateSalaryMaintenanceRuleUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateSalaryMaintenanceRuleUsingPUTCreated struct {
}

// IsSuccess returns true when this update salary maintenance rule using p u t created response has a 2xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update salary maintenance rule using p u t created response has a 3xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update salary maintenance rule using p u t created response has a 4xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update salary maintenance rule using p u t created response has a 5xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update salary maintenance rule using p u t created response a status code equal to that given
func (o *UpdateSalaryMaintenanceRuleUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update salary maintenance rule using p u t created response
func (o *UpdateSalaryMaintenanceRuleUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/salaryMaintenanceRule][%d] updateSalaryMaintenanceRuleUsingPUTCreated", 201)
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/salaryMaintenanceRule][%d] updateSalaryMaintenanceRuleUsingPUTCreated", 201)
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSalaryMaintenanceRuleUsingPUTBadRequest creates a UpdateSalaryMaintenanceRuleUsingPUTBadRequest with default headers values
func NewUpdateSalaryMaintenanceRuleUsingPUTBadRequest() *UpdateSalaryMaintenanceRuleUsingPUTBadRequest {
	return &UpdateSalaryMaintenanceRuleUsingPUTBadRequest{}
}

/*
UpdateSalaryMaintenanceRuleUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateSalaryMaintenanceRuleUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update salary maintenance rule using p u t bad request response has a 2xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update salary maintenance rule using p u t bad request response has a 3xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update salary maintenance rule using p u t bad request response has a 4xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update salary maintenance rule using p u t bad request response has a 5xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update salary maintenance rule using p u t bad request response a status code equal to that given
func (o *UpdateSalaryMaintenanceRuleUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update salary maintenance rule using p u t bad request response
func (o *UpdateSalaryMaintenanceRuleUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/salaryMaintenanceRule][%d] updateSalaryMaintenanceRuleUsingPUTBadRequest", 400)
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/salaryMaintenanceRule][%d] updateSalaryMaintenanceRuleUsingPUTBadRequest", 400)
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSalaryMaintenanceRuleUsingPUTUnauthorized creates a UpdateSalaryMaintenanceRuleUsingPUTUnauthorized with default headers values
func NewUpdateSalaryMaintenanceRuleUsingPUTUnauthorized() *UpdateSalaryMaintenanceRuleUsingPUTUnauthorized {
	return &UpdateSalaryMaintenanceRuleUsingPUTUnauthorized{}
}

/*
UpdateSalaryMaintenanceRuleUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateSalaryMaintenanceRuleUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update salary maintenance rule using p u t unauthorized response has a 2xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update salary maintenance rule using p u t unauthorized response has a 3xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update salary maintenance rule using p u t unauthorized response has a 4xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update salary maintenance rule using p u t unauthorized response has a 5xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update salary maintenance rule using p u t unauthorized response a status code equal to that given
func (o *UpdateSalaryMaintenanceRuleUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update salary maintenance rule using p u t unauthorized response
func (o *UpdateSalaryMaintenanceRuleUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/salaryMaintenanceRule][%d] updateSalaryMaintenanceRuleUsingPUTUnauthorized", 401)
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/salaryMaintenanceRule][%d] updateSalaryMaintenanceRuleUsingPUTUnauthorized", 401)
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSalaryMaintenanceRuleUsingPUTForbidden creates a UpdateSalaryMaintenanceRuleUsingPUTForbidden with default headers values
func NewUpdateSalaryMaintenanceRuleUsingPUTForbidden() *UpdateSalaryMaintenanceRuleUsingPUTForbidden {
	return &UpdateSalaryMaintenanceRuleUsingPUTForbidden{}
}

/*
UpdateSalaryMaintenanceRuleUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateSalaryMaintenanceRuleUsingPUTForbidden struct {
}

// IsSuccess returns true when this update salary maintenance rule using p u t forbidden response has a 2xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update salary maintenance rule using p u t forbidden response has a 3xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update salary maintenance rule using p u t forbidden response has a 4xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update salary maintenance rule using p u t forbidden response has a 5xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update salary maintenance rule using p u t forbidden response a status code equal to that given
func (o *UpdateSalaryMaintenanceRuleUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update salary maintenance rule using p u t forbidden response
func (o *UpdateSalaryMaintenanceRuleUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/salaryMaintenanceRule][%d] updateSalaryMaintenanceRuleUsingPUTForbidden", 403)
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/salaryMaintenanceRule][%d] updateSalaryMaintenanceRuleUsingPUTForbidden", 403)
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSalaryMaintenanceRuleUsingPUTNotFound creates a UpdateSalaryMaintenanceRuleUsingPUTNotFound with default headers values
func NewUpdateSalaryMaintenanceRuleUsingPUTNotFound() *UpdateSalaryMaintenanceRuleUsingPUTNotFound {
	return &UpdateSalaryMaintenanceRuleUsingPUTNotFound{}
}

/*
UpdateSalaryMaintenanceRuleUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateSalaryMaintenanceRuleUsingPUTNotFound struct {
}

// IsSuccess returns true when this update salary maintenance rule using p u t not found response has a 2xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update salary maintenance rule using p u t not found response has a 3xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update salary maintenance rule using p u t not found response has a 4xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update salary maintenance rule using p u t not found response has a 5xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update salary maintenance rule using p u t not found response a status code equal to that given
func (o *UpdateSalaryMaintenanceRuleUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update salary maintenance rule using p u t not found response
func (o *UpdateSalaryMaintenanceRuleUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/salaryMaintenanceRule][%d] updateSalaryMaintenanceRuleUsingPUTNotFound", 404)
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/salaryMaintenanceRule][%d] updateSalaryMaintenanceRuleUsingPUTNotFound", 404)
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSalaryMaintenanceRuleUsingPUTInternalServerError creates a UpdateSalaryMaintenanceRuleUsingPUTInternalServerError with default headers values
func NewUpdateSalaryMaintenanceRuleUsingPUTInternalServerError() *UpdateSalaryMaintenanceRuleUsingPUTInternalServerError {
	return &UpdateSalaryMaintenanceRuleUsingPUTInternalServerError{}
}

/*
UpdateSalaryMaintenanceRuleUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateSalaryMaintenanceRuleUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update salary maintenance rule using p u t internal server error response has a 2xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update salary maintenance rule using p u t internal server error response has a 3xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update salary maintenance rule using p u t internal server error response has a 4xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update salary maintenance rule using p u t internal server error response has a 5xx status code
func (o *UpdateSalaryMaintenanceRuleUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update salary maintenance rule using p u t internal server error response a status code equal to that given
func (o *UpdateSalaryMaintenanceRuleUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update salary maintenance rule using p u t internal server error response
func (o *UpdateSalaryMaintenanceRuleUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/salaryMaintenanceRule][%d] updateSalaryMaintenanceRuleUsingPUTInternalServerError", 500)
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/salaryMaintenanceRule][%d] updateSalaryMaintenanceRuleUsingPUTInternalServerError", 500)
}

func (o *UpdateSalaryMaintenanceRuleUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
