// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateUnderwritingDataCodeUsingPUTReader is a Reader for the UpdateUnderwritingDataCodeUsingPUT structure.
type UpdateUnderwritingDataCodeUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateUnderwritingDataCodeUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateUnderwritingDataCodeUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateUnderwritingDataCodeUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateUnderwritingDataCodeUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateUnderwritingDataCodeUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateUnderwritingDataCodeUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateUnderwritingDataCodeUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateUnderwritingDataCodeUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/policy/underwritingDataCode] updateUnderwritingDataCodeUsingPUT", response, response.Code())
	}
}

// NewUpdateUnderwritingDataCodeUsingPUTOK creates a UpdateUnderwritingDataCodeUsingPUTOK with default headers values
func NewUpdateUnderwritingDataCodeUsingPUTOK() *UpdateUnderwritingDataCodeUsingPUTOK {
	return &UpdateUnderwritingDataCodeUsingPUTOK{}
}

/*
UpdateUnderwritingDataCodeUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateUnderwritingDataCodeUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update underwriting data code using p u t o k response has a 2xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update underwriting data code using p u t o k response has a 3xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update underwriting data code using p u t o k response has a 4xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update underwriting data code using p u t o k response has a 5xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update underwriting data code using p u t o k response a status code equal to that given
func (o *UpdateUnderwritingDataCodeUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update underwriting data code using p u t o k response
func (o *UpdateUnderwritingDataCodeUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateUnderwritingDataCodeUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/underwritingDataCode][%d] updateUnderwritingDataCodeUsingPUTOK %s", 200, payload)
}

func (o *UpdateUnderwritingDataCodeUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/underwritingDataCode][%d] updateUnderwritingDataCodeUsingPUTOK %s", 200, payload)
}

func (o *UpdateUnderwritingDataCodeUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateUnderwritingDataCodeUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUnderwritingDataCodeUsingPUTCreated creates a UpdateUnderwritingDataCodeUsingPUTCreated with default headers values
func NewUpdateUnderwritingDataCodeUsingPUTCreated() *UpdateUnderwritingDataCodeUsingPUTCreated {
	return &UpdateUnderwritingDataCodeUsingPUTCreated{}
}

/*
UpdateUnderwritingDataCodeUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateUnderwritingDataCodeUsingPUTCreated struct {
}

// IsSuccess returns true when this update underwriting data code using p u t created response has a 2xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update underwriting data code using p u t created response has a 3xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update underwriting data code using p u t created response has a 4xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update underwriting data code using p u t created response has a 5xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update underwriting data code using p u t created response a status code equal to that given
func (o *UpdateUnderwritingDataCodeUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update underwriting data code using p u t created response
func (o *UpdateUnderwritingDataCodeUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateUnderwritingDataCodeUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/underwritingDataCode][%d] updateUnderwritingDataCodeUsingPUTCreated", 201)
}

func (o *UpdateUnderwritingDataCodeUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/underwritingDataCode][%d] updateUnderwritingDataCodeUsingPUTCreated", 201)
}

func (o *UpdateUnderwritingDataCodeUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUnderwritingDataCodeUsingPUTBadRequest creates a UpdateUnderwritingDataCodeUsingPUTBadRequest with default headers values
func NewUpdateUnderwritingDataCodeUsingPUTBadRequest() *UpdateUnderwritingDataCodeUsingPUTBadRequest {
	return &UpdateUnderwritingDataCodeUsingPUTBadRequest{}
}

/*
UpdateUnderwritingDataCodeUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateUnderwritingDataCodeUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update underwriting data code using p u t bad request response has a 2xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update underwriting data code using p u t bad request response has a 3xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update underwriting data code using p u t bad request response has a 4xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update underwriting data code using p u t bad request response has a 5xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update underwriting data code using p u t bad request response a status code equal to that given
func (o *UpdateUnderwritingDataCodeUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update underwriting data code using p u t bad request response
func (o *UpdateUnderwritingDataCodeUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateUnderwritingDataCodeUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/underwritingDataCode][%d] updateUnderwritingDataCodeUsingPUTBadRequest", 400)
}

func (o *UpdateUnderwritingDataCodeUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/underwritingDataCode][%d] updateUnderwritingDataCodeUsingPUTBadRequest", 400)
}

func (o *UpdateUnderwritingDataCodeUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUnderwritingDataCodeUsingPUTUnauthorized creates a UpdateUnderwritingDataCodeUsingPUTUnauthorized with default headers values
func NewUpdateUnderwritingDataCodeUsingPUTUnauthorized() *UpdateUnderwritingDataCodeUsingPUTUnauthorized {
	return &UpdateUnderwritingDataCodeUsingPUTUnauthorized{}
}

/*
UpdateUnderwritingDataCodeUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateUnderwritingDataCodeUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update underwriting data code using p u t unauthorized response has a 2xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update underwriting data code using p u t unauthorized response has a 3xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update underwriting data code using p u t unauthorized response has a 4xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update underwriting data code using p u t unauthorized response has a 5xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update underwriting data code using p u t unauthorized response a status code equal to that given
func (o *UpdateUnderwritingDataCodeUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update underwriting data code using p u t unauthorized response
func (o *UpdateUnderwritingDataCodeUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateUnderwritingDataCodeUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/underwritingDataCode][%d] updateUnderwritingDataCodeUsingPUTUnauthorized", 401)
}

func (o *UpdateUnderwritingDataCodeUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/underwritingDataCode][%d] updateUnderwritingDataCodeUsingPUTUnauthorized", 401)
}

func (o *UpdateUnderwritingDataCodeUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUnderwritingDataCodeUsingPUTForbidden creates a UpdateUnderwritingDataCodeUsingPUTForbidden with default headers values
func NewUpdateUnderwritingDataCodeUsingPUTForbidden() *UpdateUnderwritingDataCodeUsingPUTForbidden {
	return &UpdateUnderwritingDataCodeUsingPUTForbidden{}
}

/*
UpdateUnderwritingDataCodeUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateUnderwritingDataCodeUsingPUTForbidden struct {
}

// IsSuccess returns true when this update underwriting data code using p u t forbidden response has a 2xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update underwriting data code using p u t forbidden response has a 3xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update underwriting data code using p u t forbidden response has a 4xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update underwriting data code using p u t forbidden response has a 5xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update underwriting data code using p u t forbidden response a status code equal to that given
func (o *UpdateUnderwritingDataCodeUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update underwriting data code using p u t forbidden response
func (o *UpdateUnderwritingDataCodeUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateUnderwritingDataCodeUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/underwritingDataCode][%d] updateUnderwritingDataCodeUsingPUTForbidden", 403)
}

func (o *UpdateUnderwritingDataCodeUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/underwritingDataCode][%d] updateUnderwritingDataCodeUsingPUTForbidden", 403)
}

func (o *UpdateUnderwritingDataCodeUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUnderwritingDataCodeUsingPUTNotFound creates a UpdateUnderwritingDataCodeUsingPUTNotFound with default headers values
func NewUpdateUnderwritingDataCodeUsingPUTNotFound() *UpdateUnderwritingDataCodeUsingPUTNotFound {
	return &UpdateUnderwritingDataCodeUsingPUTNotFound{}
}

/*
UpdateUnderwritingDataCodeUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateUnderwritingDataCodeUsingPUTNotFound struct {
}

// IsSuccess returns true when this update underwriting data code using p u t not found response has a 2xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update underwriting data code using p u t not found response has a 3xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update underwriting data code using p u t not found response has a 4xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update underwriting data code using p u t not found response has a 5xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update underwriting data code using p u t not found response a status code equal to that given
func (o *UpdateUnderwritingDataCodeUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update underwriting data code using p u t not found response
func (o *UpdateUnderwritingDataCodeUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateUnderwritingDataCodeUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/underwritingDataCode][%d] updateUnderwritingDataCodeUsingPUTNotFound", 404)
}

func (o *UpdateUnderwritingDataCodeUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/underwritingDataCode][%d] updateUnderwritingDataCodeUsingPUTNotFound", 404)
}

func (o *UpdateUnderwritingDataCodeUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUnderwritingDataCodeUsingPUTInternalServerError creates a UpdateUnderwritingDataCodeUsingPUTInternalServerError with default headers values
func NewUpdateUnderwritingDataCodeUsingPUTInternalServerError() *UpdateUnderwritingDataCodeUsingPUTInternalServerError {
	return &UpdateUnderwritingDataCodeUsingPUTInternalServerError{}
}

/*
UpdateUnderwritingDataCodeUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateUnderwritingDataCodeUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update underwriting data code using p u t internal server error response has a 2xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update underwriting data code using p u t internal server error response has a 3xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update underwriting data code using p u t internal server error response has a 4xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update underwriting data code using p u t internal server error response has a 5xx status code
func (o *UpdateUnderwritingDataCodeUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update underwriting data code using p u t internal server error response a status code equal to that given
func (o *UpdateUnderwritingDataCodeUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update underwriting data code using p u t internal server error response
func (o *UpdateUnderwritingDataCodeUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateUnderwritingDataCodeUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/underwritingDataCode][%d] updateUnderwritingDataCodeUsingPUTInternalServerError", 500)
}

func (o *UpdateUnderwritingDataCodeUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/underwritingDataCode][%d] updateUnderwritingDataCodeUsingPUTInternalServerError", 500)
}

func (o *UpdateUnderwritingDataCodeUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
