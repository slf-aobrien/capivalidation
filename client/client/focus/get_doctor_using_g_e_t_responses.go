// Code generated by go-swagger; DO NOT EDIT.

package focus

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetDoctorUsingGETReader is a Reader for the GetDoctorUsingGET structure.
type GetDoctorUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDoctorUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDoctorUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDoctorUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDoctorUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDoctorUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDoctorUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDoctorUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/focus/doctor] getDoctorUsingGET", response, response.Code())
	}
}

// NewGetDoctorUsingGETOK creates a GetDoctorUsingGETOK with default headers values
func NewGetDoctorUsingGETOK() *GetDoctorUsingGETOK {
	return &GetDoctorUsingGETOK{}
}

/*
GetDoctorUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetDoctorUsingGETOK struct {
	Payload *models.ResponseWrapperDoctorDTO
}

// IsSuccess returns true when this get doctor using g e t o k response has a 2xx status code
func (o *GetDoctorUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get doctor using g e t o k response has a 3xx status code
func (o *GetDoctorUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get doctor using g e t o k response has a 4xx status code
func (o *GetDoctorUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get doctor using g e t o k response has a 5xx status code
func (o *GetDoctorUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get doctor using g e t o k response a status code equal to that given
func (o *GetDoctorUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get doctor using g e t o k response
func (o *GetDoctorUsingGETOK) Code() int {
	return 200
}

func (o *GetDoctorUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/focus/doctor][%d] getDoctorUsingGETOK %s", 200, payload)
}

func (o *GetDoctorUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/focus/doctor][%d] getDoctorUsingGETOK %s", 200, payload)
}

func (o *GetDoctorUsingGETOK) GetPayload() *models.ResponseWrapperDoctorDTO {
	return o.Payload
}

func (o *GetDoctorUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperDoctorDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDoctorUsingGETBadRequest creates a GetDoctorUsingGETBadRequest with default headers values
func NewGetDoctorUsingGETBadRequest() *GetDoctorUsingGETBadRequest {
	return &GetDoctorUsingGETBadRequest{}
}

/*
GetDoctorUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDoctorUsingGETBadRequest struct {
}

// IsSuccess returns true when this get doctor using g e t bad request response has a 2xx status code
func (o *GetDoctorUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get doctor using g e t bad request response has a 3xx status code
func (o *GetDoctorUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get doctor using g e t bad request response has a 4xx status code
func (o *GetDoctorUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get doctor using g e t bad request response has a 5xx status code
func (o *GetDoctorUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get doctor using g e t bad request response a status code equal to that given
func (o *GetDoctorUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get doctor using g e t bad request response
func (o *GetDoctorUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetDoctorUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/focus/doctor][%d] getDoctorUsingGETBadRequest", 400)
}

func (o *GetDoctorUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/focus/doctor][%d] getDoctorUsingGETBadRequest", 400)
}

func (o *GetDoctorUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDoctorUsingGETUnauthorized creates a GetDoctorUsingGETUnauthorized with default headers values
func NewGetDoctorUsingGETUnauthorized() *GetDoctorUsingGETUnauthorized {
	return &GetDoctorUsingGETUnauthorized{}
}

/*
GetDoctorUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDoctorUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get doctor using g e t unauthorized response has a 2xx status code
func (o *GetDoctorUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get doctor using g e t unauthorized response has a 3xx status code
func (o *GetDoctorUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get doctor using g e t unauthorized response has a 4xx status code
func (o *GetDoctorUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get doctor using g e t unauthorized response has a 5xx status code
func (o *GetDoctorUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get doctor using g e t unauthorized response a status code equal to that given
func (o *GetDoctorUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get doctor using g e t unauthorized response
func (o *GetDoctorUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetDoctorUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/focus/doctor][%d] getDoctorUsingGETUnauthorized", 401)
}

func (o *GetDoctorUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/focus/doctor][%d] getDoctorUsingGETUnauthorized", 401)
}

func (o *GetDoctorUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDoctorUsingGETForbidden creates a GetDoctorUsingGETForbidden with default headers values
func NewGetDoctorUsingGETForbidden() *GetDoctorUsingGETForbidden {
	return &GetDoctorUsingGETForbidden{}
}

/*
GetDoctorUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDoctorUsingGETForbidden struct {
}

// IsSuccess returns true when this get doctor using g e t forbidden response has a 2xx status code
func (o *GetDoctorUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get doctor using g e t forbidden response has a 3xx status code
func (o *GetDoctorUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get doctor using g e t forbidden response has a 4xx status code
func (o *GetDoctorUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get doctor using g e t forbidden response has a 5xx status code
func (o *GetDoctorUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get doctor using g e t forbidden response a status code equal to that given
func (o *GetDoctorUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get doctor using g e t forbidden response
func (o *GetDoctorUsingGETForbidden) Code() int {
	return 403
}

func (o *GetDoctorUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/focus/doctor][%d] getDoctorUsingGETForbidden", 403)
}

func (o *GetDoctorUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/focus/doctor][%d] getDoctorUsingGETForbidden", 403)
}

func (o *GetDoctorUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDoctorUsingGETNotFound creates a GetDoctorUsingGETNotFound with default headers values
func NewGetDoctorUsingGETNotFound() *GetDoctorUsingGETNotFound {
	return &GetDoctorUsingGETNotFound{}
}

/*
GetDoctorUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDoctorUsingGETNotFound struct {
}

// IsSuccess returns true when this get doctor using g e t not found response has a 2xx status code
func (o *GetDoctorUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get doctor using g e t not found response has a 3xx status code
func (o *GetDoctorUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get doctor using g e t not found response has a 4xx status code
func (o *GetDoctorUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get doctor using g e t not found response has a 5xx status code
func (o *GetDoctorUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get doctor using g e t not found response a status code equal to that given
func (o *GetDoctorUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get doctor using g e t not found response
func (o *GetDoctorUsingGETNotFound) Code() int {
	return 404
}

func (o *GetDoctorUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/focus/doctor][%d] getDoctorUsingGETNotFound", 404)
}

func (o *GetDoctorUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/focus/doctor][%d] getDoctorUsingGETNotFound", 404)
}

func (o *GetDoctorUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDoctorUsingGETInternalServerError creates a GetDoctorUsingGETInternalServerError with default headers values
func NewGetDoctorUsingGETInternalServerError() *GetDoctorUsingGETInternalServerError {
	return &GetDoctorUsingGETInternalServerError{}
}

/*
GetDoctorUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetDoctorUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get doctor using g e t internal server error response has a 2xx status code
func (o *GetDoctorUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get doctor using g e t internal server error response has a 3xx status code
func (o *GetDoctorUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get doctor using g e t internal server error response has a 4xx status code
func (o *GetDoctorUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get doctor using g e t internal server error response has a 5xx status code
func (o *GetDoctorUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get doctor using g e t internal server error response a status code equal to that given
func (o *GetDoctorUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get doctor using g e t internal server error response
func (o *GetDoctorUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetDoctorUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/focus/doctor][%d] getDoctorUsingGETInternalServerError", 500)
}

func (o *GetDoctorUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/focus/doctor][%d] getDoctorUsingGETInternalServerError", 500)
}

func (o *GetDoctorUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
