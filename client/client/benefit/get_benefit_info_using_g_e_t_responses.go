// Code generated by go-swagger; DO NOT EDIT.

package benefit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetBenefitInfoUsingGETReader is a Reader for the GetBenefitInfoUsingGET structure.
type GetBenefitInfoUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBenefitInfoUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBenefitInfoUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBenefitInfoUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBenefitInfoUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBenefitInfoUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBenefitInfoUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBenefitInfoUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/benefit/info] getBenefitInfoUsingGET", response, response.Code())
	}
}

// NewGetBenefitInfoUsingGETOK creates a GetBenefitInfoUsingGETOK with default headers values
func NewGetBenefitInfoUsingGETOK() *GetBenefitInfoUsingGETOK {
	return &GetBenefitInfoUsingGETOK{}
}

/*
GetBenefitInfoUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetBenefitInfoUsingGETOK struct {
	Payload *models.ResponseWrapperBenefitDTO
}

// IsSuccess returns true when this get benefit info using g e t o k response has a 2xx status code
func (o *GetBenefitInfoUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get benefit info using g e t o k response has a 3xx status code
func (o *GetBenefitInfoUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit info using g e t o k response has a 4xx status code
func (o *GetBenefitInfoUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get benefit info using g e t o k response has a 5xx status code
func (o *GetBenefitInfoUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit info using g e t o k response a status code equal to that given
func (o *GetBenefitInfoUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get benefit info using g e t o k response
func (o *GetBenefitInfoUsingGETOK) Code() int {
	return 200
}

func (o *GetBenefitInfoUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/benefit/info][%d] getBenefitInfoUsingGETOK %s", 200, payload)
}

func (o *GetBenefitInfoUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/benefit/info][%d] getBenefitInfoUsingGETOK %s", 200, payload)
}

func (o *GetBenefitInfoUsingGETOK) GetPayload() *models.ResponseWrapperBenefitDTO {
	return o.Payload
}

func (o *GetBenefitInfoUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBenefitDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBenefitInfoUsingGETBadRequest creates a GetBenefitInfoUsingGETBadRequest with default headers values
func NewGetBenefitInfoUsingGETBadRequest() *GetBenefitInfoUsingGETBadRequest {
	return &GetBenefitInfoUsingGETBadRequest{}
}

/*
GetBenefitInfoUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetBenefitInfoUsingGETBadRequest struct {
}

// IsSuccess returns true when this get benefit info using g e t bad request response has a 2xx status code
func (o *GetBenefitInfoUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit info using g e t bad request response has a 3xx status code
func (o *GetBenefitInfoUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit info using g e t bad request response has a 4xx status code
func (o *GetBenefitInfoUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get benefit info using g e t bad request response has a 5xx status code
func (o *GetBenefitInfoUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit info using g e t bad request response a status code equal to that given
func (o *GetBenefitInfoUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get benefit info using g e t bad request response
func (o *GetBenefitInfoUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetBenefitInfoUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/benefit/info][%d] getBenefitInfoUsingGETBadRequest", 400)
}

func (o *GetBenefitInfoUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/benefit/info][%d] getBenefitInfoUsingGETBadRequest", 400)
}

func (o *GetBenefitInfoUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBenefitInfoUsingGETUnauthorized creates a GetBenefitInfoUsingGETUnauthorized with default headers values
func NewGetBenefitInfoUsingGETUnauthorized() *GetBenefitInfoUsingGETUnauthorized {
	return &GetBenefitInfoUsingGETUnauthorized{}
}

/*
GetBenefitInfoUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetBenefitInfoUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get benefit info using g e t unauthorized response has a 2xx status code
func (o *GetBenefitInfoUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit info using g e t unauthorized response has a 3xx status code
func (o *GetBenefitInfoUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit info using g e t unauthorized response has a 4xx status code
func (o *GetBenefitInfoUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get benefit info using g e t unauthorized response has a 5xx status code
func (o *GetBenefitInfoUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit info using g e t unauthorized response a status code equal to that given
func (o *GetBenefitInfoUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get benefit info using g e t unauthorized response
func (o *GetBenefitInfoUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetBenefitInfoUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/benefit/info][%d] getBenefitInfoUsingGETUnauthorized", 401)
}

func (o *GetBenefitInfoUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/benefit/info][%d] getBenefitInfoUsingGETUnauthorized", 401)
}

func (o *GetBenefitInfoUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBenefitInfoUsingGETForbidden creates a GetBenefitInfoUsingGETForbidden with default headers values
func NewGetBenefitInfoUsingGETForbidden() *GetBenefitInfoUsingGETForbidden {
	return &GetBenefitInfoUsingGETForbidden{}
}

/*
GetBenefitInfoUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBenefitInfoUsingGETForbidden struct {
}

// IsSuccess returns true when this get benefit info using g e t forbidden response has a 2xx status code
func (o *GetBenefitInfoUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit info using g e t forbidden response has a 3xx status code
func (o *GetBenefitInfoUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit info using g e t forbidden response has a 4xx status code
func (o *GetBenefitInfoUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get benefit info using g e t forbidden response has a 5xx status code
func (o *GetBenefitInfoUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit info using g e t forbidden response a status code equal to that given
func (o *GetBenefitInfoUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get benefit info using g e t forbidden response
func (o *GetBenefitInfoUsingGETForbidden) Code() int {
	return 403
}

func (o *GetBenefitInfoUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/benefit/info][%d] getBenefitInfoUsingGETForbidden", 403)
}

func (o *GetBenefitInfoUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/benefit/info][%d] getBenefitInfoUsingGETForbidden", 403)
}

func (o *GetBenefitInfoUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBenefitInfoUsingGETNotFound creates a GetBenefitInfoUsingGETNotFound with default headers values
func NewGetBenefitInfoUsingGETNotFound() *GetBenefitInfoUsingGETNotFound {
	return &GetBenefitInfoUsingGETNotFound{}
}

/*
GetBenefitInfoUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetBenefitInfoUsingGETNotFound struct {
}

// IsSuccess returns true when this get benefit info using g e t not found response has a 2xx status code
func (o *GetBenefitInfoUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit info using g e t not found response has a 3xx status code
func (o *GetBenefitInfoUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit info using g e t not found response has a 4xx status code
func (o *GetBenefitInfoUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get benefit info using g e t not found response has a 5xx status code
func (o *GetBenefitInfoUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit info using g e t not found response a status code equal to that given
func (o *GetBenefitInfoUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get benefit info using g e t not found response
func (o *GetBenefitInfoUsingGETNotFound) Code() int {
	return 404
}

func (o *GetBenefitInfoUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/benefit/info][%d] getBenefitInfoUsingGETNotFound", 404)
}

func (o *GetBenefitInfoUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/benefit/info][%d] getBenefitInfoUsingGETNotFound", 404)
}

func (o *GetBenefitInfoUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBenefitInfoUsingGETInternalServerError creates a GetBenefitInfoUsingGETInternalServerError with default headers values
func NewGetBenefitInfoUsingGETInternalServerError() *GetBenefitInfoUsingGETInternalServerError {
	return &GetBenefitInfoUsingGETInternalServerError{}
}

/*
GetBenefitInfoUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetBenefitInfoUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get benefit info using g e t internal server error response has a 2xx status code
func (o *GetBenefitInfoUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit info using g e t internal server error response has a 3xx status code
func (o *GetBenefitInfoUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit info using g e t internal server error response has a 4xx status code
func (o *GetBenefitInfoUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get benefit info using g e t internal server error response has a 5xx status code
func (o *GetBenefitInfoUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get benefit info using g e t internal server error response a status code equal to that given
func (o *GetBenefitInfoUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get benefit info using g e t internal server error response
func (o *GetBenefitInfoUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetBenefitInfoUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/benefit/info][%d] getBenefitInfoUsingGETInternalServerError", 500)
}

func (o *GetBenefitInfoUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/benefit/info][%d] getBenefitInfoUsingGETInternalServerError", 500)
}

func (o *GetBenefitInfoUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
