// Code generated by go-swagger; DO NOT EDIT.

package policy_bill_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// AddPayerReferenceUsingPOSTReader is a Reader for the AddPayerReferenceUsingPOST structure.
type AddPayerReferenceUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddPayerReferenceUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddPayerReferenceUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewAddPayerReferenceUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddPayerReferenceUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddPayerReferenceUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddPayerReferenceUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddPayerReferenceUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddPayerReferenceUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/policyBillGroup/addPayerReference] addPayerReferenceUsingPOST", response, response.Code())
	}
}

// NewAddPayerReferenceUsingPOSTOK creates a AddPayerReferenceUsingPOSTOK with default headers values
func NewAddPayerReferenceUsingPOSTOK() *AddPayerReferenceUsingPOSTOK {
	return &AddPayerReferenceUsingPOSTOK{}
}

/*
AddPayerReferenceUsingPOSTOK describes a response with status code 200, with default header values.

Success
*/
type AddPayerReferenceUsingPOSTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this add payer reference using p o s t o k response has a 2xx status code
func (o *AddPayerReferenceUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add payer reference using p o s t o k response has a 3xx status code
func (o *AddPayerReferenceUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add payer reference using p o s t o k response has a 4xx status code
func (o *AddPayerReferenceUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add payer reference using p o s t o k response has a 5xx status code
func (o *AddPayerReferenceUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add payer reference using p o s t o k response a status code equal to that given
func (o *AddPayerReferenceUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add payer reference using p o s t o k response
func (o *AddPayerReferenceUsingPOSTOK) Code() int {
	return 200
}

func (o *AddPayerReferenceUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/addPayerReference][%d] addPayerReferenceUsingPOSTOK %s", 200, payload)
}

func (o *AddPayerReferenceUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/addPayerReference][%d] addPayerReferenceUsingPOSTOK %s", 200, payload)
}

func (o *AddPayerReferenceUsingPOSTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *AddPayerReferenceUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddPayerReferenceUsingPOSTCreated creates a AddPayerReferenceUsingPOSTCreated with default headers values
func NewAddPayerReferenceUsingPOSTCreated() *AddPayerReferenceUsingPOSTCreated {
	return &AddPayerReferenceUsingPOSTCreated{}
}

/*
AddPayerReferenceUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type AddPayerReferenceUsingPOSTCreated struct {
}

// IsSuccess returns true when this add payer reference using p o s t created response has a 2xx status code
func (o *AddPayerReferenceUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add payer reference using p o s t created response has a 3xx status code
func (o *AddPayerReferenceUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add payer reference using p o s t created response has a 4xx status code
func (o *AddPayerReferenceUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add payer reference using p o s t created response has a 5xx status code
func (o *AddPayerReferenceUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add payer reference using p o s t created response a status code equal to that given
func (o *AddPayerReferenceUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add payer reference using p o s t created response
func (o *AddPayerReferenceUsingPOSTCreated) Code() int {
	return 201
}

func (o *AddPayerReferenceUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/addPayerReference][%d] addPayerReferenceUsingPOSTCreated", 201)
}

func (o *AddPayerReferenceUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/addPayerReference][%d] addPayerReferenceUsingPOSTCreated", 201)
}

func (o *AddPayerReferenceUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddPayerReferenceUsingPOSTBadRequest creates a AddPayerReferenceUsingPOSTBadRequest with default headers values
func NewAddPayerReferenceUsingPOSTBadRequest() *AddPayerReferenceUsingPOSTBadRequest {
	return &AddPayerReferenceUsingPOSTBadRequest{}
}

/*
AddPayerReferenceUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddPayerReferenceUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this add payer reference using p o s t bad request response has a 2xx status code
func (o *AddPayerReferenceUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add payer reference using p o s t bad request response has a 3xx status code
func (o *AddPayerReferenceUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add payer reference using p o s t bad request response has a 4xx status code
func (o *AddPayerReferenceUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add payer reference using p o s t bad request response has a 5xx status code
func (o *AddPayerReferenceUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add payer reference using p o s t bad request response a status code equal to that given
func (o *AddPayerReferenceUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add payer reference using p o s t bad request response
func (o *AddPayerReferenceUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *AddPayerReferenceUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/addPayerReference][%d] addPayerReferenceUsingPOSTBadRequest", 400)
}

func (o *AddPayerReferenceUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/addPayerReference][%d] addPayerReferenceUsingPOSTBadRequest", 400)
}

func (o *AddPayerReferenceUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddPayerReferenceUsingPOSTUnauthorized creates a AddPayerReferenceUsingPOSTUnauthorized with default headers values
func NewAddPayerReferenceUsingPOSTUnauthorized() *AddPayerReferenceUsingPOSTUnauthorized {
	return &AddPayerReferenceUsingPOSTUnauthorized{}
}

/*
AddPayerReferenceUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddPayerReferenceUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this add payer reference using p o s t unauthorized response has a 2xx status code
func (o *AddPayerReferenceUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add payer reference using p o s t unauthorized response has a 3xx status code
func (o *AddPayerReferenceUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add payer reference using p o s t unauthorized response has a 4xx status code
func (o *AddPayerReferenceUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add payer reference using p o s t unauthorized response has a 5xx status code
func (o *AddPayerReferenceUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add payer reference using p o s t unauthorized response a status code equal to that given
func (o *AddPayerReferenceUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add payer reference using p o s t unauthorized response
func (o *AddPayerReferenceUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *AddPayerReferenceUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/addPayerReference][%d] addPayerReferenceUsingPOSTUnauthorized", 401)
}

func (o *AddPayerReferenceUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/addPayerReference][%d] addPayerReferenceUsingPOSTUnauthorized", 401)
}

func (o *AddPayerReferenceUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddPayerReferenceUsingPOSTForbidden creates a AddPayerReferenceUsingPOSTForbidden with default headers values
func NewAddPayerReferenceUsingPOSTForbidden() *AddPayerReferenceUsingPOSTForbidden {
	return &AddPayerReferenceUsingPOSTForbidden{}
}

/*
AddPayerReferenceUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddPayerReferenceUsingPOSTForbidden struct {
}

// IsSuccess returns true when this add payer reference using p o s t forbidden response has a 2xx status code
func (o *AddPayerReferenceUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add payer reference using p o s t forbidden response has a 3xx status code
func (o *AddPayerReferenceUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add payer reference using p o s t forbidden response has a 4xx status code
func (o *AddPayerReferenceUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add payer reference using p o s t forbidden response has a 5xx status code
func (o *AddPayerReferenceUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add payer reference using p o s t forbidden response a status code equal to that given
func (o *AddPayerReferenceUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add payer reference using p o s t forbidden response
func (o *AddPayerReferenceUsingPOSTForbidden) Code() int {
	return 403
}

func (o *AddPayerReferenceUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/addPayerReference][%d] addPayerReferenceUsingPOSTForbidden", 403)
}

func (o *AddPayerReferenceUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/addPayerReference][%d] addPayerReferenceUsingPOSTForbidden", 403)
}

func (o *AddPayerReferenceUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddPayerReferenceUsingPOSTNotFound creates a AddPayerReferenceUsingPOSTNotFound with default headers values
func NewAddPayerReferenceUsingPOSTNotFound() *AddPayerReferenceUsingPOSTNotFound {
	return &AddPayerReferenceUsingPOSTNotFound{}
}

/*
AddPayerReferenceUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddPayerReferenceUsingPOSTNotFound struct {
}

// IsSuccess returns true when this add payer reference using p o s t not found response has a 2xx status code
func (o *AddPayerReferenceUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add payer reference using p o s t not found response has a 3xx status code
func (o *AddPayerReferenceUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add payer reference using p o s t not found response has a 4xx status code
func (o *AddPayerReferenceUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add payer reference using p o s t not found response has a 5xx status code
func (o *AddPayerReferenceUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add payer reference using p o s t not found response a status code equal to that given
func (o *AddPayerReferenceUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add payer reference using p o s t not found response
func (o *AddPayerReferenceUsingPOSTNotFound) Code() int {
	return 404
}

func (o *AddPayerReferenceUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/addPayerReference][%d] addPayerReferenceUsingPOSTNotFound", 404)
}

func (o *AddPayerReferenceUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/addPayerReference][%d] addPayerReferenceUsingPOSTNotFound", 404)
}

func (o *AddPayerReferenceUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddPayerReferenceUsingPOSTInternalServerError creates a AddPayerReferenceUsingPOSTInternalServerError with default headers values
func NewAddPayerReferenceUsingPOSTInternalServerError() *AddPayerReferenceUsingPOSTInternalServerError {
	return &AddPayerReferenceUsingPOSTInternalServerError{}
}

/*
AddPayerReferenceUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AddPayerReferenceUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this add payer reference using p o s t internal server error response has a 2xx status code
func (o *AddPayerReferenceUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add payer reference using p o s t internal server error response has a 3xx status code
func (o *AddPayerReferenceUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add payer reference using p o s t internal server error response has a 4xx status code
func (o *AddPayerReferenceUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add payer reference using p o s t internal server error response has a 5xx status code
func (o *AddPayerReferenceUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add payer reference using p o s t internal server error response a status code equal to that given
func (o *AddPayerReferenceUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add payer reference using p o s t internal server error response
func (o *AddPayerReferenceUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *AddPayerReferenceUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/addPayerReference][%d] addPayerReferenceUsingPOSTInternalServerError", 500)
}

func (o *AddPayerReferenceUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/addPayerReference][%d] addPayerReferenceUsingPOSTInternalServerError", 500)
}

func (o *AddPayerReferenceUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
