// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetMemberUsingGETReader is a Reader for the GetMemberUsingGET structure.
type GetMemberUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMemberUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMemberUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetMemberUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetMemberUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMemberUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMemberUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetMemberUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/member/memberInfo] getMemberUsingGET", response, response.Code())
	}
}

// NewGetMemberUsingGETOK creates a GetMemberUsingGETOK with default headers values
func NewGetMemberUsingGETOK() *GetMemberUsingGETOK {
	return &GetMemberUsingGETOK{}
}

/*
GetMemberUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetMemberUsingGETOK struct {
	Payload *models.ResponseWrapperMemberDTO
}

// IsSuccess returns true when this get member using g e t o k response has a 2xx status code
func (o *GetMemberUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get member using g e t o k response has a 3xx status code
func (o *GetMemberUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member using g e t o k response has a 4xx status code
func (o *GetMemberUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get member using g e t o k response has a 5xx status code
func (o *GetMemberUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get member using g e t o k response a status code equal to that given
func (o *GetMemberUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get member using g e t o k response
func (o *GetMemberUsingGETOK) Code() int {
	return 200
}

func (o *GetMemberUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberInfo][%d] getMemberUsingGETOK %s", 200, payload)
}

func (o *GetMemberUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberInfo][%d] getMemberUsingGETOK %s", 200, payload)
}

func (o *GetMemberUsingGETOK) GetPayload() *models.ResponseWrapperMemberDTO {
	return o.Payload
}

func (o *GetMemberUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperMemberDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMemberUsingGETBadRequest creates a GetMemberUsingGETBadRequest with default headers values
func NewGetMemberUsingGETBadRequest() *GetMemberUsingGETBadRequest {
	return &GetMemberUsingGETBadRequest{}
}

/*
GetMemberUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetMemberUsingGETBadRequest struct {
}

// IsSuccess returns true when this get member using g e t bad request response has a 2xx status code
func (o *GetMemberUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member using g e t bad request response has a 3xx status code
func (o *GetMemberUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member using g e t bad request response has a 4xx status code
func (o *GetMemberUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member using g e t bad request response has a 5xx status code
func (o *GetMemberUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get member using g e t bad request response a status code equal to that given
func (o *GetMemberUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get member using g e t bad request response
func (o *GetMemberUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetMemberUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberInfo][%d] getMemberUsingGETBadRequest", 400)
}

func (o *GetMemberUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberInfo][%d] getMemberUsingGETBadRequest", 400)
}

func (o *GetMemberUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberUsingGETUnauthorized creates a GetMemberUsingGETUnauthorized with default headers values
func NewGetMemberUsingGETUnauthorized() *GetMemberUsingGETUnauthorized {
	return &GetMemberUsingGETUnauthorized{}
}

/*
GetMemberUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetMemberUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get member using g e t unauthorized response has a 2xx status code
func (o *GetMemberUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member using g e t unauthorized response has a 3xx status code
func (o *GetMemberUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member using g e t unauthorized response has a 4xx status code
func (o *GetMemberUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member using g e t unauthorized response has a 5xx status code
func (o *GetMemberUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get member using g e t unauthorized response a status code equal to that given
func (o *GetMemberUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get member using g e t unauthorized response
func (o *GetMemberUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetMemberUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberInfo][%d] getMemberUsingGETUnauthorized", 401)
}

func (o *GetMemberUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberInfo][%d] getMemberUsingGETUnauthorized", 401)
}

func (o *GetMemberUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberUsingGETForbidden creates a GetMemberUsingGETForbidden with default headers values
func NewGetMemberUsingGETForbidden() *GetMemberUsingGETForbidden {
	return &GetMemberUsingGETForbidden{}
}

/*
GetMemberUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetMemberUsingGETForbidden struct {
}

// IsSuccess returns true when this get member using g e t forbidden response has a 2xx status code
func (o *GetMemberUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member using g e t forbidden response has a 3xx status code
func (o *GetMemberUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member using g e t forbidden response has a 4xx status code
func (o *GetMemberUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member using g e t forbidden response has a 5xx status code
func (o *GetMemberUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get member using g e t forbidden response a status code equal to that given
func (o *GetMemberUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get member using g e t forbidden response
func (o *GetMemberUsingGETForbidden) Code() int {
	return 403
}

func (o *GetMemberUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberInfo][%d] getMemberUsingGETForbidden", 403)
}

func (o *GetMemberUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberInfo][%d] getMemberUsingGETForbidden", 403)
}

func (o *GetMemberUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberUsingGETNotFound creates a GetMemberUsingGETNotFound with default headers values
func NewGetMemberUsingGETNotFound() *GetMemberUsingGETNotFound {
	return &GetMemberUsingGETNotFound{}
}

/*
GetMemberUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetMemberUsingGETNotFound struct {
}

// IsSuccess returns true when this get member using g e t not found response has a 2xx status code
func (o *GetMemberUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member using g e t not found response has a 3xx status code
func (o *GetMemberUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member using g e t not found response has a 4xx status code
func (o *GetMemberUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member using g e t not found response has a 5xx status code
func (o *GetMemberUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get member using g e t not found response a status code equal to that given
func (o *GetMemberUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get member using g e t not found response
func (o *GetMemberUsingGETNotFound) Code() int {
	return 404
}

func (o *GetMemberUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberInfo][%d] getMemberUsingGETNotFound", 404)
}

func (o *GetMemberUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberInfo][%d] getMemberUsingGETNotFound", 404)
}

func (o *GetMemberUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberUsingGETInternalServerError creates a GetMemberUsingGETInternalServerError with default headers values
func NewGetMemberUsingGETInternalServerError() *GetMemberUsingGETInternalServerError {
	return &GetMemberUsingGETInternalServerError{}
}

/*
GetMemberUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetMemberUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get member using g e t internal server error response has a 2xx status code
func (o *GetMemberUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member using g e t internal server error response has a 3xx status code
func (o *GetMemberUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member using g e t internal server error response has a 4xx status code
func (o *GetMemberUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get member using g e t internal server error response has a 5xx status code
func (o *GetMemberUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get member using g e t internal server error response a status code equal to that given
func (o *GetMemberUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get member using g e t internal server error response
func (o *GetMemberUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetMemberUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberInfo][%d] getMemberUsingGETInternalServerError", 500)
}

func (o *GetMemberUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/memberInfo][%d] getMemberUsingGETInternalServerError", 500)
}

func (o *GetMemberUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
