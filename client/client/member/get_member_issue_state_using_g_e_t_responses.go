// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetMemberIssueStateUsingGETReader is a Reader for the GetMemberIssueStateUsingGET structure.
type GetMemberIssueStateUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMemberIssueStateUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMemberIssueStateUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetMemberIssueStateUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetMemberIssueStateUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMemberIssueStateUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMemberIssueStateUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetMemberIssueStateUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/member/issueState] getMemberIssueStateUsingGET", response, response.Code())
	}
}

// NewGetMemberIssueStateUsingGETOK creates a GetMemberIssueStateUsingGETOK with default headers values
func NewGetMemberIssueStateUsingGETOK() *GetMemberIssueStateUsingGETOK {
	return &GetMemberIssueStateUsingGETOK{}
}

/*
GetMemberIssueStateUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetMemberIssueStateUsingGETOK struct {
	Payload *models.ResponseWrapperString
}

// IsSuccess returns true when this get member issue state using g e t o k response has a 2xx status code
func (o *GetMemberIssueStateUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get member issue state using g e t o k response has a 3xx status code
func (o *GetMemberIssueStateUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member issue state using g e t o k response has a 4xx status code
func (o *GetMemberIssueStateUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get member issue state using g e t o k response has a 5xx status code
func (o *GetMemberIssueStateUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get member issue state using g e t o k response a status code equal to that given
func (o *GetMemberIssueStateUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get member issue state using g e t o k response
func (o *GetMemberIssueStateUsingGETOK) Code() int {
	return 200
}

func (o *GetMemberIssueStateUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/issueState][%d] getMemberIssueStateUsingGETOK %s", 200, payload)
}

func (o *GetMemberIssueStateUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/issueState][%d] getMemberIssueStateUsingGETOK %s", 200, payload)
}

func (o *GetMemberIssueStateUsingGETOK) GetPayload() *models.ResponseWrapperString {
	return o.Payload
}

func (o *GetMemberIssueStateUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperString)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMemberIssueStateUsingGETBadRequest creates a GetMemberIssueStateUsingGETBadRequest with default headers values
func NewGetMemberIssueStateUsingGETBadRequest() *GetMemberIssueStateUsingGETBadRequest {
	return &GetMemberIssueStateUsingGETBadRequest{}
}

/*
GetMemberIssueStateUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetMemberIssueStateUsingGETBadRequest struct {
}

// IsSuccess returns true when this get member issue state using g e t bad request response has a 2xx status code
func (o *GetMemberIssueStateUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member issue state using g e t bad request response has a 3xx status code
func (o *GetMemberIssueStateUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member issue state using g e t bad request response has a 4xx status code
func (o *GetMemberIssueStateUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member issue state using g e t bad request response has a 5xx status code
func (o *GetMemberIssueStateUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get member issue state using g e t bad request response a status code equal to that given
func (o *GetMemberIssueStateUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get member issue state using g e t bad request response
func (o *GetMemberIssueStateUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetMemberIssueStateUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/issueState][%d] getMemberIssueStateUsingGETBadRequest", 400)
}

func (o *GetMemberIssueStateUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/issueState][%d] getMemberIssueStateUsingGETBadRequest", 400)
}

func (o *GetMemberIssueStateUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberIssueStateUsingGETUnauthorized creates a GetMemberIssueStateUsingGETUnauthorized with default headers values
func NewGetMemberIssueStateUsingGETUnauthorized() *GetMemberIssueStateUsingGETUnauthorized {
	return &GetMemberIssueStateUsingGETUnauthorized{}
}

/*
GetMemberIssueStateUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetMemberIssueStateUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get member issue state using g e t unauthorized response has a 2xx status code
func (o *GetMemberIssueStateUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member issue state using g e t unauthorized response has a 3xx status code
func (o *GetMemberIssueStateUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member issue state using g e t unauthorized response has a 4xx status code
func (o *GetMemberIssueStateUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member issue state using g e t unauthorized response has a 5xx status code
func (o *GetMemberIssueStateUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get member issue state using g e t unauthorized response a status code equal to that given
func (o *GetMemberIssueStateUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get member issue state using g e t unauthorized response
func (o *GetMemberIssueStateUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetMemberIssueStateUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/issueState][%d] getMemberIssueStateUsingGETUnauthorized", 401)
}

func (o *GetMemberIssueStateUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/issueState][%d] getMemberIssueStateUsingGETUnauthorized", 401)
}

func (o *GetMemberIssueStateUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberIssueStateUsingGETForbidden creates a GetMemberIssueStateUsingGETForbidden with default headers values
func NewGetMemberIssueStateUsingGETForbidden() *GetMemberIssueStateUsingGETForbidden {
	return &GetMemberIssueStateUsingGETForbidden{}
}

/*
GetMemberIssueStateUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetMemberIssueStateUsingGETForbidden struct {
}

// IsSuccess returns true when this get member issue state using g e t forbidden response has a 2xx status code
func (o *GetMemberIssueStateUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member issue state using g e t forbidden response has a 3xx status code
func (o *GetMemberIssueStateUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member issue state using g e t forbidden response has a 4xx status code
func (o *GetMemberIssueStateUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member issue state using g e t forbidden response has a 5xx status code
func (o *GetMemberIssueStateUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get member issue state using g e t forbidden response a status code equal to that given
func (o *GetMemberIssueStateUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get member issue state using g e t forbidden response
func (o *GetMemberIssueStateUsingGETForbidden) Code() int {
	return 403
}

func (o *GetMemberIssueStateUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/issueState][%d] getMemberIssueStateUsingGETForbidden", 403)
}

func (o *GetMemberIssueStateUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/issueState][%d] getMemberIssueStateUsingGETForbidden", 403)
}

func (o *GetMemberIssueStateUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberIssueStateUsingGETNotFound creates a GetMemberIssueStateUsingGETNotFound with default headers values
func NewGetMemberIssueStateUsingGETNotFound() *GetMemberIssueStateUsingGETNotFound {
	return &GetMemberIssueStateUsingGETNotFound{}
}

/*
GetMemberIssueStateUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetMemberIssueStateUsingGETNotFound struct {
}

// IsSuccess returns true when this get member issue state using g e t not found response has a 2xx status code
func (o *GetMemberIssueStateUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member issue state using g e t not found response has a 3xx status code
func (o *GetMemberIssueStateUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member issue state using g e t not found response has a 4xx status code
func (o *GetMemberIssueStateUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member issue state using g e t not found response has a 5xx status code
func (o *GetMemberIssueStateUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get member issue state using g e t not found response a status code equal to that given
func (o *GetMemberIssueStateUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get member issue state using g e t not found response
func (o *GetMemberIssueStateUsingGETNotFound) Code() int {
	return 404
}

func (o *GetMemberIssueStateUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/issueState][%d] getMemberIssueStateUsingGETNotFound", 404)
}

func (o *GetMemberIssueStateUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/issueState][%d] getMemberIssueStateUsingGETNotFound", 404)
}

func (o *GetMemberIssueStateUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberIssueStateUsingGETInternalServerError creates a GetMemberIssueStateUsingGETInternalServerError with default headers values
func NewGetMemberIssueStateUsingGETInternalServerError() *GetMemberIssueStateUsingGETInternalServerError {
	return &GetMemberIssueStateUsingGETInternalServerError{}
}

/*
GetMemberIssueStateUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetMemberIssueStateUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get member issue state using g e t internal server error response has a 2xx status code
func (o *GetMemberIssueStateUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member issue state using g e t internal server error response has a 3xx status code
func (o *GetMemberIssueStateUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member issue state using g e t internal server error response has a 4xx status code
func (o *GetMemberIssueStateUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get member issue state using g e t internal server error response has a 5xx status code
func (o *GetMemberIssueStateUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get member issue state using g e t internal server error response a status code equal to that given
func (o *GetMemberIssueStateUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get member issue state using g e t internal server error response
func (o *GetMemberIssueStateUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetMemberIssueStateUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/issueState][%d] getMemberIssueStateUsingGETInternalServerError", 500)
}

func (o *GetMemberIssueStateUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/issueState][%d] getMemberIssueStateUsingGETInternalServerError", 500)
}

func (o *GetMemberIssueStateUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
