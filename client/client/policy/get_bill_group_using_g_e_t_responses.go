// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetBillGroupUsingGETReader is a Reader for the GetBillGroupUsingGET structure.
type GetBillGroupUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBillGroupUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBillGroupUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBillGroupUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBillGroupUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBillGroupUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBillGroupUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBillGroupUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/policy/billGroup] getBillGroupUsingGET", response, response.Code())
	}
}

// NewGetBillGroupUsingGETOK creates a GetBillGroupUsingGETOK with default headers values
func NewGetBillGroupUsingGETOK() *GetBillGroupUsingGETOK {
	return &GetBillGroupUsingGETOK{}
}

/*
GetBillGroupUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetBillGroupUsingGETOK struct {
	Payload *models.ResponseWrapperListBillGroupDTO
}

// IsSuccess returns true when this get bill group using g e t o k response has a 2xx status code
func (o *GetBillGroupUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get bill group using g e t o k response has a 3xx status code
func (o *GetBillGroupUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bill group using g e t o k response has a 4xx status code
func (o *GetBillGroupUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bill group using g e t o k response has a 5xx status code
func (o *GetBillGroupUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get bill group using g e t o k response a status code equal to that given
func (o *GetBillGroupUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get bill group using g e t o k response
func (o *GetBillGroupUsingGETOK) Code() int {
	return 200
}

func (o *GetBillGroupUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroup][%d] getBillGroupUsingGETOK %s", 200, payload)
}

func (o *GetBillGroupUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroup][%d] getBillGroupUsingGETOK %s", 200, payload)
}

func (o *GetBillGroupUsingGETOK) GetPayload() *models.ResponseWrapperListBillGroupDTO {
	return o.Payload
}

func (o *GetBillGroupUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperListBillGroupDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBillGroupUsingGETBadRequest creates a GetBillGroupUsingGETBadRequest with default headers values
func NewGetBillGroupUsingGETBadRequest() *GetBillGroupUsingGETBadRequest {
	return &GetBillGroupUsingGETBadRequest{}
}

/*
GetBillGroupUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetBillGroupUsingGETBadRequest struct {
}

// IsSuccess returns true when this get bill group using g e t bad request response has a 2xx status code
func (o *GetBillGroupUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bill group using g e t bad request response has a 3xx status code
func (o *GetBillGroupUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bill group using g e t bad request response has a 4xx status code
func (o *GetBillGroupUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bill group using g e t bad request response has a 5xx status code
func (o *GetBillGroupUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get bill group using g e t bad request response a status code equal to that given
func (o *GetBillGroupUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get bill group using g e t bad request response
func (o *GetBillGroupUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetBillGroupUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroup][%d] getBillGroupUsingGETBadRequest", 400)
}

func (o *GetBillGroupUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroup][%d] getBillGroupUsingGETBadRequest", 400)
}

func (o *GetBillGroupUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBillGroupUsingGETUnauthorized creates a GetBillGroupUsingGETUnauthorized with default headers values
func NewGetBillGroupUsingGETUnauthorized() *GetBillGroupUsingGETUnauthorized {
	return &GetBillGroupUsingGETUnauthorized{}
}

/*
GetBillGroupUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetBillGroupUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get bill group using g e t unauthorized response has a 2xx status code
func (o *GetBillGroupUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bill group using g e t unauthorized response has a 3xx status code
func (o *GetBillGroupUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bill group using g e t unauthorized response has a 4xx status code
func (o *GetBillGroupUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bill group using g e t unauthorized response has a 5xx status code
func (o *GetBillGroupUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get bill group using g e t unauthorized response a status code equal to that given
func (o *GetBillGroupUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get bill group using g e t unauthorized response
func (o *GetBillGroupUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetBillGroupUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroup][%d] getBillGroupUsingGETUnauthorized", 401)
}

func (o *GetBillGroupUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroup][%d] getBillGroupUsingGETUnauthorized", 401)
}

func (o *GetBillGroupUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBillGroupUsingGETForbidden creates a GetBillGroupUsingGETForbidden with default headers values
func NewGetBillGroupUsingGETForbidden() *GetBillGroupUsingGETForbidden {
	return &GetBillGroupUsingGETForbidden{}
}

/*
GetBillGroupUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBillGroupUsingGETForbidden struct {
}

// IsSuccess returns true when this get bill group using g e t forbidden response has a 2xx status code
func (o *GetBillGroupUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bill group using g e t forbidden response has a 3xx status code
func (o *GetBillGroupUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bill group using g e t forbidden response has a 4xx status code
func (o *GetBillGroupUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bill group using g e t forbidden response has a 5xx status code
func (o *GetBillGroupUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get bill group using g e t forbidden response a status code equal to that given
func (o *GetBillGroupUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get bill group using g e t forbidden response
func (o *GetBillGroupUsingGETForbidden) Code() int {
	return 403
}

func (o *GetBillGroupUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroup][%d] getBillGroupUsingGETForbidden", 403)
}

func (o *GetBillGroupUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroup][%d] getBillGroupUsingGETForbidden", 403)
}

func (o *GetBillGroupUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBillGroupUsingGETNotFound creates a GetBillGroupUsingGETNotFound with default headers values
func NewGetBillGroupUsingGETNotFound() *GetBillGroupUsingGETNotFound {
	return &GetBillGroupUsingGETNotFound{}
}

/*
GetBillGroupUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetBillGroupUsingGETNotFound struct {
}

// IsSuccess returns true when this get bill group using g e t not found response has a 2xx status code
func (o *GetBillGroupUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bill group using g e t not found response has a 3xx status code
func (o *GetBillGroupUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bill group using g e t not found response has a 4xx status code
func (o *GetBillGroupUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bill group using g e t not found response has a 5xx status code
func (o *GetBillGroupUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get bill group using g e t not found response a status code equal to that given
func (o *GetBillGroupUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get bill group using g e t not found response
func (o *GetBillGroupUsingGETNotFound) Code() int {
	return 404
}

func (o *GetBillGroupUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroup][%d] getBillGroupUsingGETNotFound", 404)
}

func (o *GetBillGroupUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroup][%d] getBillGroupUsingGETNotFound", 404)
}

func (o *GetBillGroupUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBillGroupUsingGETInternalServerError creates a GetBillGroupUsingGETInternalServerError with default headers values
func NewGetBillGroupUsingGETInternalServerError() *GetBillGroupUsingGETInternalServerError {
	return &GetBillGroupUsingGETInternalServerError{}
}

/*
GetBillGroupUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetBillGroupUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get bill group using g e t internal server error response has a 2xx status code
func (o *GetBillGroupUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bill group using g e t internal server error response has a 3xx status code
func (o *GetBillGroupUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bill group using g e t internal server error response has a 4xx status code
func (o *GetBillGroupUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bill group using g e t internal server error response has a 5xx status code
func (o *GetBillGroupUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get bill group using g e t internal server error response a status code equal to that given
func (o *GetBillGroupUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get bill group using g e t internal server error response
func (o *GetBillGroupUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetBillGroupUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroup][%d] getBillGroupUsingGETInternalServerError", 500)
}

func (o *GetBillGroupUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroup][%d] getBillGroupUsingGETInternalServerError", 500)
}

func (o *GetBillGroupUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
