// Code generated by go-swagger; DO NOT EDIT.

package dependent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// ExpireDependentBenefitExclusionsUsingPUTReader is a Reader for the ExpireDependentBenefitExclusionsUsingPUT structure.
type ExpireDependentBenefitExclusionsUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExpireDependentBenefitExclusionsUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExpireDependentBenefitExclusionsUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewExpireDependentBenefitExclusionsUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewExpireDependentBenefitExclusionsUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewExpireDependentBenefitExclusionsUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewExpireDependentBenefitExclusionsUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewExpireDependentBenefitExclusionsUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewExpireDependentBenefitExclusionsUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/dependent/benefitexclusions/expire] expireDependentBenefitExclusionsUsingPUT", response, response.Code())
	}
}

// NewExpireDependentBenefitExclusionsUsingPUTOK creates a ExpireDependentBenefitExclusionsUsingPUTOK with default headers values
func NewExpireDependentBenefitExclusionsUsingPUTOK() *ExpireDependentBenefitExclusionsUsingPUTOK {
	return &ExpireDependentBenefitExclusionsUsingPUTOK{}
}

/*
ExpireDependentBenefitExclusionsUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type ExpireDependentBenefitExclusionsUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this expire dependent benefit exclusions using p u t o k response has a 2xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this expire dependent benefit exclusions using p u t o k response has a 3xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this expire dependent benefit exclusions using p u t o k response has a 4xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this expire dependent benefit exclusions using p u t o k response has a 5xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this expire dependent benefit exclusions using p u t o k response a status code equal to that given
func (o *ExpireDependentBenefitExclusionsUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the expire dependent benefit exclusions using p u t o k response
func (o *ExpireDependentBenefitExclusionsUsingPUTOK) Code() int {
	return 200
}

func (o *ExpireDependentBenefitExclusionsUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/benefitexclusions/expire][%d] expireDependentBenefitExclusionsUsingPUTOK %s", 200, payload)
}

func (o *ExpireDependentBenefitExclusionsUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/benefitexclusions/expire][%d] expireDependentBenefitExclusionsUsingPUTOK %s", 200, payload)
}

func (o *ExpireDependentBenefitExclusionsUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *ExpireDependentBenefitExclusionsUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExpireDependentBenefitExclusionsUsingPUTCreated creates a ExpireDependentBenefitExclusionsUsingPUTCreated with default headers values
func NewExpireDependentBenefitExclusionsUsingPUTCreated() *ExpireDependentBenefitExclusionsUsingPUTCreated {
	return &ExpireDependentBenefitExclusionsUsingPUTCreated{}
}

/*
ExpireDependentBenefitExclusionsUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type ExpireDependentBenefitExclusionsUsingPUTCreated struct {
}

// IsSuccess returns true when this expire dependent benefit exclusions using p u t created response has a 2xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this expire dependent benefit exclusions using p u t created response has a 3xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this expire dependent benefit exclusions using p u t created response has a 4xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this expire dependent benefit exclusions using p u t created response has a 5xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this expire dependent benefit exclusions using p u t created response a status code equal to that given
func (o *ExpireDependentBenefitExclusionsUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the expire dependent benefit exclusions using p u t created response
func (o *ExpireDependentBenefitExclusionsUsingPUTCreated) Code() int {
	return 201
}

func (o *ExpireDependentBenefitExclusionsUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/benefitexclusions/expire][%d] expireDependentBenefitExclusionsUsingPUTCreated", 201)
}

func (o *ExpireDependentBenefitExclusionsUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/benefitexclusions/expire][%d] expireDependentBenefitExclusionsUsingPUTCreated", 201)
}

func (o *ExpireDependentBenefitExclusionsUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExpireDependentBenefitExclusionsUsingPUTBadRequest creates a ExpireDependentBenefitExclusionsUsingPUTBadRequest with default headers values
func NewExpireDependentBenefitExclusionsUsingPUTBadRequest() *ExpireDependentBenefitExclusionsUsingPUTBadRequest {
	return &ExpireDependentBenefitExclusionsUsingPUTBadRequest{}
}

/*
ExpireDependentBenefitExclusionsUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ExpireDependentBenefitExclusionsUsingPUTBadRequest struct {
}

// IsSuccess returns true when this expire dependent benefit exclusions using p u t bad request response has a 2xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this expire dependent benefit exclusions using p u t bad request response has a 3xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this expire dependent benefit exclusions using p u t bad request response has a 4xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this expire dependent benefit exclusions using p u t bad request response has a 5xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this expire dependent benefit exclusions using p u t bad request response a status code equal to that given
func (o *ExpireDependentBenefitExclusionsUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the expire dependent benefit exclusions using p u t bad request response
func (o *ExpireDependentBenefitExclusionsUsingPUTBadRequest) Code() int {
	return 400
}

func (o *ExpireDependentBenefitExclusionsUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/benefitexclusions/expire][%d] expireDependentBenefitExclusionsUsingPUTBadRequest", 400)
}

func (o *ExpireDependentBenefitExclusionsUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/benefitexclusions/expire][%d] expireDependentBenefitExclusionsUsingPUTBadRequest", 400)
}

func (o *ExpireDependentBenefitExclusionsUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExpireDependentBenefitExclusionsUsingPUTUnauthorized creates a ExpireDependentBenefitExclusionsUsingPUTUnauthorized with default headers values
func NewExpireDependentBenefitExclusionsUsingPUTUnauthorized() *ExpireDependentBenefitExclusionsUsingPUTUnauthorized {
	return &ExpireDependentBenefitExclusionsUsingPUTUnauthorized{}
}

/*
ExpireDependentBenefitExclusionsUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ExpireDependentBenefitExclusionsUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this expire dependent benefit exclusions using p u t unauthorized response has a 2xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this expire dependent benefit exclusions using p u t unauthorized response has a 3xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this expire dependent benefit exclusions using p u t unauthorized response has a 4xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this expire dependent benefit exclusions using p u t unauthorized response has a 5xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this expire dependent benefit exclusions using p u t unauthorized response a status code equal to that given
func (o *ExpireDependentBenefitExclusionsUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the expire dependent benefit exclusions using p u t unauthorized response
func (o *ExpireDependentBenefitExclusionsUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *ExpireDependentBenefitExclusionsUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/benefitexclusions/expire][%d] expireDependentBenefitExclusionsUsingPUTUnauthorized", 401)
}

func (o *ExpireDependentBenefitExclusionsUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/benefitexclusions/expire][%d] expireDependentBenefitExclusionsUsingPUTUnauthorized", 401)
}

func (o *ExpireDependentBenefitExclusionsUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExpireDependentBenefitExclusionsUsingPUTForbidden creates a ExpireDependentBenefitExclusionsUsingPUTForbidden with default headers values
func NewExpireDependentBenefitExclusionsUsingPUTForbidden() *ExpireDependentBenefitExclusionsUsingPUTForbidden {
	return &ExpireDependentBenefitExclusionsUsingPUTForbidden{}
}

/*
ExpireDependentBenefitExclusionsUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ExpireDependentBenefitExclusionsUsingPUTForbidden struct {
}

// IsSuccess returns true when this expire dependent benefit exclusions using p u t forbidden response has a 2xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this expire dependent benefit exclusions using p u t forbidden response has a 3xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this expire dependent benefit exclusions using p u t forbidden response has a 4xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this expire dependent benefit exclusions using p u t forbidden response has a 5xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this expire dependent benefit exclusions using p u t forbidden response a status code equal to that given
func (o *ExpireDependentBenefitExclusionsUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the expire dependent benefit exclusions using p u t forbidden response
func (o *ExpireDependentBenefitExclusionsUsingPUTForbidden) Code() int {
	return 403
}

func (o *ExpireDependentBenefitExclusionsUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/benefitexclusions/expire][%d] expireDependentBenefitExclusionsUsingPUTForbidden", 403)
}

func (o *ExpireDependentBenefitExclusionsUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/benefitexclusions/expire][%d] expireDependentBenefitExclusionsUsingPUTForbidden", 403)
}

func (o *ExpireDependentBenefitExclusionsUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExpireDependentBenefitExclusionsUsingPUTNotFound creates a ExpireDependentBenefitExclusionsUsingPUTNotFound with default headers values
func NewExpireDependentBenefitExclusionsUsingPUTNotFound() *ExpireDependentBenefitExclusionsUsingPUTNotFound {
	return &ExpireDependentBenefitExclusionsUsingPUTNotFound{}
}

/*
ExpireDependentBenefitExclusionsUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ExpireDependentBenefitExclusionsUsingPUTNotFound struct {
}

// IsSuccess returns true when this expire dependent benefit exclusions using p u t not found response has a 2xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this expire dependent benefit exclusions using p u t not found response has a 3xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this expire dependent benefit exclusions using p u t not found response has a 4xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this expire dependent benefit exclusions using p u t not found response has a 5xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this expire dependent benefit exclusions using p u t not found response a status code equal to that given
func (o *ExpireDependentBenefitExclusionsUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the expire dependent benefit exclusions using p u t not found response
func (o *ExpireDependentBenefitExclusionsUsingPUTNotFound) Code() int {
	return 404
}

func (o *ExpireDependentBenefitExclusionsUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/benefitexclusions/expire][%d] expireDependentBenefitExclusionsUsingPUTNotFound", 404)
}

func (o *ExpireDependentBenefitExclusionsUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/benefitexclusions/expire][%d] expireDependentBenefitExclusionsUsingPUTNotFound", 404)
}

func (o *ExpireDependentBenefitExclusionsUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExpireDependentBenefitExclusionsUsingPUTInternalServerError creates a ExpireDependentBenefitExclusionsUsingPUTInternalServerError with default headers values
func NewExpireDependentBenefitExclusionsUsingPUTInternalServerError() *ExpireDependentBenefitExclusionsUsingPUTInternalServerError {
	return &ExpireDependentBenefitExclusionsUsingPUTInternalServerError{}
}

/*
ExpireDependentBenefitExclusionsUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ExpireDependentBenefitExclusionsUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this expire dependent benefit exclusions using p u t internal server error response has a 2xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this expire dependent benefit exclusions using p u t internal server error response has a 3xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this expire dependent benefit exclusions using p u t internal server error response has a 4xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this expire dependent benefit exclusions using p u t internal server error response has a 5xx status code
func (o *ExpireDependentBenefitExclusionsUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this expire dependent benefit exclusions using p u t internal server error response a status code equal to that given
func (o *ExpireDependentBenefitExclusionsUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the expire dependent benefit exclusions using p u t internal server error response
func (o *ExpireDependentBenefitExclusionsUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *ExpireDependentBenefitExclusionsUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/benefitexclusions/expire][%d] expireDependentBenefitExclusionsUsingPUTInternalServerError", 500)
}

func (o *ExpireDependentBenefitExclusionsUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/benefitexclusions/expire][%d] expireDependentBenefitExclusionsUsingPUTInternalServerError", 500)
}

func (o *ExpireDependentBenefitExclusionsUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
