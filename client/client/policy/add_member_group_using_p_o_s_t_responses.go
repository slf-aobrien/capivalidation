// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// AddMemberGroupUsingPOSTReader is a Reader for the AddMemberGroupUsingPOST structure.
type AddMemberGroupUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddMemberGroupUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddMemberGroupUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewAddMemberGroupUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddMemberGroupUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddMemberGroupUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddMemberGroupUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddMemberGroupUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddMemberGroupUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/policy/memberGroup] addMemberGroupUsingPOST", response, response.Code())
	}
}

// NewAddMemberGroupUsingPOSTOK creates a AddMemberGroupUsingPOSTOK with default headers values
func NewAddMemberGroupUsingPOSTOK() *AddMemberGroupUsingPOSTOK {
	return &AddMemberGroupUsingPOSTOK{}
}

/*
AddMemberGroupUsingPOSTOK describes a response with status code 200, with default header values.

Success
*/
type AddMemberGroupUsingPOSTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this add member group using p o s t o k response has a 2xx status code
func (o *AddMemberGroupUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add member group using p o s t o k response has a 3xx status code
func (o *AddMemberGroupUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add member group using p o s t o k response has a 4xx status code
func (o *AddMemberGroupUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add member group using p o s t o k response has a 5xx status code
func (o *AddMemberGroupUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add member group using p o s t o k response a status code equal to that given
func (o *AddMemberGroupUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add member group using p o s t o k response
func (o *AddMemberGroupUsingPOSTOK) Code() int {
	return 200
}

func (o *AddMemberGroupUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroup][%d] addMemberGroupUsingPOSTOK %s", 200, payload)
}

func (o *AddMemberGroupUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroup][%d] addMemberGroupUsingPOSTOK %s", 200, payload)
}

func (o *AddMemberGroupUsingPOSTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *AddMemberGroupUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddMemberGroupUsingPOSTCreated creates a AddMemberGroupUsingPOSTCreated with default headers values
func NewAddMemberGroupUsingPOSTCreated() *AddMemberGroupUsingPOSTCreated {
	return &AddMemberGroupUsingPOSTCreated{}
}

/*
AddMemberGroupUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type AddMemberGroupUsingPOSTCreated struct {
}

// IsSuccess returns true when this add member group using p o s t created response has a 2xx status code
func (o *AddMemberGroupUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add member group using p o s t created response has a 3xx status code
func (o *AddMemberGroupUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add member group using p o s t created response has a 4xx status code
func (o *AddMemberGroupUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add member group using p o s t created response has a 5xx status code
func (o *AddMemberGroupUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add member group using p o s t created response a status code equal to that given
func (o *AddMemberGroupUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add member group using p o s t created response
func (o *AddMemberGroupUsingPOSTCreated) Code() int {
	return 201
}

func (o *AddMemberGroupUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroup][%d] addMemberGroupUsingPOSTCreated", 201)
}

func (o *AddMemberGroupUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroup][%d] addMemberGroupUsingPOSTCreated", 201)
}

func (o *AddMemberGroupUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddMemberGroupUsingPOSTBadRequest creates a AddMemberGroupUsingPOSTBadRequest with default headers values
func NewAddMemberGroupUsingPOSTBadRequest() *AddMemberGroupUsingPOSTBadRequest {
	return &AddMemberGroupUsingPOSTBadRequest{}
}

/*
AddMemberGroupUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddMemberGroupUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this add member group using p o s t bad request response has a 2xx status code
func (o *AddMemberGroupUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add member group using p o s t bad request response has a 3xx status code
func (o *AddMemberGroupUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add member group using p o s t bad request response has a 4xx status code
func (o *AddMemberGroupUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add member group using p o s t bad request response has a 5xx status code
func (o *AddMemberGroupUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add member group using p o s t bad request response a status code equal to that given
func (o *AddMemberGroupUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add member group using p o s t bad request response
func (o *AddMemberGroupUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *AddMemberGroupUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroup][%d] addMemberGroupUsingPOSTBadRequest", 400)
}

func (o *AddMemberGroupUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroup][%d] addMemberGroupUsingPOSTBadRequest", 400)
}

func (o *AddMemberGroupUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddMemberGroupUsingPOSTUnauthorized creates a AddMemberGroupUsingPOSTUnauthorized with default headers values
func NewAddMemberGroupUsingPOSTUnauthorized() *AddMemberGroupUsingPOSTUnauthorized {
	return &AddMemberGroupUsingPOSTUnauthorized{}
}

/*
AddMemberGroupUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddMemberGroupUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this add member group using p o s t unauthorized response has a 2xx status code
func (o *AddMemberGroupUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add member group using p o s t unauthorized response has a 3xx status code
func (o *AddMemberGroupUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add member group using p o s t unauthorized response has a 4xx status code
func (o *AddMemberGroupUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add member group using p o s t unauthorized response has a 5xx status code
func (o *AddMemberGroupUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add member group using p o s t unauthorized response a status code equal to that given
func (o *AddMemberGroupUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add member group using p o s t unauthorized response
func (o *AddMemberGroupUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *AddMemberGroupUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroup][%d] addMemberGroupUsingPOSTUnauthorized", 401)
}

func (o *AddMemberGroupUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroup][%d] addMemberGroupUsingPOSTUnauthorized", 401)
}

func (o *AddMemberGroupUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddMemberGroupUsingPOSTForbidden creates a AddMemberGroupUsingPOSTForbidden with default headers values
func NewAddMemberGroupUsingPOSTForbidden() *AddMemberGroupUsingPOSTForbidden {
	return &AddMemberGroupUsingPOSTForbidden{}
}

/*
AddMemberGroupUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddMemberGroupUsingPOSTForbidden struct {
}

// IsSuccess returns true when this add member group using p o s t forbidden response has a 2xx status code
func (o *AddMemberGroupUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add member group using p o s t forbidden response has a 3xx status code
func (o *AddMemberGroupUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add member group using p o s t forbidden response has a 4xx status code
func (o *AddMemberGroupUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add member group using p o s t forbidden response has a 5xx status code
func (o *AddMemberGroupUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add member group using p o s t forbidden response a status code equal to that given
func (o *AddMemberGroupUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add member group using p o s t forbidden response
func (o *AddMemberGroupUsingPOSTForbidden) Code() int {
	return 403
}

func (o *AddMemberGroupUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroup][%d] addMemberGroupUsingPOSTForbidden", 403)
}

func (o *AddMemberGroupUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroup][%d] addMemberGroupUsingPOSTForbidden", 403)
}

func (o *AddMemberGroupUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddMemberGroupUsingPOSTNotFound creates a AddMemberGroupUsingPOSTNotFound with default headers values
func NewAddMemberGroupUsingPOSTNotFound() *AddMemberGroupUsingPOSTNotFound {
	return &AddMemberGroupUsingPOSTNotFound{}
}

/*
AddMemberGroupUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddMemberGroupUsingPOSTNotFound struct {
}

// IsSuccess returns true when this add member group using p o s t not found response has a 2xx status code
func (o *AddMemberGroupUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add member group using p o s t not found response has a 3xx status code
func (o *AddMemberGroupUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add member group using p o s t not found response has a 4xx status code
func (o *AddMemberGroupUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add member group using p o s t not found response has a 5xx status code
func (o *AddMemberGroupUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add member group using p o s t not found response a status code equal to that given
func (o *AddMemberGroupUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add member group using p o s t not found response
func (o *AddMemberGroupUsingPOSTNotFound) Code() int {
	return 404
}

func (o *AddMemberGroupUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroup][%d] addMemberGroupUsingPOSTNotFound", 404)
}

func (o *AddMemberGroupUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroup][%d] addMemberGroupUsingPOSTNotFound", 404)
}

func (o *AddMemberGroupUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddMemberGroupUsingPOSTInternalServerError creates a AddMemberGroupUsingPOSTInternalServerError with default headers values
func NewAddMemberGroupUsingPOSTInternalServerError() *AddMemberGroupUsingPOSTInternalServerError {
	return &AddMemberGroupUsingPOSTInternalServerError{}
}

/*
AddMemberGroupUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AddMemberGroupUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this add member group using p o s t internal server error response has a 2xx status code
func (o *AddMemberGroupUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add member group using p o s t internal server error response has a 3xx status code
func (o *AddMemberGroupUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add member group using p o s t internal server error response has a 4xx status code
func (o *AddMemberGroupUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add member group using p o s t internal server error response has a 5xx status code
func (o *AddMemberGroupUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add member group using p o s t internal server error response a status code equal to that given
func (o *AddMemberGroupUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add member group using p o s t internal server error response
func (o *AddMemberGroupUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *AddMemberGroupUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroup][%d] addMemberGroupUsingPOSTInternalServerError", 500)
}

func (o *AddMemberGroupUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroup][%d] addMemberGroupUsingPOSTInternalServerError", 500)
}

func (o *AddMemberGroupUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
