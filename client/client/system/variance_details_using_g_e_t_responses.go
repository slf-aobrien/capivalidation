// Code generated by go-swagger; DO NOT EDIT.

package system

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// VarianceDetailsUsingGETReader is a Reader for the VarianceDetailsUsingGET structure.
type VarianceDetailsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VarianceDetailsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewVarianceDetailsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewVarianceDetailsUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewVarianceDetailsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewVarianceDetailsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewVarianceDetailsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewVarianceDetailsUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/system/varianceDetails] varianceDetailsUsingGET", response, response.Code())
	}
}

// NewVarianceDetailsUsingGETOK creates a VarianceDetailsUsingGETOK with default headers values
func NewVarianceDetailsUsingGETOK() *VarianceDetailsUsingGETOK {
	return &VarianceDetailsUsingGETOK{}
}

/*
VarianceDetailsUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type VarianceDetailsUsingGETOK struct {
	Payload *models.ResponseWrapperListVarianceDetailDTO
}

// IsSuccess returns true when this variance details using g e t o k response has a 2xx status code
func (o *VarianceDetailsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this variance details using g e t o k response has a 3xx status code
func (o *VarianceDetailsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this variance details using g e t o k response has a 4xx status code
func (o *VarianceDetailsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this variance details using g e t o k response has a 5xx status code
func (o *VarianceDetailsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this variance details using g e t o k response a status code equal to that given
func (o *VarianceDetailsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the variance details using g e t o k response
func (o *VarianceDetailsUsingGETOK) Code() int {
	return 200
}

func (o *VarianceDetailsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/system/varianceDetails][%d] varianceDetailsUsingGETOK %s", 200, payload)
}

func (o *VarianceDetailsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/system/varianceDetails][%d] varianceDetailsUsingGETOK %s", 200, payload)
}

func (o *VarianceDetailsUsingGETOK) GetPayload() *models.ResponseWrapperListVarianceDetailDTO {
	return o.Payload
}

func (o *VarianceDetailsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperListVarianceDetailDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVarianceDetailsUsingGETBadRequest creates a VarianceDetailsUsingGETBadRequest with default headers values
func NewVarianceDetailsUsingGETBadRequest() *VarianceDetailsUsingGETBadRequest {
	return &VarianceDetailsUsingGETBadRequest{}
}

/*
VarianceDetailsUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type VarianceDetailsUsingGETBadRequest struct {
}

// IsSuccess returns true when this variance details using g e t bad request response has a 2xx status code
func (o *VarianceDetailsUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this variance details using g e t bad request response has a 3xx status code
func (o *VarianceDetailsUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this variance details using g e t bad request response has a 4xx status code
func (o *VarianceDetailsUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this variance details using g e t bad request response has a 5xx status code
func (o *VarianceDetailsUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this variance details using g e t bad request response a status code equal to that given
func (o *VarianceDetailsUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the variance details using g e t bad request response
func (o *VarianceDetailsUsingGETBadRequest) Code() int {
	return 400
}

func (o *VarianceDetailsUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/varianceDetails][%d] varianceDetailsUsingGETBadRequest", 400)
}

func (o *VarianceDetailsUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/varianceDetails][%d] varianceDetailsUsingGETBadRequest", 400)
}

func (o *VarianceDetailsUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewVarianceDetailsUsingGETUnauthorized creates a VarianceDetailsUsingGETUnauthorized with default headers values
func NewVarianceDetailsUsingGETUnauthorized() *VarianceDetailsUsingGETUnauthorized {
	return &VarianceDetailsUsingGETUnauthorized{}
}

/*
VarianceDetailsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type VarianceDetailsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this variance details using g e t unauthorized response has a 2xx status code
func (o *VarianceDetailsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this variance details using g e t unauthorized response has a 3xx status code
func (o *VarianceDetailsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this variance details using g e t unauthorized response has a 4xx status code
func (o *VarianceDetailsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this variance details using g e t unauthorized response has a 5xx status code
func (o *VarianceDetailsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this variance details using g e t unauthorized response a status code equal to that given
func (o *VarianceDetailsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the variance details using g e t unauthorized response
func (o *VarianceDetailsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *VarianceDetailsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/varianceDetails][%d] varianceDetailsUsingGETUnauthorized", 401)
}

func (o *VarianceDetailsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/varianceDetails][%d] varianceDetailsUsingGETUnauthorized", 401)
}

func (o *VarianceDetailsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewVarianceDetailsUsingGETForbidden creates a VarianceDetailsUsingGETForbidden with default headers values
func NewVarianceDetailsUsingGETForbidden() *VarianceDetailsUsingGETForbidden {
	return &VarianceDetailsUsingGETForbidden{}
}

/*
VarianceDetailsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type VarianceDetailsUsingGETForbidden struct {
}

// IsSuccess returns true when this variance details using g e t forbidden response has a 2xx status code
func (o *VarianceDetailsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this variance details using g e t forbidden response has a 3xx status code
func (o *VarianceDetailsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this variance details using g e t forbidden response has a 4xx status code
func (o *VarianceDetailsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this variance details using g e t forbidden response has a 5xx status code
func (o *VarianceDetailsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this variance details using g e t forbidden response a status code equal to that given
func (o *VarianceDetailsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the variance details using g e t forbidden response
func (o *VarianceDetailsUsingGETForbidden) Code() int {
	return 403
}

func (o *VarianceDetailsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/varianceDetails][%d] varianceDetailsUsingGETForbidden", 403)
}

func (o *VarianceDetailsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/varianceDetails][%d] varianceDetailsUsingGETForbidden", 403)
}

func (o *VarianceDetailsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewVarianceDetailsUsingGETNotFound creates a VarianceDetailsUsingGETNotFound with default headers values
func NewVarianceDetailsUsingGETNotFound() *VarianceDetailsUsingGETNotFound {
	return &VarianceDetailsUsingGETNotFound{}
}

/*
VarianceDetailsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type VarianceDetailsUsingGETNotFound struct {
}

// IsSuccess returns true when this variance details using g e t not found response has a 2xx status code
func (o *VarianceDetailsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this variance details using g e t not found response has a 3xx status code
func (o *VarianceDetailsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this variance details using g e t not found response has a 4xx status code
func (o *VarianceDetailsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this variance details using g e t not found response has a 5xx status code
func (o *VarianceDetailsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this variance details using g e t not found response a status code equal to that given
func (o *VarianceDetailsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the variance details using g e t not found response
func (o *VarianceDetailsUsingGETNotFound) Code() int {
	return 404
}

func (o *VarianceDetailsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/varianceDetails][%d] varianceDetailsUsingGETNotFound", 404)
}

func (o *VarianceDetailsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/varianceDetails][%d] varianceDetailsUsingGETNotFound", 404)
}

func (o *VarianceDetailsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewVarianceDetailsUsingGETInternalServerError creates a VarianceDetailsUsingGETInternalServerError with default headers values
func NewVarianceDetailsUsingGETInternalServerError() *VarianceDetailsUsingGETInternalServerError {
	return &VarianceDetailsUsingGETInternalServerError{}
}

/*
VarianceDetailsUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type VarianceDetailsUsingGETInternalServerError struct {
}

// IsSuccess returns true when this variance details using g e t internal server error response has a 2xx status code
func (o *VarianceDetailsUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this variance details using g e t internal server error response has a 3xx status code
func (o *VarianceDetailsUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this variance details using g e t internal server error response has a 4xx status code
func (o *VarianceDetailsUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this variance details using g e t internal server error response has a 5xx status code
func (o *VarianceDetailsUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this variance details using g e t internal server error response a status code equal to that given
func (o *VarianceDetailsUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the variance details using g e t internal server error response
func (o *VarianceDetailsUsingGETInternalServerError) Code() int {
	return 500
}

func (o *VarianceDetailsUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/varianceDetails][%d] varianceDetailsUsingGETInternalServerError", 500)
}

func (o *VarianceDetailsUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/varianceDetails][%d] varianceDetailsUsingGETInternalServerError", 500)
}

func (o *VarianceDetailsUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
