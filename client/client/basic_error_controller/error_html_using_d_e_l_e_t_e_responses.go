// Code generated by go-swagger; DO NOT EDIT.

package basic_error_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// ErrorHTMLUsingDELETEReader is a Reader for the ErrorHTMLUsingDELETE structure.
type ErrorHTMLUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ErrorHTMLUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewErrorHTMLUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewErrorHTMLUsingDELETENoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewErrorHTMLUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewErrorHTMLUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /compassintegrationapp/error] errorHtmlUsingDELETE", response, response.Code())
	}
}

// NewErrorHTMLUsingDELETEOK creates a ErrorHTMLUsingDELETEOK with default headers values
func NewErrorHTMLUsingDELETEOK() *ErrorHTMLUsingDELETEOK {
	return &ErrorHTMLUsingDELETEOK{}
}

/*
ErrorHTMLUsingDELETEOK describes a response with status code 200, with default header values.

OK
*/
type ErrorHTMLUsingDELETEOK struct {
	Payload *models.ModelAndView
}

// IsSuccess returns true when this error Html using d e l e t e o k response has a 2xx status code
func (o *ErrorHTMLUsingDELETEOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this error Html using d e l e t e o k response has a 3xx status code
func (o *ErrorHTMLUsingDELETEOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this error Html using d e l e t e o k response has a 4xx status code
func (o *ErrorHTMLUsingDELETEOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this error Html using d e l e t e o k response has a 5xx status code
func (o *ErrorHTMLUsingDELETEOK) IsServerError() bool {
	return false
}

// IsCode returns true when this error Html using d e l e t e o k response a status code equal to that given
func (o *ErrorHTMLUsingDELETEOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the error Html using d e l e t e o k response
func (o *ErrorHTMLUsingDELETEOK) Code() int {
	return 200
}

func (o *ErrorHTMLUsingDELETEOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /compassintegrationapp/error][%d] errorHtmlUsingDELETEOK %s", 200, payload)
}

func (o *ErrorHTMLUsingDELETEOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /compassintegrationapp/error][%d] errorHtmlUsingDELETEOK %s", 200, payload)
}

func (o *ErrorHTMLUsingDELETEOK) GetPayload() *models.ModelAndView {
	return o.Payload
}

func (o *ErrorHTMLUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelAndView)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewErrorHTMLUsingDELETENoContent creates a ErrorHTMLUsingDELETENoContent with default headers values
func NewErrorHTMLUsingDELETENoContent() *ErrorHTMLUsingDELETENoContent {
	return &ErrorHTMLUsingDELETENoContent{}
}

/*
ErrorHTMLUsingDELETENoContent describes a response with status code 204, with default header values.

No Content
*/
type ErrorHTMLUsingDELETENoContent struct {
}

// IsSuccess returns true when this error Html using d e l e t e no content response has a 2xx status code
func (o *ErrorHTMLUsingDELETENoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this error Html using d e l e t e no content response has a 3xx status code
func (o *ErrorHTMLUsingDELETENoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this error Html using d e l e t e no content response has a 4xx status code
func (o *ErrorHTMLUsingDELETENoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this error Html using d e l e t e no content response has a 5xx status code
func (o *ErrorHTMLUsingDELETENoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this error Html using d e l e t e no content response a status code equal to that given
func (o *ErrorHTMLUsingDELETENoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the error Html using d e l e t e no content response
func (o *ErrorHTMLUsingDELETENoContent) Code() int {
	return 204
}

func (o *ErrorHTMLUsingDELETENoContent) Error() string {
	return fmt.Sprintf("[DELETE /compassintegrationapp/error][%d] errorHtmlUsingDELETENoContent", 204)
}

func (o *ErrorHTMLUsingDELETENoContent) String() string {
	return fmt.Sprintf("[DELETE /compassintegrationapp/error][%d] errorHtmlUsingDELETENoContent", 204)
}

func (o *ErrorHTMLUsingDELETENoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewErrorHTMLUsingDELETEUnauthorized creates a ErrorHTMLUsingDELETEUnauthorized with default headers values
func NewErrorHTMLUsingDELETEUnauthorized() *ErrorHTMLUsingDELETEUnauthorized {
	return &ErrorHTMLUsingDELETEUnauthorized{}
}

/*
ErrorHTMLUsingDELETEUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ErrorHTMLUsingDELETEUnauthorized struct {
}

// IsSuccess returns true when this error Html using d e l e t e unauthorized response has a 2xx status code
func (o *ErrorHTMLUsingDELETEUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this error Html using d e l e t e unauthorized response has a 3xx status code
func (o *ErrorHTMLUsingDELETEUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this error Html using d e l e t e unauthorized response has a 4xx status code
func (o *ErrorHTMLUsingDELETEUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this error Html using d e l e t e unauthorized response has a 5xx status code
func (o *ErrorHTMLUsingDELETEUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this error Html using d e l e t e unauthorized response a status code equal to that given
func (o *ErrorHTMLUsingDELETEUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the error Html using d e l e t e unauthorized response
func (o *ErrorHTMLUsingDELETEUnauthorized) Code() int {
	return 401
}

func (o *ErrorHTMLUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /compassintegrationapp/error][%d] errorHtmlUsingDELETEUnauthorized", 401)
}

func (o *ErrorHTMLUsingDELETEUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /compassintegrationapp/error][%d] errorHtmlUsingDELETEUnauthorized", 401)
}

func (o *ErrorHTMLUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewErrorHTMLUsingDELETEForbidden creates a ErrorHTMLUsingDELETEForbidden with default headers values
func NewErrorHTMLUsingDELETEForbidden() *ErrorHTMLUsingDELETEForbidden {
	return &ErrorHTMLUsingDELETEForbidden{}
}

/*
ErrorHTMLUsingDELETEForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ErrorHTMLUsingDELETEForbidden struct {
}

// IsSuccess returns true when this error Html using d e l e t e forbidden response has a 2xx status code
func (o *ErrorHTMLUsingDELETEForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this error Html using d e l e t e forbidden response has a 3xx status code
func (o *ErrorHTMLUsingDELETEForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this error Html using d e l e t e forbidden response has a 4xx status code
func (o *ErrorHTMLUsingDELETEForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this error Html using d e l e t e forbidden response has a 5xx status code
func (o *ErrorHTMLUsingDELETEForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this error Html using d e l e t e forbidden response a status code equal to that given
func (o *ErrorHTMLUsingDELETEForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the error Html using d e l e t e forbidden response
func (o *ErrorHTMLUsingDELETEForbidden) Code() int {
	return 403
}

func (o *ErrorHTMLUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /compassintegrationapp/error][%d] errorHtmlUsingDELETEForbidden", 403)
}

func (o *ErrorHTMLUsingDELETEForbidden) String() string {
	return fmt.Sprintf("[DELETE /compassintegrationapp/error][%d] errorHtmlUsingDELETEForbidden", 403)
}

func (o *ErrorHTMLUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
