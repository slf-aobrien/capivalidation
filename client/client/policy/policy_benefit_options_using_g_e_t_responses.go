// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// PolicyBenefitOptionsUsingGETReader is a Reader for the PolicyBenefitOptionsUsingGET structure.
type PolicyBenefitOptionsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PolicyBenefitOptionsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPolicyBenefitOptionsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPolicyBenefitOptionsUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPolicyBenefitOptionsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPolicyBenefitOptionsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPolicyBenefitOptionsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPolicyBenefitOptionsUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/policy/policyBenefitOptions] policyBenefitOptionsUsingGET", response, response.Code())
	}
}

// NewPolicyBenefitOptionsUsingGETOK creates a PolicyBenefitOptionsUsingGETOK with default headers values
func NewPolicyBenefitOptionsUsingGETOK() *PolicyBenefitOptionsUsingGETOK {
	return &PolicyBenefitOptionsUsingGETOK{}
}

/*
PolicyBenefitOptionsUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type PolicyBenefitOptionsUsingGETOK struct {
	Payload *models.ResponseWrapperMapStringListPolicyBenefitOptionDTO
}

// IsSuccess returns true when this policy benefit options using g e t o k response has a 2xx status code
func (o *PolicyBenefitOptionsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this policy benefit options using g e t o k response has a 3xx status code
func (o *PolicyBenefitOptionsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this policy benefit options using g e t o k response has a 4xx status code
func (o *PolicyBenefitOptionsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this policy benefit options using g e t o k response has a 5xx status code
func (o *PolicyBenefitOptionsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this policy benefit options using g e t o k response a status code equal to that given
func (o *PolicyBenefitOptionsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the policy benefit options using g e t o k response
func (o *PolicyBenefitOptionsUsingGETOK) Code() int {
	return 200
}

func (o *PolicyBenefitOptionsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyBenefitOptions][%d] policyBenefitOptionsUsingGETOK %s", 200, payload)
}

func (o *PolicyBenefitOptionsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyBenefitOptions][%d] policyBenefitOptionsUsingGETOK %s", 200, payload)
}

func (o *PolicyBenefitOptionsUsingGETOK) GetPayload() *models.ResponseWrapperMapStringListPolicyBenefitOptionDTO {
	return o.Payload
}

func (o *PolicyBenefitOptionsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperMapStringListPolicyBenefitOptionDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPolicyBenefitOptionsUsingGETBadRequest creates a PolicyBenefitOptionsUsingGETBadRequest with default headers values
func NewPolicyBenefitOptionsUsingGETBadRequest() *PolicyBenefitOptionsUsingGETBadRequest {
	return &PolicyBenefitOptionsUsingGETBadRequest{}
}

/*
PolicyBenefitOptionsUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PolicyBenefitOptionsUsingGETBadRequest struct {
}

// IsSuccess returns true when this policy benefit options using g e t bad request response has a 2xx status code
func (o *PolicyBenefitOptionsUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this policy benefit options using g e t bad request response has a 3xx status code
func (o *PolicyBenefitOptionsUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this policy benefit options using g e t bad request response has a 4xx status code
func (o *PolicyBenefitOptionsUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this policy benefit options using g e t bad request response has a 5xx status code
func (o *PolicyBenefitOptionsUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this policy benefit options using g e t bad request response a status code equal to that given
func (o *PolicyBenefitOptionsUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the policy benefit options using g e t bad request response
func (o *PolicyBenefitOptionsUsingGETBadRequest) Code() int {
	return 400
}

func (o *PolicyBenefitOptionsUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyBenefitOptions][%d] policyBenefitOptionsUsingGETBadRequest", 400)
}

func (o *PolicyBenefitOptionsUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyBenefitOptions][%d] policyBenefitOptionsUsingGETBadRequest", 400)
}

func (o *PolicyBenefitOptionsUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPolicyBenefitOptionsUsingGETUnauthorized creates a PolicyBenefitOptionsUsingGETUnauthorized with default headers values
func NewPolicyBenefitOptionsUsingGETUnauthorized() *PolicyBenefitOptionsUsingGETUnauthorized {
	return &PolicyBenefitOptionsUsingGETUnauthorized{}
}

/*
PolicyBenefitOptionsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PolicyBenefitOptionsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this policy benefit options using g e t unauthorized response has a 2xx status code
func (o *PolicyBenefitOptionsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this policy benefit options using g e t unauthorized response has a 3xx status code
func (o *PolicyBenefitOptionsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this policy benefit options using g e t unauthorized response has a 4xx status code
func (o *PolicyBenefitOptionsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this policy benefit options using g e t unauthorized response has a 5xx status code
func (o *PolicyBenefitOptionsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this policy benefit options using g e t unauthorized response a status code equal to that given
func (o *PolicyBenefitOptionsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the policy benefit options using g e t unauthorized response
func (o *PolicyBenefitOptionsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *PolicyBenefitOptionsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyBenefitOptions][%d] policyBenefitOptionsUsingGETUnauthorized", 401)
}

func (o *PolicyBenefitOptionsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyBenefitOptions][%d] policyBenefitOptionsUsingGETUnauthorized", 401)
}

func (o *PolicyBenefitOptionsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPolicyBenefitOptionsUsingGETForbidden creates a PolicyBenefitOptionsUsingGETForbidden with default headers values
func NewPolicyBenefitOptionsUsingGETForbidden() *PolicyBenefitOptionsUsingGETForbidden {
	return &PolicyBenefitOptionsUsingGETForbidden{}
}

/*
PolicyBenefitOptionsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PolicyBenefitOptionsUsingGETForbidden struct {
}

// IsSuccess returns true when this policy benefit options using g e t forbidden response has a 2xx status code
func (o *PolicyBenefitOptionsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this policy benefit options using g e t forbidden response has a 3xx status code
func (o *PolicyBenefitOptionsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this policy benefit options using g e t forbidden response has a 4xx status code
func (o *PolicyBenefitOptionsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this policy benefit options using g e t forbidden response has a 5xx status code
func (o *PolicyBenefitOptionsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this policy benefit options using g e t forbidden response a status code equal to that given
func (o *PolicyBenefitOptionsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the policy benefit options using g e t forbidden response
func (o *PolicyBenefitOptionsUsingGETForbidden) Code() int {
	return 403
}

func (o *PolicyBenefitOptionsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyBenefitOptions][%d] policyBenefitOptionsUsingGETForbidden", 403)
}

func (o *PolicyBenefitOptionsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyBenefitOptions][%d] policyBenefitOptionsUsingGETForbidden", 403)
}

func (o *PolicyBenefitOptionsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPolicyBenefitOptionsUsingGETNotFound creates a PolicyBenefitOptionsUsingGETNotFound with default headers values
func NewPolicyBenefitOptionsUsingGETNotFound() *PolicyBenefitOptionsUsingGETNotFound {
	return &PolicyBenefitOptionsUsingGETNotFound{}
}

/*
PolicyBenefitOptionsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PolicyBenefitOptionsUsingGETNotFound struct {
}

// IsSuccess returns true when this policy benefit options using g e t not found response has a 2xx status code
func (o *PolicyBenefitOptionsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this policy benefit options using g e t not found response has a 3xx status code
func (o *PolicyBenefitOptionsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this policy benefit options using g e t not found response has a 4xx status code
func (o *PolicyBenefitOptionsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this policy benefit options using g e t not found response has a 5xx status code
func (o *PolicyBenefitOptionsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this policy benefit options using g e t not found response a status code equal to that given
func (o *PolicyBenefitOptionsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the policy benefit options using g e t not found response
func (o *PolicyBenefitOptionsUsingGETNotFound) Code() int {
	return 404
}

func (o *PolicyBenefitOptionsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyBenefitOptions][%d] policyBenefitOptionsUsingGETNotFound", 404)
}

func (o *PolicyBenefitOptionsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyBenefitOptions][%d] policyBenefitOptionsUsingGETNotFound", 404)
}

func (o *PolicyBenefitOptionsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPolicyBenefitOptionsUsingGETInternalServerError creates a PolicyBenefitOptionsUsingGETInternalServerError with default headers values
func NewPolicyBenefitOptionsUsingGETInternalServerError() *PolicyBenefitOptionsUsingGETInternalServerError {
	return &PolicyBenefitOptionsUsingGETInternalServerError{}
}

/*
PolicyBenefitOptionsUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type PolicyBenefitOptionsUsingGETInternalServerError struct {
}

// IsSuccess returns true when this policy benefit options using g e t internal server error response has a 2xx status code
func (o *PolicyBenefitOptionsUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this policy benefit options using g e t internal server error response has a 3xx status code
func (o *PolicyBenefitOptionsUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this policy benefit options using g e t internal server error response has a 4xx status code
func (o *PolicyBenefitOptionsUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this policy benefit options using g e t internal server error response has a 5xx status code
func (o *PolicyBenefitOptionsUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this policy benefit options using g e t internal server error response a status code equal to that given
func (o *PolicyBenefitOptionsUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the policy benefit options using g e t internal server error response
func (o *PolicyBenefitOptionsUsingGETInternalServerError) Code() int {
	return 500
}

func (o *PolicyBenefitOptionsUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyBenefitOptions][%d] policyBenefitOptionsUsingGETInternalServerError", 500)
}

func (o *PolicyBenefitOptionsUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyBenefitOptions][%d] policyBenefitOptionsUsingGETInternalServerError", 500)
}

func (o *PolicyBenefitOptionsUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
