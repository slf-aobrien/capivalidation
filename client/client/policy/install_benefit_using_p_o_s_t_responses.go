// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// InstallBenefitUsingPOSTReader is a Reader for the InstallBenefitUsingPOST structure.
type InstallBenefitUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InstallBenefitUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInstallBenefitUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewInstallBenefitUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInstallBenefitUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewInstallBenefitUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInstallBenefitUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInstallBenefitUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInstallBenefitUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/policy/installBenefit] installBenefitUsingPOST", response, response.Code())
	}
}

// NewInstallBenefitUsingPOSTOK creates a InstallBenefitUsingPOSTOK with default headers values
func NewInstallBenefitUsingPOSTOK() *InstallBenefitUsingPOSTOK {
	return &InstallBenefitUsingPOSTOK{}
}

/*
InstallBenefitUsingPOSTOK describes a response with status code 200, with default header values.

Success
*/
type InstallBenefitUsingPOSTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this install benefit using p o s t o k response has a 2xx status code
func (o *InstallBenefitUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this install benefit using p o s t o k response has a 3xx status code
func (o *InstallBenefitUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this install benefit using p o s t o k response has a 4xx status code
func (o *InstallBenefitUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this install benefit using p o s t o k response has a 5xx status code
func (o *InstallBenefitUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this install benefit using p o s t o k response a status code equal to that given
func (o *InstallBenefitUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the install benefit using p o s t o k response
func (o *InstallBenefitUsingPOSTOK) Code() int {
	return 200
}

func (o *InstallBenefitUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installBenefit][%d] installBenefitUsingPOSTOK %s", 200, payload)
}

func (o *InstallBenefitUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installBenefit][%d] installBenefitUsingPOSTOK %s", 200, payload)
}

func (o *InstallBenefitUsingPOSTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *InstallBenefitUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstallBenefitUsingPOSTCreated creates a InstallBenefitUsingPOSTCreated with default headers values
func NewInstallBenefitUsingPOSTCreated() *InstallBenefitUsingPOSTCreated {
	return &InstallBenefitUsingPOSTCreated{}
}

/*
InstallBenefitUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type InstallBenefitUsingPOSTCreated struct {
}

// IsSuccess returns true when this install benefit using p o s t created response has a 2xx status code
func (o *InstallBenefitUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this install benefit using p o s t created response has a 3xx status code
func (o *InstallBenefitUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this install benefit using p o s t created response has a 4xx status code
func (o *InstallBenefitUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this install benefit using p o s t created response has a 5xx status code
func (o *InstallBenefitUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this install benefit using p o s t created response a status code equal to that given
func (o *InstallBenefitUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the install benefit using p o s t created response
func (o *InstallBenefitUsingPOSTCreated) Code() int {
	return 201
}

func (o *InstallBenefitUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installBenefit][%d] installBenefitUsingPOSTCreated", 201)
}

func (o *InstallBenefitUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installBenefit][%d] installBenefitUsingPOSTCreated", 201)
}

func (o *InstallBenefitUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInstallBenefitUsingPOSTBadRequest creates a InstallBenefitUsingPOSTBadRequest with default headers values
func NewInstallBenefitUsingPOSTBadRequest() *InstallBenefitUsingPOSTBadRequest {
	return &InstallBenefitUsingPOSTBadRequest{}
}

/*
InstallBenefitUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type InstallBenefitUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this install benefit using p o s t bad request response has a 2xx status code
func (o *InstallBenefitUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this install benefit using p o s t bad request response has a 3xx status code
func (o *InstallBenefitUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this install benefit using p o s t bad request response has a 4xx status code
func (o *InstallBenefitUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this install benefit using p o s t bad request response has a 5xx status code
func (o *InstallBenefitUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this install benefit using p o s t bad request response a status code equal to that given
func (o *InstallBenefitUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the install benefit using p o s t bad request response
func (o *InstallBenefitUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *InstallBenefitUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installBenefit][%d] installBenefitUsingPOSTBadRequest", 400)
}

func (o *InstallBenefitUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installBenefit][%d] installBenefitUsingPOSTBadRequest", 400)
}

func (o *InstallBenefitUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInstallBenefitUsingPOSTUnauthorized creates a InstallBenefitUsingPOSTUnauthorized with default headers values
func NewInstallBenefitUsingPOSTUnauthorized() *InstallBenefitUsingPOSTUnauthorized {
	return &InstallBenefitUsingPOSTUnauthorized{}
}

/*
InstallBenefitUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type InstallBenefitUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this install benefit using p o s t unauthorized response has a 2xx status code
func (o *InstallBenefitUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this install benefit using p o s t unauthorized response has a 3xx status code
func (o *InstallBenefitUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this install benefit using p o s t unauthorized response has a 4xx status code
func (o *InstallBenefitUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this install benefit using p o s t unauthorized response has a 5xx status code
func (o *InstallBenefitUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this install benefit using p o s t unauthorized response a status code equal to that given
func (o *InstallBenefitUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the install benefit using p o s t unauthorized response
func (o *InstallBenefitUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *InstallBenefitUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installBenefit][%d] installBenefitUsingPOSTUnauthorized", 401)
}

func (o *InstallBenefitUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installBenefit][%d] installBenefitUsingPOSTUnauthorized", 401)
}

func (o *InstallBenefitUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInstallBenefitUsingPOSTForbidden creates a InstallBenefitUsingPOSTForbidden with default headers values
func NewInstallBenefitUsingPOSTForbidden() *InstallBenefitUsingPOSTForbidden {
	return &InstallBenefitUsingPOSTForbidden{}
}

/*
InstallBenefitUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type InstallBenefitUsingPOSTForbidden struct {
}

// IsSuccess returns true when this install benefit using p o s t forbidden response has a 2xx status code
func (o *InstallBenefitUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this install benefit using p o s t forbidden response has a 3xx status code
func (o *InstallBenefitUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this install benefit using p o s t forbidden response has a 4xx status code
func (o *InstallBenefitUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this install benefit using p o s t forbidden response has a 5xx status code
func (o *InstallBenefitUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this install benefit using p o s t forbidden response a status code equal to that given
func (o *InstallBenefitUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the install benefit using p o s t forbidden response
func (o *InstallBenefitUsingPOSTForbidden) Code() int {
	return 403
}

func (o *InstallBenefitUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installBenefit][%d] installBenefitUsingPOSTForbidden", 403)
}

func (o *InstallBenefitUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installBenefit][%d] installBenefitUsingPOSTForbidden", 403)
}

func (o *InstallBenefitUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInstallBenefitUsingPOSTNotFound creates a InstallBenefitUsingPOSTNotFound with default headers values
func NewInstallBenefitUsingPOSTNotFound() *InstallBenefitUsingPOSTNotFound {
	return &InstallBenefitUsingPOSTNotFound{}
}

/*
InstallBenefitUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type InstallBenefitUsingPOSTNotFound struct {
}

// IsSuccess returns true when this install benefit using p o s t not found response has a 2xx status code
func (o *InstallBenefitUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this install benefit using p o s t not found response has a 3xx status code
func (o *InstallBenefitUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this install benefit using p o s t not found response has a 4xx status code
func (o *InstallBenefitUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this install benefit using p o s t not found response has a 5xx status code
func (o *InstallBenefitUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this install benefit using p o s t not found response a status code equal to that given
func (o *InstallBenefitUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the install benefit using p o s t not found response
func (o *InstallBenefitUsingPOSTNotFound) Code() int {
	return 404
}

func (o *InstallBenefitUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installBenefit][%d] installBenefitUsingPOSTNotFound", 404)
}

func (o *InstallBenefitUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installBenefit][%d] installBenefitUsingPOSTNotFound", 404)
}

func (o *InstallBenefitUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInstallBenefitUsingPOSTInternalServerError creates a InstallBenefitUsingPOSTInternalServerError with default headers values
func NewInstallBenefitUsingPOSTInternalServerError() *InstallBenefitUsingPOSTInternalServerError {
	return &InstallBenefitUsingPOSTInternalServerError{}
}

/*
InstallBenefitUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type InstallBenefitUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this install benefit using p o s t internal server error response has a 2xx status code
func (o *InstallBenefitUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this install benefit using p o s t internal server error response has a 3xx status code
func (o *InstallBenefitUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this install benefit using p o s t internal server error response has a 4xx status code
func (o *InstallBenefitUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this install benefit using p o s t internal server error response has a 5xx status code
func (o *InstallBenefitUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this install benefit using p o s t internal server error response a status code equal to that given
func (o *InstallBenefitUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the install benefit using p o s t internal server error response
func (o *InstallBenefitUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *InstallBenefitUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installBenefit][%d] installBenefitUsingPOSTInternalServerError", 500)
}

func (o *InstallBenefitUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installBenefit][%d] installBenefitUsingPOSTInternalServerError", 500)
}

func (o *InstallBenefitUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
