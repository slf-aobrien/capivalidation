// Code generated by go-swagger; DO NOT EDIT.

package dependent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateMiddleNameUsingPUTReader is a Reader for the UpdateMiddleNameUsingPUT structure.
type UpdateMiddleNameUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMiddleNameUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateMiddleNameUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateMiddleNameUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateMiddleNameUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateMiddleNameUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateMiddleNameUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateMiddleNameUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateMiddleNameUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/dependent/update/middleName] updateMiddleNameUsingPUT", response, response.Code())
	}
}

// NewUpdateMiddleNameUsingPUTOK creates a UpdateMiddleNameUsingPUTOK with default headers values
func NewUpdateMiddleNameUsingPUTOK() *UpdateMiddleNameUsingPUTOK {
	return &UpdateMiddleNameUsingPUTOK{}
}

/*
UpdateMiddleNameUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateMiddleNameUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update middle name using p u t o k response has a 2xx status code
func (o *UpdateMiddleNameUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update middle name using p u t o k response has a 3xx status code
func (o *UpdateMiddleNameUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update middle name using p u t o k response has a 4xx status code
func (o *UpdateMiddleNameUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update middle name using p u t o k response has a 5xx status code
func (o *UpdateMiddleNameUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update middle name using p u t o k response a status code equal to that given
func (o *UpdateMiddleNameUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update middle name using p u t o k response
func (o *UpdateMiddleNameUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateMiddleNameUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/middleName][%d] updateMiddleNameUsingPUTOK %s", 200, payload)
}

func (o *UpdateMiddleNameUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/middleName][%d] updateMiddleNameUsingPUTOK %s", 200, payload)
}

func (o *UpdateMiddleNameUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateMiddleNameUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMiddleNameUsingPUTCreated creates a UpdateMiddleNameUsingPUTCreated with default headers values
func NewUpdateMiddleNameUsingPUTCreated() *UpdateMiddleNameUsingPUTCreated {
	return &UpdateMiddleNameUsingPUTCreated{}
}

/*
UpdateMiddleNameUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateMiddleNameUsingPUTCreated struct {
}

// IsSuccess returns true when this update middle name using p u t created response has a 2xx status code
func (o *UpdateMiddleNameUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update middle name using p u t created response has a 3xx status code
func (o *UpdateMiddleNameUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update middle name using p u t created response has a 4xx status code
func (o *UpdateMiddleNameUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update middle name using p u t created response has a 5xx status code
func (o *UpdateMiddleNameUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update middle name using p u t created response a status code equal to that given
func (o *UpdateMiddleNameUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update middle name using p u t created response
func (o *UpdateMiddleNameUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateMiddleNameUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/middleName][%d] updateMiddleNameUsingPUTCreated", 201)
}

func (o *UpdateMiddleNameUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/middleName][%d] updateMiddleNameUsingPUTCreated", 201)
}

func (o *UpdateMiddleNameUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMiddleNameUsingPUTBadRequest creates a UpdateMiddleNameUsingPUTBadRequest with default headers values
func NewUpdateMiddleNameUsingPUTBadRequest() *UpdateMiddleNameUsingPUTBadRequest {
	return &UpdateMiddleNameUsingPUTBadRequest{}
}

/*
UpdateMiddleNameUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateMiddleNameUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update middle name using p u t bad request response has a 2xx status code
func (o *UpdateMiddleNameUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update middle name using p u t bad request response has a 3xx status code
func (o *UpdateMiddleNameUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update middle name using p u t bad request response has a 4xx status code
func (o *UpdateMiddleNameUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update middle name using p u t bad request response has a 5xx status code
func (o *UpdateMiddleNameUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update middle name using p u t bad request response a status code equal to that given
func (o *UpdateMiddleNameUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update middle name using p u t bad request response
func (o *UpdateMiddleNameUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateMiddleNameUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/middleName][%d] updateMiddleNameUsingPUTBadRequest", 400)
}

func (o *UpdateMiddleNameUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/middleName][%d] updateMiddleNameUsingPUTBadRequest", 400)
}

func (o *UpdateMiddleNameUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMiddleNameUsingPUTUnauthorized creates a UpdateMiddleNameUsingPUTUnauthorized with default headers values
func NewUpdateMiddleNameUsingPUTUnauthorized() *UpdateMiddleNameUsingPUTUnauthorized {
	return &UpdateMiddleNameUsingPUTUnauthorized{}
}

/*
UpdateMiddleNameUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateMiddleNameUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update middle name using p u t unauthorized response has a 2xx status code
func (o *UpdateMiddleNameUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update middle name using p u t unauthorized response has a 3xx status code
func (o *UpdateMiddleNameUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update middle name using p u t unauthorized response has a 4xx status code
func (o *UpdateMiddleNameUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update middle name using p u t unauthorized response has a 5xx status code
func (o *UpdateMiddleNameUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update middle name using p u t unauthorized response a status code equal to that given
func (o *UpdateMiddleNameUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update middle name using p u t unauthorized response
func (o *UpdateMiddleNameUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateMiddleNameUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/middleName][%d] updateMiddleNameUsingPUTUnauthorized", 401)
}

func (o *UpdateMiddleNameUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/middleName][%d] updateMiddleNameUsingPUTUnauthorized", 401)
}

func (o *UpdateMiddleNameUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMiddleNameUsingPUTForbidden creates a UpdateMiddleNameUsingPUTForbidden with default headers values
func NewUpdateMiddleNameUsingPUTForbidden() *UpdateMiddleNameUsingPUTForbidden {
	return &UpdateMiddleNameUsingPUTForbidden{}
}

/*
UpdateMiddleNameUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateMiddleNameUsingPUTForbidden struct {
}

// IsSuccess returns true when this update middle name using p u t forbidden response has a 2xx status code
func (o *UpdateMiddleNameUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update middle name using p u t forbidden response has a 3xx status code
func (o *UpdateMiddleNameUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update middle name using p u t forbidden response has a 4xx status code
func (o *UpdateMiddleNameUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update middle name using p u t forbidden response has a 5xx status code
func (o *UpdateMiddleNameUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update middle name using p u t forbidden response a status code equal to that given
func (o *UpdateMiddleNameUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update middle name using p u t forbidden response
func (o *UpdateMiddleNameUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateMiddleNameUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/middleName][%d] updateMiddleNameUsingPUTForbidden", 403)
}

func (o *UpdateMiddleNameUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/middleName][%d] updateMiddleNameUsingPUTForbidden", 403)
}

func (o *UpdateMiddleNameUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMiddleNameUsingPUTNotFound creates a UpdateMiddleNameUsingPUTNotFound with default headers values
func NewUpdateMiddleNameUsingPUTNotFound() *UpdateMiddleNameUsingPUTNotFound {
	return &UpdateMiddleNameUsingPUTNotFound{}
}

/*
UpdateMiddleNameUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateMiddleNameUsingPUTNotFound struct {
}

// IsSuccess returns true when this update middle name using p u t not found response has a 2xx status code
func (o *UpdateMiddleNameUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update middle name using p u t not found response has a 3xx status code
func (o *UpdateMiddleNameUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update middle name using p u t not found response has a 4xx status code
func (o *UpdateMiddleNameUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update middle name using p u t not found response has a 5xx status code
func (o *UpdateMiddleNameUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update middle name using p u t not found response a status code equal to that given
func (o *UpdateMiddleNameUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update middle name using p u t not found response
func (o *UpdateMiddleNameUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateMiddleNameUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/middleName][%d] updateMiddleNameUsingPUTNotFound", 404)
}

func (o *UpdateMiddleNameUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/middleName][%d] updateMiddleNameUsingPUTNotFound", 404)
}

func (o *UpdateMiddleNameUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMiddleNameUsingPUTInternalServerError creates a UpdateMiddleNameUsingPUTInternalServerError with default headers values
func NewUpdateMiddleNameUsingPUTInternalServerError() *UpdateMiddleNameUsingPUTInternalServerError {
	return &UpdateMiddleNameUsingPUTInternalServerError{}
}

/*
UpdateMiddleNameUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateMiddleNameUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update middle name using p u t internal server error response has a 2xx status code
func (o *UpdateMiddleNameUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update middle name using p u t internal server error response has a 3xx status code
func (o *UpdateMiddleNameUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update middle name using p u t internal server error response has a 4xx status code
func (o *UpdateMiddleNameUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update middle name using p u t internal server error response has a 5xx status code
func (o *UpdateMiddleNameUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update middle name using p u t internal server error response a status code equal to that given
func (o *UpdateMiddleNameUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update middle name using p u t internal server error response
func (o *UpdateMiddleNameUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateMiddleNameUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/middleName][%d] updateMiddleNameUsingPUTInternalServerError", 500)
}

func (o *UpdateMiddleNameUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/middleName][%d] updateMiddleNameUsingPUTInternalServerError", 500)
}

func (o *UpdateMiddleNameUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
