// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateMemberAddressUsingPUTReader is a Reader for the UpdateMemberAddressUsingPUT structure.
type UpdateMemberAddressUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMemberAddressUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateMemberAddressUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateMemberAddressUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateMemberAddressUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateMemberAddressUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateMemberAddressUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateMemberAddressUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateMemberAddressUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/member/update/address] updateMemberAddressUsingPUT", response, response.Code())
	}
}

// NewUpdateMemberAddressUsingPUTOK creates a UpdateMemberAddressUsingPUTOK with default headers values
func NewUpdateMemberAddressUsingPUTOK() *UpdateMemberAddressUsingPUTOK {
	return &UpdateMemberAddressUsingPUTOK{}
}

/*
UpdateMemberAddressUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateMemberAddressUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update member address using p u t o k response has a 2xx status code
func (o *UpdateMemberAddressUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member address using p u t o k response has a 3xx status code
func (o *UpdateMemberAddressUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member address using p u t o k response has a 4xx status code
func (o *UpdateMemberAddressUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member address using p u t o k response has a 5xx status code
func (o *UpdateMemberAddressUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update member address using p u t o k response a status code equal to that given
func (o *UpdateMemberAddressUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update member address using p u t o k response
func (o *UpdateMemberAddressUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateMemberAddressUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/address][%d] updateMemberAddressUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberAddressUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/address][%d] updateMemberAddressUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberAddressUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateMemberAddressUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMemberAddressUsingPUTCreated creates a UpdateMemberAddressUsingPUTCreated with default headers values
func NewUpdateMemberAddressUsingPUTCreated() *UpdateMemberAddressUsingPUTCreated {
	return &UpdateMemberAddressUsingPUTCreated{}
}

/*
UpdateMemberAddressUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateMemberAddressUsingPUTCreated struct {
}

// IsSuccess returns true when this update member address using p u t created response has a 2xx status code
func (o *UpdateMemberAddressUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member address using p u t created response has a 3xx status code
func (o *UpdateMemberAddressUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member address using p u t created response has a 4xx status code
func (o *UpdateMemberAddressUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member address using p u t created response has a 5xx status code
func (o *UpdateMemberAddressUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update member address using p u t created response a status code equal to that given
func (o *UpdateMemberAddressUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update member address using p u t created response
func (o *UpdateMemberAddressUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateMemberAddressUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/address][%d] updateMemberAddressUsingPUTCreated", 201)
}

func (o *UpdateMemberAddressUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/address][%d] updateMemberAddressUsingPUTCreated", 201)
}

func (o *UpdateMemberAddressUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberAddressUsingPUTBadRequest creates a UpdateMemberAddressUsingPUTBadRequest with default headers values
func NewUpdateMemberAddressUsingPUTBadRequest() *UpdateMemberAddressUsingPUTBadRequest {
	return &UpdateMemberAddressUsingPUTBadRequest{}
}

/*
UpdateMemberAddressUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateMemberAddressUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update member address using p u t bad request response has a 2xx status code
func (o *UpdateMemberAddressUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member address using p u t bad request response has a 3xx status code
func (o *UpdateMemberAddressUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member address using p u t bad request response has a 4xx status code
func (o *UpdateMemberAddressUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member address using p u t bad request response has a 5xx status code
func (o *UpdateMemberAddressUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update member address using p u t bad request response a status code equal to that given
func (o *UpdateMemberAddressUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update member address using p u t bad request response
func (o *UpdateMemberAddressUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateMemberAddressUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/address][%d] updateMemberAddressUsingPUTBadRequest", 400)
}

func (o *UpdateMemberAddressUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/address][%d] updateMemberAddressUsingPUTBadRequest", 400)
}

func (o *UpdateMemberAddressUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberAddressUsingPUTUnauthorized creates a UpdateMemberAddressUsingPUTUnauthorized with default headers values
func NewUpdateMemberAddressUsingPUTUnauthorized() *UpdateMemberAddressUsingPUTUnauthorized {
	return &UpdateMemberAddressUsingPUTUnauthorized{}
}

/*
UpdateMemberAddressUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateMemberAddressUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update member address using p u t unauthorized response has a 2xx status code
func (o *UpdateMemberAddressUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member address using p u t unauthorized response has a 3xx status code
func (o *UpdateMemberAddressUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member address using p u t unauthorized response has a 4xx status code
func (o *UpdateMemberAddressUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member address using p u t unauthorized response has a 5xx status code
func (o *UpdateMemberAddressUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update member address using p u t unauthorized response a status code equal to that given
func (o *UpdateMemberAddressUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update member address using p u t unauthorized response
func (o *UpdateMemberAddressUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateMemberAddressUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/address][%d] updateMemberAddressUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberAddressUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/address][%d] updateMemberAddressUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberAddressUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberAddressUsingPUTForbidden creates a UpdateMemberAddressUsingPUTForbidden with default headers values
func NewUpdateMemberAddressUsingPUTForbidden() *UpdateMemberAddressUsingPUTForbidden {
	return &UpdateMemberAddressUsingPUTForbidden{}
}

/*
UpdateMemberAddressUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateMemberAddressUsingPUTForbidden struct {
}

// IsSuccess returns true when this update member address using p u t forbidden response has a 2xx status code
func (o *UpdateMemberAddressUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member address using p u t forbidden response has a 3xx status code
func (o *UpdateMemberAddressUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member address using p u t forbidden response has a 4xx status code
func (o *UpdateMemberAddressUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member address using p u t forbidden response has a 5xx status code
func (o *UpdateMemberAddressUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update member address using p u t forbidden response a status code equal to that given
func (o *UpdateMemberAddressUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update member address using p u t forbidden response
func (o *UpdateMemberAddressUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateMemberAddressUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/address][%d] updateMemberAddressUsingPUTForbidden", 403)
}

func (o *UpdateMemberAddressUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/address][%d] updateMemberAddressUsingPUTForbidden", 403)
}

func (o *UpdateMemberAddressUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberAddressUsingPUTNotFound creates a UpdateMemberAddressUsingPUTNotFound with default headers values
func NewUpdateMemberAddressUsingPUTNotFound() *UpdateMemberAddressUsingPUTNotFound {
	return &UpdateMemberAddressUsingPUTNotFound{}
}

/*
UpdateMemberAddressUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateMemberAddressUsingPUTNotFound struct {
}

// IsSuccess returns true when this update member address using p u t not found response has a 2xx status code
func (o *UpdateMemberAddressUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member address using p u t not found response has a 3xx status code
func (o *UpdateMemberAddressUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member address using p u t not found response has a 4xx status code
func (o *UpdateMemberAddressUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member address using p u t not found response has a 5xx status code
func (o *UpdateMemberAddressUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update member address using p u t not found response a status code equal to that given
func (o *UpdateMemberAddressUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update member address using p u t not found response
func (o *UpdateMemberAddressUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateMemberAddressUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/address][%d] updateMemberAddressUsingPUTNotFound", 404)
}

func (o *UpdateMemberAddressUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/address][%d] updateMemberAddressUsingPUTNotFound", 404)
}

func (o *UpdateMemberAddressUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberAddressUsingPUTInternalServerError creates a UpdateMemberAddressUsingPUTInternalServerError with default headers values
func NewUpdateMemberAddressUsingPUTInternalServerError() *UpdateMemberAddressUsingPUTInternalServerError {
	return &UpdateMemberAddressUsingPUTInternalServerError{}
}

/*
UpdateMemberAddressUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateMemberAddressUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update member address using p u t internal server error response has a 2xx status code
func (o *UpdateMemberAddressUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member address using p u t internal server error response has a 3xx status code
func (o *UpdateMemberAddressUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member address using p u t internal server error response has a 4xx status code
func (o *UpdateMemberAddressUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member address using p u t internal server error response has a 5xx status code
func (o *UpdateMemberAddressUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update member address using p u t internal server error response a status code equal to that given
func (o *UpdateMemberAddressUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update member address using p u t internal server error response
func (o *UpdateMemberAddressUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateMemberAddressUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/address][%d] updateMemberAddressUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberAddressUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/address][%d] updateMemberAddressUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberAddressUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
