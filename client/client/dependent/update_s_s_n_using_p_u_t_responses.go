// Code generated by go-swagger; DO NOT EDIT.

package dependent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateSSNUsingPUTReader is a Reader for the UpdateSSNUsingPUT structure.
type UpdateSSNUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateSSNUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateSSNUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateSSNUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateSSNUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateSSNUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateSSNUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateSSNUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateSSNUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/dependent/update/ssn] updateSSNUsingPUT", response, response.Code())
	}
}

// NewUpdateSSNUsingPUTOK creates a UpdateSSNUsingPUTOK with default headers values
func NewUpdateSSNUsingPUTOK() *UpdateSSNUsingPUTOK {
	return &UpdateSSNUsingPUTOK{}
}

/*
UpdateSSNUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateSSNUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update s s n using p u t o k response has a 2xx status code
func (o *UpdateSSNUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update s s n using p u t o k response has a 3xx status code
func (o *UpdateSSNUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update s s n using p u t o k response has a 4xx status code
func (o *UpdateSSNUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update s s n using p u t o k response has a 5xx status code
func (o *UpdateSSNUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update s s n using p u t o k response a status code equal to that given
func (o *UpdateSSNUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update s s n using p u t o k response
func (o *UpdateSSNUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateSSNUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/ssn][%d] updateSSNUsingPUTOK %s", 200, payload)
}

func (o *UpdateSSNUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/ssn][%d] updateSSNUsingPUTOK %s", 200, payload)
}

func (o *UpdateSSNUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateSSNUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSSNUsingPUTCreated creates a UpdateSSNUsingPUTCreated with default headers values
func NewUpdateSSNUsingPUTCreated() *UpdateSSNUsingPUTCreated {
	return &UpdateSSNUsingPUTCreated{}
}

/*
UpdateSSNUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateSSNUsingPUTCreated struct {
}

// IsSuccess returns true when this update s s n using p u t created response has a 2xx status code
func (o *UpdateSSNUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update s s n using p u t created response has a 3xx status code
func (o *UpdateSSNUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update s s n using p u t created response has a 4xx status code
func (o *UpdateSSNUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update s s n using p u t created response has a 5xx status code
func (o *UpdateSSNUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update s s n using p u t created response a status code equal to that given
func (o *UpdateSSNUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update s s n using p u t created response
func (o *UpdateSSNUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateSSNUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/ssn][%d] updateSSNUsingPUTCreated", 201)
}

func (o *UpdateSSNUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/ssn][%d] updateSSNUsingPUTCreated", 201)
}

func (o *UpdateSSNUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSSNUsingPUTBadRequest creates a UpdateSSNUsingPUTBadRequest with default headers values
func NewUpdateSSNUsingPUTBadRequest() *UpdateSSNUsingPUTBadRequest {
	return &UpdateSSNUsingPUTBadRequest{}
}

/*
UpdateSSNUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateSSNUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update s s n using p u t bad request response has a 2xx status code
func (o *UpdateSSNUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update s s n using p u t bad request response has a 3xx status code
func (o *UpdateSSNUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update s s n using p u t bad request response has a 4xx status code
func (o *UpdateSSNUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update s s n using p u t bad request response has a 5xx status code
func (o *UpdateSSNUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update s s n using p u t bad request response a status code equal to that given
func (o *UpdateSSNUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update s s n using p u t bad request response
func (o *UpdateSSNUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateSSNUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/ssn][%d] updateSSNUsingPUTBadRequest", 400)
}

func (o *UpdateSSNUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/ssn][%d] updateSSNUsingPUTBadRequest", 400)
}

func (o *UpdateSSNUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSSNUsingPUTUnauthorized creates a UpdateSSNUsingPUTUnauthorized with default headers values
func NewUpdateSSNUsingPUTUnauthorized() *UpdateSSNUsingPUTUnauthorized {
	return &UpdateSSNUsingPUTUnauthorized{}
}

/*
UpdateSSNUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateSSNUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update s s n using p u t unauthorized response has a 2xx status code
func (o *UpdateSSNUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update s s n using p u t unauthorized response has a 3xx status code
func (o *UpdateSSNUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update s s n using p u t unauthorized response has a 4xx status code
func (o *UpdateSSNUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update s s n using p u t unauthorized response has a 5xx status code
func (o *UpdateSSNUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update s s n using p u t unauthorized response a status code equal to that given
func (o *UpdateSSNUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update s s n using p u t unauthorized response
func (o *UpdateSSNUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateSSNUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/ssn][%d] updateSSNUsingPUTUnauthorized", 401)
}

func (o *UpdateSSNUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/ssn][%d] updateSSNUsingPUTUnauthorized", 401)
}

func (o *UpdateSSNUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSSNUsingPUTForbidden creates a UpdateSSNUsingPUTForbidden with default headers values
func NewUpdateSSNUsingPUTForbidden() *UpdateSSNUsingPUTForbidden {
	return &UpdateSSNUsingPUTForbidden{}
}

/*
UpdateSSNUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateSSNUsingPUTForbidden struct {
}

// IsSuccess returns true when this update s s n using p u t forbidden response has a 2xx status code
func (o *UpdateSSNUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update s s n using p u t forbidden response has a 3xx status code
func (o *UpdateSSNUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update s s n using p u t forbidden response has a 4xx status code
func (o *UpdateSSNUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update s s n using p u t forbidden response has a 5xx status code
func (o *UpdateSSNUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update s s n using p u t forbidden response a status code equal to that given
func (o *UpdateSSNUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update s s n using p u t forbidden response
func (o *UpdateSSNUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateSSNUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/ssn][%d] updateSSNUsingPUTForbidden", 403)
}

func (o *UpdateSSNUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/ssn][%d] updateSSNUsingPUTForbidden", 403)
}

func (o *UpdateSSNUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSSNUsingPUTNotFound creates a UpdateSSNUsingPUTNotFound with default headers values
func NewUpdateSSNUsingPUTNotFound() *UpdateSSNUsingPUTNotFound {
	return &UpdateSSNUsingPUTNotFound{}
}

/*
UpdateSSNUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateSSNUsingPUTNotFound struct {
}

// IsSuccess returns true when this update s s n using p u t not found response has a 2xx status code
func (o *UpdateSSNUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update s s n using p u t not found response has a 3xx status code
func (o *UpdateSSNUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update s s n using p u t not found response has a 4xx status code
func (o *UpdateSSNUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update s s n using p u t not found response has a 5xx status code
func (o *UpdateSSNUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update s s n using p u t not found response a status code equal to that given
func (o *UpdateSSNUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update s s n using p u t not found response
func (o *UpdateSSNUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateSSNUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/ssn][%d] updateSSNUsingPUTNotFound", 404)
}

func (o *UpdateSSNUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/ssn][%d] updateSSNUsingPUTNotFound", 404)
}

func (o *UpdateSSNUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSSNUsingPUTInternalServerError creates a UpdateSSNUsingPUTInternalServerError with default headers values
func NewUpdateSSNUsingPUTInternalServerError() *UpdateSSNUsingPUTInternalServerError {
	return &UpdateSSNUsingPUTInternalServerError{}
}

/*
UpdateSSNUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateSSNUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update s s n using p u t internal server error response has a 2xx status code
func (o *UpdateSSNUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update s s n using p u t internal server error response has a 3xx status code
func (o *UpdateSSNUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update s s n using p u t internal server error response has a 4xx status code
func (o *UpdateSSNUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update s s n using p u t internal server error response has a 5xx status code
func (o *UpdateSSNUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update s s n using p u t internal server error response a status code equal to that given
func (o *UpdateSSNUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update s s n using p u t internal server error response
func (o *UpdateSSNUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateSSNUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/ssn][%d] updateSSNUsingPUTInternalServerError", 500)
}

func (o *UpdateSSNUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/ssn][%d] updateSSNUsingPUTInternalServerError", 500)
}

func (o *UpdateSSNUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
