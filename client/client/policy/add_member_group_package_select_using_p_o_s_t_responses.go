// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// AddMemberGroupPackageSelectUsingPOSTReader is a Reader for the AddMemberGroupPackageSelectUsingPOST structure.
type AddMemberGroupPackageSelectUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddMemberGroupPackageSelectUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddMemberGroupPackageSelectUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewAddMemberGroupPackageSelectUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddMemberGroupPackageSelectUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddMemberGroupPackageSelectUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddMemberGroupPackageSelectUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddMemberGroupPackageSelectUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddMemberGroupPackageSelectUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/policy/memberGroupPackageSelect] addMemberGroupPackageSelectUsingPOST", response, response.Code())
	}
}

// NewAddMemberGroupPackageSelectUsingPOSTOK creates a AddMemberGroupPackageSelectUsingPOSTOK with default headers values
func NewAddMemberGroupPackageSelectUsingPOSTOK() *AddMemberGroupPackageSelectUsingPOSTOK {
	return &AddMemberGroupPackageSelectUsingPOSTOK{}
}

/*
AddMemberGroupPackageSelectUsingPOSTOK describes a response with status code 200, with default header values.

Success
*/
type AddMemberGroupPackageSelectUsingPOSTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this add member group package select using p o s t o k response has a 2xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add member group package select using p o s t o k response has a 3xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add member group package select using p o s t o k response has a 4xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add member group package select using p o s t o k response has a 5xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add member group package select using p o s t o k response a status code equal to that given
func (o *AddMemberGroupPackageSelectUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add member group package select using p o s t o k response
func (o *AddMemberGroupPackageSelectUsingPOSTOK) Code() int {
	return 200
}

func (o *AddMemberGroupPackageSelectUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupPackageSelect][%d] addMemberGroupPackageSelectUsingPOSTOK %s", 200, payload)
}

func (o *AddMemberGroupPackageSelectUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupPackageSelect][%d] addMemberGroupPackageSelectUsingPOSTOK %s", 200, payload)
}

func (o *AddMemberGroupPackageSelectUsingPOSTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *AddMemberGroupPackageSelectUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddMemberGroupPackageSelectUsingPOSTCreated creates a AddMemberGroupPackageSelectUsingPOSTCreated with default headers values
func NewAddMemberGroupPackageSelectUsingPOSTCreated() *AddMemberGroupPackageSelectUsingPOSTCreated {
	return &AddMemberGroupPackageSelectUsingPOSTCreated{}
}

/*
AddMemberGroupPackageSelectUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type AddMemberGroupPackageSelectUsingPOSTCreated struct {
}

// IsSuccess returns true when this add member group package select using p o s t created response has a 2xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add member group package select using p o s t created response has a 3xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add member group package select using p o s t created response has a 4xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add member group package select using p o s t created response has a 5xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add member group package select using p o s t created response a status code equal to that given
func (o *AddMemberGroupPackageSelectUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add member group package select using p o s t created response
func (o *AddMemberGroupPackageSelectUsingPOSTCreated) Code() int {
	return 201
}

func (o *AddMemberGroupPackageSelectUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupPackageSelect][%d] addMemberGroupPackageSelectUsingPOSTCreated", 201)
}

func (o *AddMemberGroupPackageSelectUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupPackageSelect][%d] addMemberGroupPackageSelectUsingPOSTCreated", 201)
}

func (o *AddMemberGroupPackageSelectUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddMemberGroupPackageSelectUsingPOSTBadRequest creates a AddMemberGroupPackageSelectUsingPOSTBadRequest with default headers values
func NewAddMemberGroupPackageSelectUsingPOSTBadRequest() *AddMemberGroupPackageSelectUsingPOSTBadRequest {
	return &AddMemberGroupPackageSelectUsingPOSTBadRequest{}
}

/*
AddMemberGroupPackageSelectUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddMemberGroupPackageSelectUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this add member group package select using p o s t bad request response has a 2xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add member group package select using p o s t bad request response has a 3xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add member group package select using p o s t bad request response has a 4xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add member group package select using p o s t bad request response has a 5xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add member group package select using p o s t bad request response a status code equal to that given
func (o *AddMemberGroupPackageSelectUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add member group package select using p o s t bad request response
func (o *AddMemberGroupPackageSelectUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *AddMemberGroupPackageSelectUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupPackageSelect][%d] addMemberGroupPackageSelectUsingPOSTBadRequest", 400)
}

func (o *AddMemberGroupPackageSelectUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupPackageSelect][%d] addMemberGroupPackageSelectUsingPOSTBadRequest", 400)
}

func (o *AddMemberGroupPackageSelectUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddMemberGroupPackageSelectUsingPOSTUnauthorized creates a AddMemberGroupPackageSelectUsingPOSTUnauthorized with default headers values
func NewAddMemberGroupPackageSelectUsingPOSTUnauthorized() *AddMemberGroupPackageSelectUsingPOSTUnauthorized {
	return &AddMemberGroupPackageSelectUsingPOSTUnauthorized{}
}

/*
AddMemberGroupPackageSelectUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddMemberGroupPackageSelectUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this add member group package select using p o s t unauthorized response has a 2xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add member group package select using p o s t unauthorized response has a 3xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add member group package select using p o s t unauthorized response has a 4xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add member group package select using p o s t unauthorized response has a 5xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add member group package select using p o s t unauthorized response a status code equal to that given
func (o *AddMemberGroupPackageSelectUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add member group package select using p o s t unauthorized response
func (o *AddMemberGroupPackageSelectUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *AddMemberGroupPackageSelectUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupPackageSelect][%d] addMemberGroupPackageSelectUsingPOSTUnauthorized", 401)
}

func (o *AddMemberGroupPackageSelectUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupPackageSelect][%d] addMemberGroupPackageSelectUsingPOSTUnauthorized", 401)
}

func (o *AddMemberGroupPackageSelectUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddMemberGroupPackageSelectUsingPOSTForbidden creates a AddMemberGroupPackageSelectUsingPOSTForbidden with default headers values
func NewAddMemberGroupPackageSelectUsingPOSTForbidden() *AddMemberGroupPackageSelectUsingPOSTForbidden {
	return &AddMemberGroupPackageSelectUsingPOSTForbidden{}
}

/*
AddMemberGroupPackageSelectUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddMemberGroupPackageSelectUsingPOSTForbidden struct {
}

// IsSuccess returns true when this add member group package select using p o s t forbidden response has a 2xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add member group package select using p o s t forbidden response has a 3xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add member group package select using p o s t forbidden response has a 4xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add member group package select using p o s t forbidden response has a 5xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add member group package select using p o s t forbidden response a status code equal to that given
func (o *AddMemberGroupPackageSelectUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add member group package select using p o s t forbidden response
func (o *AddMemberGroupPackageSelectUsingPOSTForbidden) Code() int {
	return 403
}

func (o *AddMemberGroupPackageSelectUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupPackageSelect][%d] addMemberGroupPackageSelectUsingPOSTForbidden", 403)
}

func (o *AddMemberGroupPackageSelectUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupPackageSelect][%d] addMemberGroupPackageSelectUsingPOSTForbidden", 403)
}

func (o *AddMemberGroupPackageSelectUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddMemberGroupPackageSelectUsingPOSTNotFound creates a AddMemberGroupPackageSelectUsingPOSTNotFound with default headers values
func NewAddMemberGroupPackageSelectUsingPOSTNotFound() *AddMemberGroupPackageSelectUsingPOSTNotFound {
	return &AddMemberGroupPackageSelectUsingPOSTNotFound{}
}

/*
AddMemberGroupPackageSelectUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddMemberGroupPackageSelectUsingPOSTNotFound struct {
}

// IsSuccess returns true when this add member group package select using p o s t not found response has a 2xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add member group package select using p o s t not found response has a 3xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add member group package select using p o s t not found response has a 4xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add member group package select using p o s t not found response has a 5xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add member group package select using p o s t not found response a status code equal to that given
func (o *AddMemberGroupPackageSelectUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add member group package select using p o s t not found response
func (o *AddMemberGroupPackageSelectUsingPOSTNotFound) Code() int {
	return 404
}

func (o *AddMemberGroupPackageSelectUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupPackageSelect][%d] addMemberGroupPackageSelectUsingPOSTNotFound", 404)
}

func (o *AddMemberGroupPackageSelectUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupPackageSelect][%d] addMemberGroupPackageSelectUsingPOSTNotFound", 404)
}

func (o *AddMemberGroupPackageSelectUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddMemberGroupPackageSelectUsingPOSTInternalServerError creates a AddMemberGroupPackageSelectUsingPOSTInternalServerError with default headers values
func NewAddMemberGroupPackageSelectUsingPOSTInternalServerError() *AddMemberGroupPackageSelectUsingPOSTInternalServerError {
	return &AddMemberGroupPackageSelectUsingPOSTInternalServerError{}
}

/*
AddMemberGroupPackageSelectUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AddMemberGroupPackageSelectUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this add member group package select using p o s t internal server error response has a 2xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add member group package select using p o s t internal server error response has a 3xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add member group package select using p o s t internal server error response has a 4xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add member group package select using p o s t internal server error response has a 5xx status code
func (o *AddMemberGroupPackageSelectUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add member group package select using p o s t internal server error response a status code equal to that given
func (o *AddMemberGroupPackageSelectUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add member group package select using p o s t internal server error response
func (o *AddMemberGroupPackageSelectUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *AddMemberGroupPackageSelectUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupPackageSelect][%d] addMemberGroupPackageSelectUsingPOSTInternalServerError", 500)
}

func (o *AddMemberGroupPackageSelectUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupPackageSelect][%d] addMemberGroupPackageSelectUsingPOSTInternalServerError", 500)
}

func (o *AddMemberGroupPackageSelectUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
