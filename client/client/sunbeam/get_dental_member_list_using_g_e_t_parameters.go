// Code generated by go-swagger; DO NOT EDIT.

package sunbeam

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetDentalMemberListUsingGETParams creates a new GetDentalMemberListUsingGETParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetDentalMemberListUsingGETParams() *GetDentalMemberListUsingGETParams {
	return &GetDentalMemberListUsingGETParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetDentalMemberListUsingGETParamsWithTimeout creates a new GetDentalMemberListUsingGETParams object
// with the ability to set a timeout on a request.
func NewGetDentalMemberListUsingGETParamsWithTimeout(timeout time.Duration) *GetDentalMemberListUsingGETParams {
	return &GetDentalMemberListUsingGETParams{
		timeout: timeout,
	}
}

// NewGetDentalMemberListUsingGETParamsWithContext creates a new GetDentalMemberListUsingGETParams object
// with the ability to set a context for a request.
func NewGetDentalMemberListUsingGETParamsWithContext(ctx context.Context) *GetDentalMemberListUsingGETParams {
	return &GetDentalMemberListUsingGETParams{
		Context: ctx,
	}
}

// NewGetDentalMemberListUsingGETParamsWithHTTPClient creates a new GetDentalMemberListUsingGETParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetDentalMemberListUsingGETParamsWithHTTPClient(client *http.Client) *GetDentalMemberListUsingGETParams {
	return &GetDentalMemberListUsingGETParams{
		HTTPClient: client,
	}
}

/*
GetDentalMemberListUsingGETParams contains all the parameters to send to the API endpoint

	for the get dental member list using g e t operation.

	Typically these are written to a http.Request.
*/
type GetDentalMemberListUsingGETParams struct {

	/* EffDate.

	   effDate
	*/
	EffDate string

	/* PageEnd.

	   pageEnd

	   Format: int32
	*/
	PageEnd *int32

	/* PageStart.

	   pageStart

	   Format: int32
	*/
	PageStart *int32

	/* PolicyNumber.

	   policyNumber
	*/
	PolicyNumber string

	/* RequestApplication.

	   requestApplication
	*/
	RequestApplication string

	/* RequestUser.

	   requestUser
	*/
	RequestUser string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get dental member list using g e t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDentalMemberListUsingGETParams) WithDefaults() *GetDentalMemberListUsingGETParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get dental member list using g e t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDentalMemberListUsingGETParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get dental member list using g e t params
func (o *GetDentalMemberListUsingGETParams) WithTimeout(timeout time.Duration) *GetDentalMemberListUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get dental member list using g e t params
func (o *GetDentalMemberListUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get dental member list using g e t params
func (o *GetDentalMemberListUsingGETParams) WithContext(ctx context.Context) *GetDentalMemberListUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get dental member list using g e t params
func (o *GetDentalMemberListUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get dental member list using g e t params
func (o *GetDentalMemberListUsingGETParams) WithHTTPClient(client *http.Client) *GetDentalMemberListUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get dental member list using g e t params
func (o *GetDentalMemberListUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEffDate adds the effDate to the get dental member list using g e t params
func (o *GetDentalMemberListUsingGETParams) WithEffDate(effDate string) *GetDentalMemberListUsingGETParams {
	o.SetEffDate(effDate)
	return o
}

// SetEffDate adds the effDate to the get dental member list using g e t params
func (o *GetDentalMemberListUsingGETParams) SetEffDate(effDate string) {
	o.EffDate = effDate
}

// WithPageEnd adds the pageEnd to the get dental member list using g e t params
func (o *GetDentalMemberListUsingGETParams) WithPageEnd(pageEnd *int32) *GetDentalMemberListUsingGETParams {
	o.SetPageEnd(pageEnd)
	return o
}

// SetPageEnd adds the pageEnd to the get dental member list using g e t params
func (o *GetDentalMemberListUsingGETParams) SetPageEnd(pageEnd *int32) {
	o.PageEnd = pageEnd
}

// WithPageStart adds the pageStart to the get dental member list using g e t params
func (o *GetDentalMemberListUsingGETParams) WithPageStart(pageStart *int32) *GetDentalMemberListUsingGETParams {
	o.SetPageStart(pageStart)
	return o
}

// SetPageStart adds the pageStart to the get dental member list using g e t params
func (o *GetDentalMemberListUsingGETParams) SetPageStart(pageStart *int32) {
	o.PageStart = pageStart
}

// WithPolicyNumber adds the policyNumber to the get dental member list using g e t params
func (o *GetDentalMemberListUsingGETParams) WithPolicyNumber(policyNumber string) *GetDentalMemberListUsingGETParams {
	o.SetPolicyNumber(policyNumber)
	return o
}

// SetPolicyNumber adds the policyNumber to the get dental member list using g e t params
func (o *GetDentalMemberListUsingGETParams) SetPolicyNumber(policyNumber string) {
	o.PolicyNumber = policyNumber
}

// WithRequestApplication adds the requestApplication to the get dental member list using g e t params
func (o *GetDentalMemberListUsingGETParams) WithRequestApplication(requestApplication string) *GetDentalMemberListUsingGETParams {
	o.SetRequestApplication(requestApplication)
	return o
}

// SetRequestApplication adds the requestApplication to the get dental member list using g e t params
func (o *GetDentalMemberListUsingGETParams) SetRequestApplication(requestApplication string) {
	o.RequestApplication = requestApplication
}

// WithRequestUser adds the requestUser to the get dental member list using g e t params
func (o *GetDentalMemberListUsingGETParams) WithRequestUser(requestUser string) *GetDentalMemberListUsingGETParams {
	o.SetRequestUser(requestUser)
	return o
}

// SetRequestUser adds the requestUser to the get dental member list using g e t params
func (o *GetDentalMemberListUsingGETParams) SetRequestUser(requestUser string) {
	o.RequestUser = requestUser
}

// WriteToRequest writes these params to a swagger request
func (o *GetDentalMemberListUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param effDate
	qrEffDate := o.EffDate
	qEffDate := qrEffDate
	if qEffDate != "" {

		if err := r.SetQueryParam("effDate", qEffDate); err != nil {
			return err
		}
	}

	if o.PageEnd != nil {

		// query param pageEnd
		var qrPageEnd int32

		if o.PageEnd != nil {
			qrPageEnd = *o.PageEnd
		}
		qPageEnd := swag.FormatInt32(qrPageEnd)
		if qPageEnd != "" {

			if err := r.SetQueryParam("pageEnd", qPageEnd); err != nil {
				return err
			}
		}
	}

	if o.PageStart != nil {

		// query param pageStart
		var qrPageStart int32

		if o.PageStart != nil {
			qrPageStart = *o.PageStart
		}
		qPageStart := swag.FormatInt32(qrPageStart)
		if qPageStart != "" {

			if err := r.SetQueryParam("pageStart", qPageStart); err != nil {
				return err
			}
		}
	}

	// query param policyNumber
	qrPolicyNumber := o.PolicyNumber
	qPolicyNumber := qrPolicyNumber
	if qPolicyNumber != "" {

		if err := r.SetQueryParam("policyNumber", qPolicyNumber); err != nil {
			return err
		}
	}

	// query param requestApplication
	qrRequestApplication := o.RequestApplication
	qRequestApplication := qrRequestApplication
	if qRequestApplication != "" {

		if err := r.SetQueryParam("requestApplication", qRequestApplication); err != nil {
			return err
		}
	}

	// query param requestUser
	qrRequestUser := o.RequestUser
	qRequestUser := qrRequestUser
	if qRequestUser != "" {

		if err := r.SetQueryParam("requestUser", qRequestUser); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
