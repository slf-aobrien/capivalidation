// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetBenefitOptionListUsingGET1Params creates a new GetBenefitOptionListUsingGET1Params object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetBenefitOptionListUsingGET1Params() *GetBenefitOptionListUsingGET1Params {
	return &GetBenefitOptionListUsingGET1Params{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetBenefitOptionListUsingGET1ParamsWithTimeout creates a new GetBenefitOptionListUsingGET1Params object
// with the ability to set a timeout on a request.
func NewGetBenefitOptionListUsingGET1ParamsWithTimeout(timeout time.Duration) *GetBenefitOptionListUsingGET1Params {
	return &GetBenefitOptionListUsingGET1Params{
		timeout: timeout,
	}
}

// NewGetBenefitOptionListUsingGET1ParamsWithContext creates a new GetBenefitOptionListUsingGET1Params object
// with the ability to set a context for a request.
func NewGetBenefitOptionListUsingGET1ParamsWithContext(ctx context.Context) *GetBenefitOptionListUsingGET1Params {
	return &GetBenefitOptionListUsingGET1Params{
		Context: ctx,
	}
}

// NewGetBenefitOptionListUsingGET1ParamsWithHTTPClient creates a new GetBenefitOptionListUsingGET1Params object
// with the ability to set a custom HTTPClient for a request.
func NewGetBenefitOptionListUsingGET1ParamsWithHTTPClient(client *http.Client) *GetBenefitOptionListUsingGET1Params {
	return &GetBenefitOptionListUsingGET1Params{
		HTTPClient: client,
	}
}

/*
GetBenefitOptionListUsingGET1Params contains all the parameters to send to the API endpoint

	for the get benefit option list using g e t 1 operation.

	Typically these are written to a http.Request.
*/
type GetBenefitOptionListUsingGET1Params struct {

	/* EffectiveDate.

	   effectiveDate
	*/
	EffectiveDate *string

	/* MemberGroupDescription.

	   memberGroupDescription
	*/
	MemberGroupDescription string

	/* PolicyNumber.

	   policyNumber
	*/
	PolicyNumber string

	/* RequestApplication.

	   requestApplication
	*/
	RequestApplication string

	/* RequestUser.

	   requestUser
	*/
	RequestUser string

	/* VarianceFormat.

	   varianceFormat
	*/
	VarianceFormat string

	/* VarianceLevel.

	   varianceLevel
	*/
	VarianceLevel string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get benefit option list using g e t 1 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetBenefitOptionListUsingGET1Params) WithDefaults() *GetBenefitOptionListUsingGET1Params {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get benefit option list using g e t 1 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetBenefitOptionListUsingGET1Params) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get benefit option list using g e t 1 params
func (o *GetBenefitOptionListUsingGET1Params) WithTimeout(timeout time.Duration) *GetBenefitOptionListUsingGET1Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get benefit option list using g e t 1 params
func (o *GetBenefitOptionListUsingGET1Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get benefit option list using g e t 1 params
func (o *GetBenefitOptionListUsingGET1Params) WithContext(ctx context.Context) *GetBenefitOptionListUsingGET1Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get benefit option list using g e t 1 params
func (o *GetBenefitOptionListUsingGET1Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get benefit option list using g e t 1 params
func (o *GetBenefitOptionListUsingGET1Params) WithHTTPClient(client *http.Client) *GetBenefitOptionListUsingGET1Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get benefit option list using g e t 1 params
func (o *GetBenefitOptionListUsingGET1Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEffectiveDate adds the effectiveDate to the get benefit option list using g e t 1 params
func (o *GetBenefitOptionListUsingGET1Params) WithEffectiveDate(effectiveDate *string) *GetBenefitOptionListUsingGET1Params {
	o.SetEffectiveDate(effectiveDate)
	return o
}

// SetEffectiveDate adds the effectiveDate to the get benefit option list using g e t 1 params
func (o *GetBenefitOptionListUsingGET1Params) SetEffectiveDate(effectiveDate *string) {
	o.EffectiveDate = effectiveDate
}

// WithMemberGroupDescription adds the memberGroupDescription to the get benefit option list using g e t 1 params
func (o *GetBenefitOptionListUsingGET1Params) WithMemberGroupDescription(memberGroupDescription string) *GetBenefitOptionListUsingGET1Params {
	o.SetMemberGroupDescription(memberGroupDescription)
	return o
}

// SetMemberGroupDescription adds the memberGroupDescription to the get benefit option list using g e t 1 params
func (o *GetBenefitOptionListUsingGET1Params) SetMemberGroupDescription(memberGroupDescription string) {
	o.MemberGroupDescription = memberGroupDescription
}

// WithPolicyNumber adds the policyNumber to the get benefit option list using g e t 1 params
func (o *GetBenefitOptionListUsingGET1Params) WithPolicyNumber(policyNumber string) *GetBenefitOptionListUsingGET1Params {
	o.SetPolicyNumber(policyNumber)
	return o
}

// SetPolicyNumber adds the policyNumber to the get benefit option list using g e t 1 params
func (o *GetBenefitOptionListUsingGET1Params) SetPolicyNumber(policyNumber string) {
	o.PolicyNumber = policyNumber
}

// WithRequestApplication adds the requestApplication to the get benefit option list using g e t 1 params
func (o *GetBenefitOptionListUsingGET1Params) WithRequestApplication(requestApplication string) *GetBenefitOptionListUsingGET1Params {
	o.SetRequestApplication(requestApplication)
	return o
}

// SetRequestApplication adds the requestApplication to the get benefit option list using g e t 1 params
func (o *GetBenefitOptionListUsingGET1Params) SetRequestApplication(requestApplication string) {
	o.RequestApplication = requestApplication
}

// WithRequestUser adds the requestUser to the get benefit option list using g e t 1 params
func (o *GetBenefitOptionListUsingGET1Params) WithRequestUser(requestUser string) *GetBenefitOptionListUsingGET1Params {
	o.SetRequestUser(requestUser)
	return o
}

// SetRequestUser adds the requestUser to the get benefit option list using g e t 1 params
func (o *GetBenefitOptionListUsingGET1Params) SetRequestUser(requestUser string) {
	o.RequestUser = requestUser
}

// WithVarianceFormat adds the varianceFormat to the get benefit option list using g e t 1 params
func (o *GetBenefitOptionListUsingGET1Params) WithVarianceFormat(varianceFormat string) *GetBenefitOptionListUsingGET1Params {
	o.SetVarianceFormat(varianceFormat)
	return o
}

// SetVarianceFormat adds the varianceFormat to the get benefit option list using g e t 1 params
func (o *GetBenefitOptionListUsingGET1Params) SetVarianceFormat(varianceFormat string) {
	o.VarianceFormat = varianceFormat
}

// WithVarianceLevel adds the varianceLevel to the get benefit option list using g e t 1 params
func (o *GetBenefitOptionListUsingGET1Params) WithVarianceLevel(varianceLevel string) *GetBenefitOptionListUsingGET1Params {
	o.SetVarianceLevel(varianceLevel)
	return o
}

// SetVarianceLevel adds the varianceLevel to the get benefit option list using g e t 1 params
func (o *GetBenefitOptionListUsingGET1Params) SetVarianceLevel(varianceLevel string) {
	o.VarianceLevel = varianceLevel
}

// WriteToRequest writes these params to a swagger request
func (o *GetBenefitOptionListUsingGET1Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EffectiveDate != nil {

		// query param effectiveDate
		var qrEffectiveDate string

		if o.EffectiveDate != nil {
			qrEffectiveDate = *o.EffectiveDate
		}
		qEffectiveDate := qrEffectiveDate
		if qEffectiveDate != "" {

			if err := r.SetQueryParam("effectiveDate", qEffectiveDate); err != nil {
				return err
			}
		}
	}

	// path param memberGroupDescription
	if err := r.SetPathParam("memberGroupDescription", o.MemberGroupDescription); err != nil {
		return err
	}

	// path param policyNumber
	if err := r.SetPathParam("policyNumber", o.PolicyNumber); err != nil {
		return err
	}

	// query param requestApplication
	qrRequestApplication := o.RequestApplication
	qRequestApplication := qrRequestApplication
	if qRequestApplication != "" {

		if err := r.SetQueryParam("requestApplication", qRequestApplication); err != nil {
			return err
		}
	}

	// query param requestUser
	qrRequestUser := o.RequestUser
	qRequestUser := qrRequestUser
	if qRequestUser != "" {

		if err := r.SetQueryParam("requestUser", qRequestUser); err != nil {
			return err
		}
	}

	// query param varianceFormat
	qrVarianceFormat := o.VarianceFormat
	qVarianceFormat := qrVarianceFormat
	if qVarianceFormat != "" {

		if err := r.SetQueryParam("varianceFormat", qVarianceFormat); err != nil {
			return err
		}
	}

	// query param varianceLevel
	qrVarianceLevel := o.VarianceLevel
	qVarianceLevel := qrVarianceLevel
	if qVarianceLevel != "" {

		if err := r.SetQueryParam("varianceLevel", qVarianceLevel); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
