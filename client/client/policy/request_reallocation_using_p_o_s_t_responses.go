// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// RequestReallocationUsingPOSTReader is a Reader for the RequestReallocationUsingPOST structure.
type RequestReallocationUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RequestReallocationUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRequestReallocationUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewRequestReallocationUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRequestReallocationUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRequestReallocationUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRequestReallocationUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRequestReallocationUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRequestReallocationUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/policy/reallocation] requestReallocationUsingPOST", response, response.Code())
	}
}

// NewRequestReallocationUsingPOSTOK creates a RequestReallocationUsingPOSTOK with default headers values
func NewRequestReallocationUsingPOSTOK() *RequestReallocationUsingPOSTOK {
	return &RequestReallocationUsingPOSTOK{}
}

/*
RequestReallocationUsingPOSTOK describes a response with status code 200, with default header values.

Success
*/
type RequestReallocationUsingPOSTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this request reallocation using p o s t o k response has a 2xx status code
func (o *RequestReallocationUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this request reallocation using p o s t o k response has a 3xx status code
func (o *RequestReallocationUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request reallocation using p o s t o k response has a 4xx status code
func (o *RequestReallocationUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this request reallocation using p o s t o k response has a 5xx status code
func (o *RequestReallocationUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this request reallocation using p o s t o k response a status code equal to that given
func (o *RequestReallocationUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the request reallocation using p o s t o k response
func (o *RequestReallocationUsingPOSTOK) Code() int {
	return 200
}

func (o *RequestReallocationUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/reallocation][%d] requestReallocationUsingPOSTOK %s", 200, payload)
}

func (o *RequestReallocationUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/reallocation][%d] requestReallocationUsingPOSTOK %s", 200, payload)
}

func (o *RequestReallocationUsingPOSTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *RequestReallocationUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestReallocationUsingPOSTCreated creates a RequestReallocationUsingPOSTCreated with default headers values
func NewRequestReallocationUsingPOSTCreated() *RequestReallocationUsingPOSTCreated {
	return &RequestReallocationUsingPOSTCreated{}
}

/*
RequestReallocationUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type RequestReallocationUsingPOSTCreated struct {
}

// IsSuccess returns true when this request reallocation using p o s t created response has a 2xx status code
func (o *RequestReallocationUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this request reallocation using p o s t created response has a 3xx status code
func (o *RequestReallocationUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request reallocation using p o s t created response has a 4xx status code
func (o *RequestReallocationUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this request reallocation using p o s t created response has a 5xx status code
func (o *RequestReallocationUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this request reallocation using p o s t created response a status code equal to that given
func (o *RequestReallocationUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the request reallocation using p o s t created response
func (o *RequestReallocationUsingPOSTCreated) Code() int {
	return 201
}

func (o *RequestReallocationUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/reallocation][%d] requestReallocationUsingPOSTCreated", 201)
}

func (o *RequestReallocationUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/reallocation][%d] requestReallocationUsingPOSTCreated", 201)
}

func (o *RequestReallocationUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRequestReallocationUsingPOSTBadRequest creates a RequestReallocationUsingPOSTBadRequest with default headers values
func NewRequestReallocationUsingPOSTBadRequest() *RequestReallocationUsingPOSTBadRequest {
	return &RequestReallocationUsingPOSTBadRequest{}
}

/*
RequestReallocationUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RequestReallocationUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this request reallocation using p o s t bad request response has a 2xx status code
func (o *RequestReallocationUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request reallocation using p o s t bad request response has a 3xx status code
func (o *RequestReallocationUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request reallocation using p o s t bad request response has a 4xx status code
func (o *RequestReallocationUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this request reallocation using p o s t bad request response has a 5xx status code
func (o *RequestReallocationUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this request reallocation using p o s t bad request response a status code equal to that given
func (o *RequestReallocationUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the request reallocation using p o s t bad request response
func (o *RequestReallocationUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *RequestReallocationUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/reallocation][%d] requestReallocationUsingPOSTBadRequest", 400)
}

func (o *RequestReallocationUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/reallocation][%d] requestReallocationUsingPOSTBadRequest", 400)
}

func (o *RequestReallocationUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRequestReallocationUsingPOSTUnauthorized creates a RequestReallocationUsingPOSTUnauthorized with default headers values
func NewRequestReallocationUsingPOSTUnauthorized() *RequestReallocationUsingPOSTUnauthorized {
	return &RequestReallocationUsingPOSTUnauthorized{}
}

/*
RequestReallocationUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RequestReallocationUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this request reallocation using p o s t unauthorized response has a 2xx status code
func (o *RequestReallocationUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request reallocation using p o s t unauthorized response has a 3xx status code
func (o *RequestReallocationUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request reallocation using p o s t unauthorized response has a 4xx status code
func (o *RequestReallocationUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this request reallocation using p o s t unauthorized response has a 5xx status code
func (o *RequestReallocationUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this request reallocation using p o s t unauthorized response a status code equal to that given
func (o *RequestReallocationUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the request reallocation using p o s t unauthorized response
func (o *RequestReallocationUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *RequestReallocationUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/reallocation][%d] requestReallocationUsingPOSTUnauthorized", 401)
}

func (o *RequestReallocationUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/reallocation][%d] requestReallocationUsingPOSTUnauthorized", 401)
}

func (o *RequestReallocationUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRequestReallocationUsingPOSTForbidden creates a RequestReallocationUsingPOSTForbidden with default headers values
func NewRequestReallocationUsingPOSTForbidden() *RequestReallocationUsingPOSTForbidden {
	return &RequestReallocationUsingPOSTForbidden{}
}

/*
RequestReallocationUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RequestReallocationUsingPOSTForbidden struct {
}

// IsSuccess returns true when this request reallocation using p o s t forbidden response has a 2xx status code
func (o *RequestReallocationUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request reallocation using p o s t forbidden response has a 3xx status code
func (o *RequestReallocationUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request reallocation using p o s t forbidden response has a 4xx status code
func (o *RequestReallocationUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this request reallocation using p o s t forbidden response has a 5xx status code
func (o *RequestReallocationUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this request reallocation using p o s t forbidden response a status code equal to that given
func (o *RequestReallocationUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the request reallocation using p o s t forbidden response
func (o *RequestReallocationUsingPOSTForbidden) Code() int {
	return 403
}

func (o *RequestReallocationUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/reallocation][%d] requestReallocationUsingPOSTForbidden", 403)
}

func (o *RequestReallocationUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/reallocation][%d] requestReallocationUsingPOSTForbidden", 403)
}

func (o *RequestReallocationUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRequestReallocationUsingPOSTNotFound creates a RequestReallocationUsingPOSTNotFound with default headers values
func NewRequestReallocationUsingPOSTNotFound() *RequestReallocationUsingPOSTNotFound {
	return &RequestReallocationUsingPOSTNotFound{}
}

/*
RequestReallocationUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RequestReallocationUsingPOSTNotFound struct {
}

// IsSuccess returns true when this request reallocation using p o s t not found response has a 2xx status code
func (o *RequestReallocationUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request reallocation using p o s t not found response has a 3xx status code
func (o *RequestReallocationUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request reallocation using p o s t not found response has a 4xx status code
func (o *RequestReallocationUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this request reallocation using p o s t not found response has a 5xx status code
func (o *RequestReallocationUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this request reallocation using p o s t not found response a status code equal to that given
func (o *RequestReallocationUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the request reallocation using p o s t not found response
func (o *RequestReallocationUsingPOSTNotFound) Code() int {
	return 404
}

func (o *RequestReallocationUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/reallocation][%d] requestReallocationUsingPOSTNotFound", 404)
}

func (o *RequestReallocationUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/reallocation][%d] requestReallocationUsingPOSTNotFound", 404)
}

func (o *RequestReallocationUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRequestReallocationUsingPOSTInternalServerError creates a RequestReallocationUsingPOSTInternalServerError with default headers values
func NewRequestReallocationUsingPOSTInternalServerError() *RequestReallocationUsingPOSTInternalServerError {
	return &RequestReallocationUsingPOSTInternalServerError{}
}

/*
RequestReallocationUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type RequestReallocationUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this request reallocation using p o s t internal server error response has a 2xx status code
func (o *RequestReallocationUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request reallocation using p o s t internal server error response has a 3xx status code
func (o *RequestReallocationUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request reallocation using p o s t internal server error response has a 4xx status code
func (o *RequestReallocationUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this request reallocation using p o s t internal server error response has a 5xx status code
func (o *RequestReallocationUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this request reallocation using p o s t internal server error response a status code equal to that given
func (o *RequestReallocationUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the request reallocation using p o s t internal server error response
func (o *RequestReallocationUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *RequestReallocationUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/reallocation][%d] requestReallocationUsingPOSTInternalServerError", 500)
}

func (o *RequestReallocationUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/reallocation][%d] requestReallocationUsingPOSTInternalServerError", 500)
}

func (o *RequestReallocationUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
