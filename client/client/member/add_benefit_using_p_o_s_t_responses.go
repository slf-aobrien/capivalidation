// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// AddBenefitUsingPOSTReader is a Reader for the AddBenefitUsingPOST structure.
type AddBenefitUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddBenefitUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddBenefitUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewAddBenefitUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddBenefitUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddBenefitUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddBenefitUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddBenefitUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddBenefitUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/member/add/benefit] addBenefitUsingPOST", response, response.Code())
	}
}

// NewAddBenefitUsingPOSTOK creates a AddBenefitUsingPOSTOK with default headers values
func NewAddBenefitUsingPOSTOK() *AddBenefitUsingPOSTOK {
	return &AddBenefitUsingPOSTOK{}
}

/*
AddBenefitUsingPOSTOK describes a response with status code 200, with default header values.

Success
*/
type AddBenefitUsingPOSTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this add benefit using p o s t o k response has a 2xx status code
func (o *AddBenefitUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add benefit using p o s t o k response has a 3xx status code
func (o *AddBenefitUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add benefit using p o s t o k response has a 4xx status code
func (o *AddBenefitUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add benefit using p o s t o k response has a 5xx status code
func (o *AddBenefitUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add benefit using p o s t o k response a status code equal to that given
func (o *AddBenefitUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add benefit using p o s t o k response
func (o *AddBenefitUsingPOSTOK) Code() int {
	return 200
}

func (o *AddBenefitUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/member/add/benefit][%d] addBenefitUsingPOSTOK %s", 200, payload)
}

func (o *AddBenefitUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/member/add/benefit][%d] addBenefitUsingPOSTOK %s", 200, payload)
}

func (o *AddBenefitUsingPOSTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *AddBenefitUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddBenefitUsingPOSTCreated creates a AddBenefitUsingPOSTCreated with default headers values
func NewAddBenefitUsingPOSTCreated() *AddBenefitUsingPOSTCreated {
	return &AddBenefitUsingPOSTCreated{}
}

/*
AddBenefitUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type AddBenefitUsingPOSTCreated struct {
}

// IsSuccess returns true when this add benefit using p o s t created response has a 2xx status code
func (o *AddBenefitUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add benefit using p o s t created response has a 3xx status code
func (o *AddBenefitUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add benefit using p o s t created response has a 4xx status code
func (o *AddBenefitUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add benefit using p o s t created response has a 5xx status code
func (o *AddBenefitUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add benefit using p o s t created response a status code equal to that given
func (o *AddBenefitUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add benefit using p o s t created response
func (o *AddBenefitUsingPOSTCreated) Code() int {
	return 201
}

func (o *AddBenefitUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/add/benefit][%d] addBenefitUsingPOSTCreated", 201)
}

func (o *AddBenefitUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/add/benefit][%d] addBenefitUsingPOSTCreated", 201)
}

func (o *AddBenefitUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddBenefitUsingPOSTBadRequest creates a AddBenefitUsingPOSTBadRequest with default headers values
func NewAddBenefitUsingPOSTBadRequest() *AddBenefitUsingPOSTBadRequest {
	return &AddBenefitUsingPOSTBadRequest{}
}

/*
AddBenefitUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddBenefitUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this add benefit using p o s t bad request response has a 2xx status code
func (o *AddBenefitUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add benefit using p o s t bad request response has a 3xx status code
func (o *AddBenefitUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add benefit using p o s t bad request response has a 4xx status code
func (o *AddBenefitUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add benefit using p o s t bad request response has a 5xx status code
func (o *AddBenefitUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add benefit using p o s t bad request response a status code equal to that given
func (o *AddBenefitUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add benefit using p o s t bad request response
func (o *AddBenefitUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *AddBenefitUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/add/benefit][%d] addBenefitUsingPOSTBadRequest", 400)
}

func (o *AddBenefitUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/add/benefit][%d] addBenefitUsingPOSTBadRequest", 400)
}

func (o *AddBenefitUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddBenefitUsingPOSTUnauthorized creates a AddBenefitUsingPOSTUnauthorized with default headers values
func NewAddBenefitUsingPOSTUnauthorized() *AddBenefitUsingPOSTUnauthorized {
	return &AddBenefitUsingPOSTUnauthorized{}
}

/*
AddBenefitUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddBenefitUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this add benefit using p o s t unauthorized response has a 2xx status code
func (o *AddBenefitUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add benefit using p o s t unauthorized response has a 3xx status code
func (o *AddBenefitUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add benefit using p o s t unauthorized response has a 4xx status code
func (o *AddBenefitUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add benefit using p o s t unauthorized response has a 5xx status code
func (o *AddBenefitUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add benefit using p o s t unauthorized response a status code equal to that given
func (o *AddBenefitUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add benefit using p o s t unauthorized response
func (o *AddBenefitUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *AddBenefitUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/add/benefit][%d] addBenefitUsingPOSTUnauthorized", 401)
}

func (o *AddBenefitUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/add/benefit][%d] addBenefitUsingPOSTUnauthorized", 401)
}

func (o *AddBenefitUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddBenefitUsingPOSTForbidden creates a AddBenefitUsingPOSTForbidden with default headers values
func NewAddBenefitUsingPOSTForbidden() *AddBenefitUsingPOSTForbidden {
	return &AddBenefitUsingPOSTForbidden{}
}

/*
AddBenefitUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddBenefitUsingPOSTForbidden struct {
}

// IsSuccess returns true when this add benefit using p o s t forbidden response has a 2xx status code
func (o *AddBenefitUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add benefit using p o s t forbidden response has a 3xx status code
func (o *AddBenefitUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add benefit using p o s t forbidden response has a 4xx status code
func (o *AddBenefitUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add benefit using p o s t forbidden response has a 5xx status code
func (o *AddBenefitUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add benefit using p o s t forbidden response a status code equal to that given
func (o *AddBenefitUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add benefit using p o s t forbidden response
func (o *AddBenefitUsingPOSTForbidden) Code() int {
	return 403
}

func (o *AddBenefitUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/add/benefit][%d] addBenefitUsingPOSTForbidden", 403)
}

func (o *AddBenefitUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/add/benefit][%d] addBenefitUsingPOSTForbidden", 403)
}

func (o *AddBenefitUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddBenefitUsingPOSTNotFound creates a AddBenefitUsingPOSTNotFound with default headers values
func NewAddBenefitUsingPOSTNotFound() *AddBenefitUsingPOSTNotFound {
	return &AddBenefitUsingPOSTNotFound{}
}

/*
AddBenefitUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddBenefitUsingPOSTNotFound struct {
}

// IsSuccess returns true when this add benefit using p o s t not found response has a 2xx status code
func (o *AddBenefitUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add benefit using p o s t not found response has a 3xx status code
func (o *AddBenefitUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add benefit using p o s t not found response has a 4xx status code
func (o *AddBenefitUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add benefit using p o s t not found response has a 5xx status code
func (o *AddBenefitUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add benefit using p o s t not found response a status code equal to that given
func (o *AddBenefitUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add benefit using p o s t not found response
func (o *AddBenefitUsingPOSTNotFound) Code() int {
	return 404
}

func (o *AddBenefitUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/add/benefit][%d] addBenefitUsingPOSTNotFound", 404)
}

func (o *AddBenefitUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/add/benefit][%d] addBenefitUsingPOSTNotFound", 404)
}

func (o *AddBenefitUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddBenefitUsingPOSTInternalServerError creates a AddBenefitUsingPOSTInternalServerError with default headers values
func NewAddBenefitUsingPOSTInternalServerError() *AddBenefitUsingPOSTInternalServerError {
	return &AddBenefitUsingPOSTInternalServerError{}
}

/*
AddBenefitUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AddBenefitUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this add benefit using p o s t internal server error response has a 2xx status code
func (o *AddBenefitUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add benefit using p o s t internal server error response has a 3xx status code
func (o *AddBenefitUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add benefit using p o s t internal server error response has a 4xx status code
func (o *AddBenefitUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add benefit using p o s t internal server error response has a 5xx status code
func (o *AddBenefitUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add benefit using p o s t internal server error response a status code equal to that given
func (o *AddBenefitUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add benefit using p o s t internal server error response
func (o *AddBenefitUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *AddBenefitUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/add/benefit][%d] addBenefitUsingPOSTInternalServerError", 500)
}

func (o *AddBenefitUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/add/benefit][%d] addBenefitUsingPOSTInternalServerError", 500)
}

func (o *AddBenefitUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
