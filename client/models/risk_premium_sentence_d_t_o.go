// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RiskPremiumSentenceDTO RiskPremiumSentenceDTO
//
// swagger:model RiskPremiumSentenceDTO
type RiskPremiumSentenceDTO struct {

	// basis amount
	BasisAmount string `json:"basisAmount,omitempty"`

	// basis code
	BasisCode string `json:"basisCode,omitempty"`

	// basis multiplier
	BasisMultiplier string `json:"basisMultiplier,omitempty"`

	// clear code
	ClearCode string `json:"clearCode,omitempty"`

	// effective date
	EffectiveDate string `json:"effectiveDate,omitempty"`

	// excess coverage code
	ExcessCoverageCode string `json:"excessCoverageCode,omitempty"`

	// expiration date
	ExpirationDate string `json:"expirationDate,omitempty"`

	// free cover code
	FreeCoverCode string `json:"freeCoverCode,omitempty"`

	// one off processing code
	OneOffProcessingCode string `json:"oneOffProcessingCode,omitempty"`

	// operation code
	OperationCode string `json:"operationCode,omitempty"`

	// rate scale
	RateScale *RateScaleDTO `json:"rateScale,omitempty"`

	// reason
	Reason string `json:"reason,omitempty"`

	// results basis name
	ResultsBasisName string `json:"resultsBasisName,omitempty"`

	// results hold name
	ResultsHoldName string `json:"resultsHoldName,omitempty"`

	// results scale Id
	ResultsScaleID string `json:"resultsScaleId,omitempty"`

	// sequence number
	SequenceNumber string `json:"sequenceNumber,omitempty"`

	// transaction reference
	TransactionReference string `json:"transactionReference,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this risk premium sentence d t o
func (m *RiskPremiumSentenceDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRateScale(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RiskPremiumSentenceDTO) validateRateScale(formats strfmt.Registry) error {
	if swag.IsZero(m.RateScale) { // not required
		return nil
	}

	if m.RateScale != nil {
		if err := m.RateScale.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("rateScale")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("rateScale")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this risk premium sentence d t o based on the context it is used
func (m *RiskPremiumSentenceDTO) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateRateScale(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RiskPremiumSentenceDTO) contextValidateRateScale(ctx context.Context, formats strfmt.Registry) error {

	if m.RateScale != nil {

		if swag.IsZero(m.RateScale) { // not required
			return nil
		}

		if err := m.RateScale.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("rateScale")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("rateScale")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RiskPremiumSentenceDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RiskPremiumSentenceDTO) UnmarshalBinary(b []byte) error {
	var res RiskPremiumSentenceDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
