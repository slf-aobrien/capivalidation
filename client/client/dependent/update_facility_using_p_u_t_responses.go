// Code generated by go-swagger; DO NOT EDIT.

package dependent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateFacilityUsingPUTReader is a Reader for the UpdateFacilityUsingPUT structure.
type UpdateFacilityUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateFacilityUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateFacilityUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateFacilityUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateFacilityUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateFacilityUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateFacilityUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateFacilityUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateFacilityUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/dependent/update/facility] updateFacilityUsingPUT", response, response.Code())
	}
}

// NewUpdateFacilityUsingPUTOK creates a UpdateFacilityUsingPUTOK with default headers values
func NewUpdateFacilityUsingPUTOK() *UpdateFacilityUsingPUTOK {
	return &UpdateFacilityUsingPUTOK{}
}

/*
UpdateFacilityUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateFacilityUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update facility using p u t o k response has a 2xx status code
func (o *UpdateFacilityUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update facility using p u t o k response has a 3xx status code
func (o *UpdateFacilityUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update facility using p u t o k response has a 4xx status code
func (o *UpdateFacilityUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update facility using p u t o k response has a 5xx status code
func (o *UpdateFacilityUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update facility using p u t o k response a status code equal to that given
func (o *UpdateFacilityUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update facility using p u t o k response
func (o *UpdateFacilityUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateFacilityUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/facility][%d] updateFacilityUsingPUTOK %s", 200, payload)
}

func (o *UpdateFacilityUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/facility][%d] updateFacilityUsingPUTOK %s", 200, payload)
}

func (o *UpdateFacilityUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateFacilityUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateFacilityUsingPUTCreated creates a UpdateFacilityUsingPUTCreated with default headers values
func NewUpdateFacilityUsingPUTCreated() *UpdateFacilityUsingPUTCreated {
	return &UpdateFacilityUsingPUTCreated{}
}

/*
UpdateFacilityUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateFacilityUsingPUTCreated struct {
}

// IsSuccess returns true when this update facility using p u t created response has a 2xx status code
func (o *UpdateFacilityUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update facility using p u t created response has a 3xx status code
func (o *UpdateFacilityUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update facility using p u t created response has a 4xx status code
func (o *UpdateFacilityUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update facility using p u t created response has a 5xx status code
func (o *UpdateFacilityUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update facility using p u t created response a status code equal to that given
func (o *UpdateFacilityUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update facility using p u t created response
func (o *UpdateFacilityUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateFacilityUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/facility][%d] updateFacilityUsingPUTCreated", 201)
}

func (o *UpdateFacilityUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/facility][%d] updateFacilityUsingPUTCreated", 201)
}

func (o *UpdateFacilityUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateFacilityUsingPUTBadRequest creates a UpdateFacilityUsingPUTBadRequest with default headers values
func NewUpdateFacilityUsingPUTBadRequest() *UpdateFacilityUsingPUTBadRequest {
	return &UpdateFacilityUsingPUTBadRequest{}
}

/*
UpdateFacilityUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateFacilityUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update facility using p u t bad request response has a 2xx status code
func (o *UpdateFacilityUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update facility using p u t bad request response has a 3xx status code
func (o *UpdateFacilityUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update facility using p u t bad request response has a 4xx status code
func (o *UpdateFacilityUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update facility using p u t bad request response has a 5xx status code
func (o *UpdateFacilityUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update facility using p u t bad request response a status code equal to that given
func (o *UpdateFacilityUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update facility using p u t bad request response
func (o *UpdateFacilityUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateFacilityUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/facility][%d] updateFacilityUsingPUTBadRequest", 400)
}

func (o *UpdateFacilityUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/facility][%d] updateFacilityUsingPUTBadRequest", 400)
}

func (o *UpdateFacilityUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateFacilityUsingPUTUnauthorized creates a UpdateFacilityUsingPUTUnauthorized with default headers values
func NewUpdateFacilityUsingPUTUnauthorized() *UpdateFacilityUsingPUTUnauthorized {
	return &UpdateFacilityUsingPUTUnauthorized{}
}

/*
UpdateFacilityUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateFacilityUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update facility using p u t unauthorized response has a 2xx status code
func (o *UpdateFacilityUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update facility using p u t unauthorized response has a 3xx status code
func (o *UpdateFacilityUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update facility using p u t unauthorized response has a 4xx status code
func (o *UpdateFacilityUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update facility using p u t unauthorized response has a 5xx status code
func (o *UpdateFacilityUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update facility using p u t unauthorized response a status code equal to that given
func (o *UpdateFacilityUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update facility using p u t unauthorized response
func (o *UpdateFacilityUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateFacilityUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/facility][%d] updateFacilityUsingPUTUnauthorized", 401)
}

func (o *UpdateFacilityUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/facility][%d] updateFacilityUsingPUTUnauthorized", 401)
}

func (o *UpdateFacilityUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateFacilityUsingPUTForbidden creates a UpdateFacilityUsingPUTForbidden with default headers values
func NewUpdateFacilityUsingPUTForbidden() *UpdateFacilityUsingPUTForbidden {
	return &UpdateFacilityUsingPUTForbidden{}
}

/*
UpdateFacilityUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateFacilityUsingPUTForbidden struct {
}

// IsSuccess returns true when this update facility using p u t forbidden response has a 2xx status code
func (o *UpdateFacilityUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update facility using p u t forbidden response has a 3xx status code
func (o *UpdateFacilityUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update facility using p u t forbidden response has a 4xx status code
func (o *UpdateFacilityUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update facility using p u t forbidden response has a 5xx status code
func (o *UpdateFacilityUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update facility using p u t forbidden response a status code equal to that given
func (o *UpdateFacilityUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update facility using p u t forbidden response
func (o *UpdateFacilityUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateFacilityUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/facility][%d] updateFacilityUsingPUTForbidden", 403)
}

func (o *UpdateFacilityUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/facility][%d] updateFacilityUsingPUTForbidden", 403)
}

func (o *UpdateFacilityUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateFacilityUsingPUTNotFound creates a UpdateFacilityUsingPUTNotFound with default headers values
func NewUpdateFacilityUsingPUTNotFound() *UpdateFacilityUsingPUTNotFound {
	return &UpdateFacilityUsingPUTNotFound{}
}

/*
UpdateFacilityUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateFacilityUsingPUTNotFound struct {
}

// IsSuccess returns true when this update facility using p u t not found response has a 2xx status code
func (o *UpdateFacilityUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update facility using p u t not found response has a 3xx status code
func (o *UpdateFacilityUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update facility using p u t not found response has a 4xx status code
func (o *UpdateFacilityUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update facility using p u t not found response has a 5xx status code
func (o *UpdateFacilityUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update facility using p u t not found response a status code equal to that given
func (o *UpdateFacilityUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update facility using p u t not found response
func (o *UpdateFacilityUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateFacilityUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/facility][%d] updateFacilityUsingPUTNotFound", 404)
}

func (o *UpdateFacilityUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/facility][%d] updateFacilityUsingPUTNotFound", 404)
}

func (o *UpdateFacilityUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateFacilityUsingPUTInternalServerError creates a UpdateFacilityUsingPUTInternalServerError with default headers values
func NewUpdateFacilityUsingPUTInternalServerError() *UpdateFacilityUsingPUTInternalServerError {
	return &UpdateFacilityUsingPUTInternalServerError{}
}

/*
UpdateFacilityUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateFacilityUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update facility using p u t internal server error response has a 2xx status code
func (o *UpdateFacilityUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update facility using p u t internal server error response has a 3xx status code
func (o *UpdateFacilityUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update facility using p u t internal server error response has a 4xx status code
func (o *UpdateFacilityUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update facility using p u t internal server error response has a 5xx status code
func (o *UpdateFacilityUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update facility using p u t internal server error response a status code equal to that given
func (o *UpdateFacilityUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update facility using p u t internal server error response
func (o *UpdateFacilityUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateFacilityUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/facility][%d] updateFacilityUsingPUTInternalServerError", 500)
}

func (o *UpdateFacilityUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/facility][%d] updateFacilityUsingPUTInternalServerError", 500)
}

func (o *UpdateFacilityUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
