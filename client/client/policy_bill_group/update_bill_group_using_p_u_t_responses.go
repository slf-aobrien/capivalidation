// Code generated by go-swagger; DO NOT EDIT.

package policy_bill_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateBillGroupUsingPUTReader is a Reader for the UpdateBillGroupUsingPUT structure.
type UpdateBillGroupUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBillGroupUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateBillGroupUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateBillGroupUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateBillGroupUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateBillGroupUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateBillGroupUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateBillGroupUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateBillGroupUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/policyBillGroup/updateBillGroup] updateBillGroupUsingPUT", response, response.Code())
	}
}

// NewUpdateBillGroupUsingPUTOK creates a UpdateBillGroupUsingPUTOK with default headers values
func NewUpdateBillGroupUsingPUTOK() *UpdateBillGroupUsingPUTOK {
	return &UpdateBillGroupUsingPUTOK{}
}

/*
UpdateBillGroupUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateBillGroupUsingPUTOK struct {
	Payload *models.ResponseWrapperBillGroupDTO
}

// IsSuccess returns true when this update bill group using p u t o k response has a 2xx status code
func (o *UpdateBillGroupUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update bill group using p u t o k response has a 3xx status code
func (o *UpdateBillGroupUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bill group using p u t o k response has a 4xx status code
func (o *UpdateBillGroupUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update bill group using p u t o k response has a 5xx status code
func (o *UpdateBillGroupUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update bill group using p u t o k response a status code equal to that given
func (o *UpdateBillGroupUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update bill group using p u t o k response
func (o *UpdateBillGroupUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateBillGroupUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policyBillGroup/updateBillGroup][%d] updateBillGroupUsingPUTOK %s", 200, payload)
}

func (o *UpdateBillGroupUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policyBillGroup/updateBillGroup][%d] updateBillGroupUsingPUTOK %s", 200, payload)
}

func (o *UpdateBillGroupUsingPUTOK) GetPayload() *models.ResponseWrapperBillGroupDTO {
	return o.Payload
}

func (o *UpdateBillGroupUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBillGroupDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBillGroupUsingPUTCreated creates a UpdateBillGroupUsingPUTCreated with default headers values
func NewUpdateBillGroupUsingPUTCreated() *UpdateBillGroupUsingPUTCreated {
	return &UpdateBillGroupUsingPUTCreated{}
}

/*
UpdateBillGroupUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateBillGroupUsingPUTCreated struct {
}

// IsSuccess returns true when this update bill group using p u t created response has a 2xx status code
func (o *UpdateBillGroupUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update bill group using p u t created response has a 3xx status code
func (o *UpdateBillGroupUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bill group using p u t created response has a 4xx status code
func (o *UpdateBillGroupUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update bill group using p u t created response has a 5xx status code
func (o *UpdateBillGroupUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update bill group using p u t created response a status code equal to that given
func (o *UpdateBillGroupUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update bill group using p u t created response
func (o *UpdateBillGroupUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateBillGroupUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policyBillGroup/updateBillGroup][%d] updateBillGroupUsingPUTCreated", 201)
}

func (o *UpdateBillGroupUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policyBillGroup/updateBillGroup][%d] updateBillGroupUsingPUTCreated", 201)
}

func (o *UpdateBillGroupUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBillGroupUsingPUTBadRequest creates a UpdateBillGroupUsingPUTBadRequest with default headers values
func NewUpdateBillGroupUsingPUTBadRequest() *UpdateBillGroupUsingPUTBadRequest {
	return &UpdateBillGroupUsingPUTBadRequest{}
}

/*
UpdateBillGroupUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateBillGroupUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update bill group using p u t bad request response has a 2xx status code
func (o *UpdateBillGroupUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update bill group using p u t bad request response has a 3xx status code
func (o *UpdateBillGroupUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bill group using p u t bad request response has a 4xx status code
func (o *UpdateBillGroupUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update bill group using p u t bad request response has a 5xx status code
func (o *UpdateBillGroupUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update bill group using p u t bad request response a status code equal to that given
func (o *UpdateBillGroupUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update bill group using p u t bad request response
func (o *UpdateBillGroupUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateBillGroupUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policyBillGroup/updateBillGroup][%d] updateBillGroupUsingPUTBadRequest", 400)
}

func (o *UpdateBillGroupUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policyBillGroup/updateBillGroup][%d] updateBillGroupUsingPUTBadRequest", 400)
}

func (o *UpdateBillGroupUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBillGroupUsingPUTUnauthorized creates a UpdateBillGroupUsingPUTUnauthorized with default headers values
func NewUpdateBillGroupUsingPUTUnauthorized() *UpdateBillGroupUsingPUTUnauthorized {
	return &UpdateBillGroupUsingPUTUnauthorized{}
}

/*
UpdateBillGroupUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateBillGroupUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update bill group using p u t unauthorized response has a 2xx status code
func (o *UpdateBillGroupUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update bill group using p u t unauthorized response has a 3xx status code
func (o *UpdateBillGroupUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bill group using p u t unauthorized response has a 4xx status code
func (o *UpdateBillGroupUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update bill group using p u t unauthorized response has a 5xx status code
func (o *UpdateBillGroupUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update bill group using p u t unauthorized response a status code equal to that given
func (o *UpdateBillGroupUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update bill group using p u t unauthorized response
func (o *UpdateBillGroupUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateBillGroupUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policyBillGroup/updateBillGroup][%d] updateBillGroupUsingPUTUnauthorized", 401)
}

func (o *UpdateBillGroupUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policyBillGroup/updateBillGroup][%d] updateBillGroupUsingPUTUnauthorized", 401)
}

func (o *UpdateBillGroupUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBillGroupUsingPUTForbidden creates a UpdateBillGroupUsingPUTForbidden with default headers values
func NewUpdateBillGroupUsingPUTForbidden() *UpdateBillGroupUsingPUTForbidden {
	return &UpdateBillGroupUsingPUTForbidden{}
}

/*
UpdateBillGroupUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateBillGroupUsingPUTForbidden struct {
}

// IsSuccess returns true when this update bill group using p u t forbidden response has a 2xx status code
func (o *UpdateBillGroupUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update bill group using p u t forbidden response has a 3xx status code
func (o *UpdateBillGroupUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bill group using p u t forbidden response has a 4xx status code
func (o *UpdateBillGroupUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update bill group using p u t forbidden response has a 5xx status code
func (o *UpdateBillGroupUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update bill group using p u t forbidden response a status code equal to that given
func (o *UpdateBillGroupUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update bill group using p u t forbidden response
func (o *UpdateBillGroupUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateBillGroupUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policyBillGroup/updateBillGroup][%d] updateBillGroupUsingPUTForbidden", 403)
}

func (o *UpdateBillGroupUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policyBillGroup/updateBillGroup][%d] updateBillGroupUsingPUTForbidden", 403)
}

func (o *UpdateBillGroupUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBillGroupUsingPUTNotFound creates a UpdateBillGroupUsingPUTNotFound with default headers values
func NewUpdateBillGroupUsingPUTNotFound() *UpdateBillGroupUsingPUTNotFound {
	return &UpdateBillGroupUsingPUTNotFound{}
}

/*
UpdateBillGroupUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateBillGroupUsingPUTNotFound struct {
}

// IsSuccess returns true when this update bill group using p u t not found response has a 2xx status code
func (o *UpdateBillGroupUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update bill group using p u t not found response has a 3xx status code
func (o *UpdateBillGroupUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bill group using p u t not found response has a 4xx status code
func (o *UpdateBillGroupUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update bill group using p u t not found response has a 5xx status code
func (o *UpdateBillGroupUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update bill group using p u t not found response a status code equal to that given
func (o *UpdateBillGroupUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update bill group using p u t not found response
func (o *UpdateBillGroupUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateBillGroupUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policyBillGroup/updateBillGroup][%d] updateBillGroupUsingPUTNotFound", 404)
}

func (o *UpdateBillGroupUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policyBillGroup/updateBillGroup][%d] updateBillGroupUsingPUTNotFound", 404)
}

func (o *UpdateBillGroupUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBillGroupUsingPUTInternalServerError creates a UpdateBillGroupUsingPUTInternalServerError with default headers values
func NewUpdateBillGroupUsingPUTInternalServerError() *UpdateBillGroupUsingPUTInternalServerError {
	return &UpdateBillGroupUsingPUTInternalServerError{}
}

/*
UpdateBillGroupUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateBillGroupUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update bill group using p u t internal server error response has a 2xx status code
func (o *UpdateBillGroupUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update bill group using p u t internal server error response has a 3xx status code
func (o *UpdateBillGroupUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bill group using p u t internal server error response has a 4xx status code
func (o *UpdateBillGroupUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update bill group using p u t internal server error response has a 5xx status code
func (o *UpdateBillGroupUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update bill group using p u t internal server error response a status code equal to that given
func (o *UpdateBillGroupUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update bill group using p u t internal server error response
func (o *UpdateBillGroupUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateBillGroupUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policyBillGroup/updateBillGroup][%d] updateBillGroupUsingPUTInternalServerError", 500)
}

func (o *UpdateBillGroupUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policyBillGroup/updateBillGroup][%d] updateBillGroupUsingPUTInternalServerError", 500)
}

func (o *UpdateBillGroupUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
