// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetBenefitOptionListAtPolicyUsingGETReader is a Reader for the GetBenefitOptionListAtPolicyUsingGET structure.
type GetBenefitOptionListAtPolicyUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBenefitOptionListAtPolicyUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBenefitOptionListAtPolicyUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBenefitOptionListAtPolicyUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBenefitOptionListAtPolicyUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBenefitOptionListAtPolicyUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBenefitOptionListAtPolicyUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBenefitOptionListAtPolicyUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/policy/benefitOptionListAtPolicy] getBenefitOptionListAtPolicyUsingGET", response, response.Code())
	}
}

// NewGetBenefitOptionListAtPolicyUsingGETOK creates a GetBenefitOptionListAtPolicyUsingGETOK with default headers values
func NewGetBenefitOptionListAtPolicyUsingGETOK() *GetBenefitOptionListAtPolicyUsingGETOK {
	return &GetBenefitOptionListAtPolicyUsingGETOK{}
}

/*
GetBenefitOptionListAtPolicyUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetBenefitOptionListAtPolicyUsingGETOK struct {
	Payload *models.ResponseWrapperListMemberGroupDTO
}

// IsSuccess returns true when this get benefit option list at policy using g e t o k response has a 2xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get benefit option list at policy using g e t o k response has a 3xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit option list at policy using g e t o k response has a 4xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get benefit option list at policy using g e t o k response has a 5xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit option list at policy using g e t o k response a status code equal to that given
func (o *GetBenefitOptionListAtPolicyUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get benefit option list at policy using g e t o k response
func (o *GetBenefitOptionListAtPolicyUsingGETOK) Code() int {
	return 200
}

func (o *GetBenefitOptionListAtPolicyUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionListAtPolicy][%d] getBenefitOptionListAtPolicyUsingGETOK %s", 200, payload)
}

func (o *GetBenefitOptionListAtPolicyUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionListAtPolicy][%d] getBenefitOptionListAtPolicyUsingGETOK %s", 200, payload)
}

func (o *GetBenefitOptionListAtPolicyUsingGETOK) GetPayload() *models.ResponseWrapperListMemberGroupDTO {
	return o.Payload
}

func (o *GetBenefitOptionListAtPolicyUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperListMemberGroupDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBenefitOptionListAtPolicyUsingGETBadRequest creates a GetBenefitOptionListAtPolicyUsingGETBadRequest with default headers values
func NewGetBenefitOptionListAtPolicyUsingGETBadRequest() *GetBenefitOptionListAtPolicyUsingGETBadRequest {
	return &GetBenefitOptionListAtPolicyUsingGETBadRequest{}
}

/*
GetBenefitOptionListAtPolicyUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetBenefitOptionListAtPolicyUsingGETBadRequest struct {
}

// IsSuccess returns true when this get benefit option list at policy using g e t bad request response has a 2xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit option list at policy using g e t bad request response has a 3xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit option list at policy using g e t bad request response has a 4xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get benefit option list at policy using g e t bad request response has a 5xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit option list at policy using g e t bad request response a status code equal to that given
func (o *GetBenefitOptionListAtPolicyUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get benefit option list at policy using g e t bad request response
func (o *GetBenefitOptionListAtPolicyUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetBenefitOptionListAtPolicyUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionListAtPolicy][%d] getBenefitOptionListAtPolicyUsingGETBadRequest", 400)
}

func (o *GetBenefitOptionListAtPolicyUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionListAtPolicy][%d] getBenefitOptionListAtPolicyUsingGETBadRequest", 400)
}

func (o *GetBenefitOptionListAtPolicyUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBenefitOptionListAtPolicyUsingGETUnauthorized creates a GetBenefitOptionListAtPolicyUsingGETUnauthorized with default headers values
func NewGetBenefitOptionListAtPolicyUsingGETUnauthorized() *GetBenefitOptionListAtPolicyUsingGETUnauthorized {
	return &GetBenefitOptionListAtPolicyUsingGETUnauthorized{}
}

/*
GetBenefitOptionListAtPolicyUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetBenefitOptionListAtPolicyUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get benefit option list at policy using g e t unauthorized response has a 2xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit option list at policy using g e t unauthorized response has a 3xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit option list at policy using g e t unauthorized response has a 4xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get benefit option list at policy using g e t unauthorized response has a 5xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit option list at policy using g e t unauthorized response a status code equal to that given
func (o *GetBenefitOptionListAtPolicyUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get benefit option list at policy using g e t unauthorized response
func (o *GetBenefitOptionListAtPolicyUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetBenefitOptionListAtPolicyUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionListAtPolicy][%d] getBenefitOptionListAtPolicyUsingGETUnauthorized", 401)
}

func (o *GetBenefitOptionListAtPolicyUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionListAtPolicy][%d] getBenefitOptionListAtPolicyUsingGETUnauthorized", 401)
}

func (o *GetBenefitOptionListAtPolicyUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBenefitOptionListAtPolicyUsingGETForbidden creates a GetBenefitOptionListAtPolicyUsingGETForbidden with default headers values
func NewGetBenefitOptionListAtPolicyUsingGETForbidden() *GetBenefitOptionListAtPolicyUsingGETForbidden {
	return &GetBenefitOptionListAtPolicyUsingGETForbidden{}
}

/*
GetBenefitOptionListAtPolicyUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBenefitOptionListAtPolicyUsingGETForbidden struct {
}

// IsSuccess returns true when this get benefit option list at policy using g e t forbidden response has a 2xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit option list at policy using g e t forbidden response has a 3xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit option list at policy using g e t forbidden response has a 4xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get benefit option list at policy using g e t forbidden response has a 5xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit option list at policy using g e t forbidden response a status code equal to that given
func (o *GetBenefitOptionListAtPolicyUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get benefit option list at policy using g e t forbidden response
func (o *GetBenefitOptionListAtPolicyUsingGETForbidden) Code() int {
	return 403
}

func (o *GetBenefitOptionListAtPolicyUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionListAtPolicy][%d] getBenefitOptionListAtPolicyUsingGETForbidden", 403)
}

func (o *GetBenefitOptionListAtPolicyUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionListAtPolicy][%d] getBenefitOptionListAtPolicyUsingGETForbidden", 403)
}

func (o *GetBenefitOptionListAtPolicyUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBenefitOptionListAtPolicyUsingGETNotFound creates a GetBenefitOptionListAtPolicyUsingGETNotFound with default headers values
func NewGetBenefitOptionListAtPolicyUsingGETNotFound() *GetBenefitOptionListAtPolicyUsingGETNotFound {
	return &GetBenefitOptionListAtPolicyUsingGETNotFound{}
}

/*
GetBenefitOptionListAtPolicyUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetBenefitOptionListAtPolicyUsingGETNotFound struct {
}

// IsSuccess returns true when this get benefit option list at policy using g e t not found response has a 2xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit option list at policy using g e t not found response has a 3xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit option list at policy using g e t not found response has a 4xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get benefit option list at policy using g e t not found response has a 5xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit option list at policy using g e t not found response a status code equal to that given
func (o *GetBenefitOptionListAtPolicyUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get benefit option list at policy using g e t not found response
func (o *GetBenefitOptionListAtPolicyUsingGETNotFound) Code() int {
	return 404
}

func (o *GetBenefitOptionListAtPolicyUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionListAtPolicy][%d] getBenefitOptionListAtPolicyUsingGETNotFound", 404)
}

func (o *GetBenefitOptionListAtPolicyUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionListAtPolicy][%d] getBenefitOptionListAtPolicyUsingGETNotFound", 404)
}

func (o *GetBenefitOptionListAtPolicyUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBenefitOptionListAtPolicyUsingGETInternalServerError creates a GetBenefitOptionListAtPolicyUsingGETInternalServerError with default headers values
func NewGetBenefitOptionListAtPolicyUsingGETInternalServerError() *GetBenefitOptionListAtPolicyUsingGETInternalServerError {
	return &GetBenefitOptionListAtPolicyUsingGETInternalServerError{}
}

/*
GetBenefitOptionListAtPolicyUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetBenefitOptionListAtPolicyUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get benefit option list at policy using g e t internal server error response has a 2xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit option list at policy using g e t internal server error response has a 3xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit option list at policy using g e t internal server error response has a 4xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get benefit option list at policy using g e t internal server error response has a 5xx status code
func (o *GetBenefitOptionListAtPolicyUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get benefit option list at policy using g e t internal server error response a status code equal to that given
func (o *GetBenefitOptionListAtPolicyUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get benefit option list at policy using g e t internal server error response
func (o *GetBenefitOptionListAtPolicyUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetBenefitOptionListAtPolicyUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionListAtPolicy][%d] getBenefitOptionListAtPolicyUsingGETInternalServerError", 500)
}

func (o *GetBenefitOptionListAtPolicyUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionListAtPolicy][%d] getBenefitOptionListAtPolicyUsingGETInternalServerError", 500)
}

func (o *GetBenefitOptionListAtPolicyUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
