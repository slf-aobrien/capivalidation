// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// AddPolicyBenefitUsingPOSTReader is a Reader for the AddPolicyBenefitUsingPOST structure.
type AddPolicyBenefitUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddPolicyBenefitUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddPolicyBenefitUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewAddPolicyBenefitUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddPolicyBenefitUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddPolicyBenefitUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddPolicyBenefitUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddPolicyBenefitUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddPolicyBenefitUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/policy/policyBenefit] addPolicyBenefitUsingPOST", response, response.Code())
	}
}

// NewAddPolicyBenefitUsingPOSTOK creates a AddPolicyBenefitUsingPOSTOK with default headers values
func NewAddPolicyBenefitUsingPOSTOK() *AddPolicyBenefitUsingPOSTOK {
	return &AddPolicyBenefitUsingPOSTOK{}
}

/*
AddPolicyBenefitUsingPOSTOK describes a response with status code 200, with default header values.

Success
*/
type AddPolicyBenefitUsingPOSTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this add policy benefit using p o s t o k response has a 2xx status code
func (o *AddPolicyBenefitUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add policy benefit using p o s t o k response has a 3xx status code
func (o *AddPolicyBenefitUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add policy benefit using p o s t o k response has a 4xx status code
func (o *AddPolicyBenefitUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add policy benefit using p o s t o k response has a 5xx status code
func (o *AddPolicyBenefitUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add policy benefit using p o s t o k response a status code equal to that given
func (o *AddPolicyBenefitUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add policy benefit using p o s t o k response
func (o *AddPolicyBenefitUsingPOSTOK) Code() int {
	return 200
}

func (o *AddPolicyBenefitUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/policyBenefit][%d] addPolicyBenefitUsingPOSTOK %s", 200, payload)
}

func (o *AddPolicyBenefitUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/policyBenefit][%d] addPolicyBenefitUsingPOSTOK %s", 200, payload)
}

func (o *AddPolicyBenefitUsingPOSTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *AddPolicyBenefitUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddPolicyBenefitUsingPOSTCreated creates a AddPolicyBenefitUsingPOSTCreated with default headers values
func NewAddPolicyBenefitUsingPOSTCreated() *AddPolicyBenefitUsingPOSTCreated {
	return &AddPolicyBenefitUsingPOSTCreated{}
}

/*
AddPolicyBenefitUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type AddPolicyBenefitUsingPOSTCreated struct {
}

// IsSuccess returns true when this add policy benefit using p o s t created response has a 2xx status code
func (o *AddPolicyBenefitUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add policy benefit using p o s t created response has a 3xx status code
func (o *AddPolicyBenefitUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add policy benefit using p o s t created response has a 4xx status code
func (o *AddPolicyBenefitUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add policy benefit using p o s t created response has a 5xx status code
func (o *AddPolicyBenefitUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add policy benefit using p o s t created response a status code equal to that given
func (o *AddPolicyBenefitUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add policy benefit using p o s t created response
func (o *AddPolicyBenefitUsingPOSTCreated) Code() int {
	return 201
}

func (o *AddPolicyBenefitUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/policyBenefit][%d] addPolicyBenefitUsingPOSTCreated", 201)
}

func (o *AddPolicyBenefitUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/policyBenefit][%d] addPolicyBenefitUsingPOSTCreated", 201)
}

func (o *AddPolicyBenefitUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddPolicyBenefitUsingPOSTBadRequest creates a AddPolicyBenefitUsingPOSTBadRequest with default headers values
func NewAddPolicyBenefitUsingPOSTBadRequest() *AddPolicyBenefitUsingPOSTBadRequest {
	return &AddPolicyBenefitUsingPOSTBadRequest{}
}

/*
AddPolicyBenefitUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddPolicyBenefitUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this add policy benefit using p o s t bad request response has a 2xx status code
func (o *AddPolicyBenefitUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add policy benefit using p o s t bad request response has a 3xx status code
func (o *AddPolicyBenefitUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add policy benefit using p o s t bad request response has a 4xx status code
func (o *AddPolicyBenefitUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add policy benefit using p o s t bad request response has a 5xx status code
func (o *AddPolicyBenefitUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add policy benefit using p o s t bad request response a status code equal to that given
func (o *AddPolicyBenefitUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add policy benefit using p o s t bad request response
func (o *AddPolicyBenefitUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *AddPolicyBenefitUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/policyBenefit][%d] addPolicyBenefitUsingPOSTBadRequest", 400)
}

func (o *AddPolicyBenefitUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/policyBenefit][%d] addPolicyBenefitUsingPOSTBadRequest", 400)
}

func (o *AddPolicyBenefitUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddPolicyBenefitUsingPOSTUnauthorized creates a AddPolicyBenefitUsingPOSTUnauthorized with default headers values
func NewAddPolicyBenefitUsingPOSTUnauthorized() *AddPolicyBenefitUsingPOSTUnauthorized {
	return &AddPolicyBenefitUsingPOSTUnauthorized{}
}

/*
AddPolicyBenefitUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddPolicyBenefitUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this add policy benefit using p o s t unauthorized response has a 2xx status code
func (o *AddPolicyBenefitUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add policy benefit using p o s t unauthorized response has a 3xx status code
func (o *AddPolicyBenefitUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add policy benefit using p o s t unauthorized response has a 4xx status code
func (o *AddPolicyBenefitUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add policy benefit using p o s t unauthorized response has a 5xx status code
func (o *AddPolicyBenefitUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add policy benefit using p o s t unauthorized response a status code equal to that given
func (o *AddPolicyBenefitUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add policy benefit using p o s t unauthorized response
func (o *AddPolicyBenefitUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *AddPolicyBenefitUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/policyBenefit][%d] addPolicyBenefitUsingPOSTUnauthorized", 401)
}

func (o *AddPolicyBenefitUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/policyBenefit][%d] addPolicyBenefitUsingPOSTUnauthorized", 401)
}

func (o *AddPolicyBenefitUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddPolicyBenefitUsingPOSTForbidden creates a AddPolicyBenefitUsingPOSTForbidden with default headers values
func NewAddPolicyBenefitUsingPOSTForbidden() *AddPolicyBenefitUsingPOSTForbidden {
	return &AddPolicyBenefitUsingPOSTForbidden{}
}

/*
AddPolicyBenefitUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddPolicyBenefitUsingPOSTForbidden struct {
}

// IsSuccess returns true when this add policy benefit using p o s t forbidden response has a 2xx status code
func (o *AddPolicyBenefitUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add policy benefit using p o s t forbidden response has a 3xx status code
func (o *AddPolicyBenefitUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add policy benefit using p o s t forbidden response has a 4xx status code
func (o *AddPolicyBenefitUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add policy benefit using p o s t forbidden response has a 5xx status code
func (o *AddPolicyBenefitUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add policy benefit using p o s t forbidden response a status code equal to that given
func (o *AddPolicyBenefitUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add policy benefit using p o s t forbidden response
func (o *AddPolicyBenefitUsingPOSTForbidden) Code() int {
	return 403
}

func (o *AddPolicyBenefitUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/policyBenefit][%d] addPolicyBenefitUsingPOSTForbidden", 403)
}

func (o *AddPolicyBenefitUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/policyBenefit][%d] addPolicyBenefitUsingPOSTForbidden", 403)
}

func (o *AddPolicyBenefitUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddPolicyBenefitUsingPOSTNotFound creates a AddPolicyBenefitUsingPOSTNotFound with default headers values
func NewAddPolicyBenefitUsingPOSTNotFound() *AddPolicyBenefitUsingPOSTNotFound {
	return &AddPolicyBenefitUsingPOSTNotFound{}
}

/*
AddPolicyBenefitUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddPolicyBenefitUsingPOSTNotFound struct {
}

// IsSuccess returns true when this add policy benefit using p o s t not found response has a 2xx status code
func (o *AddPolicyBenefitUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add policy benefit using p o s t not found response has a 3xx status code
func (o *AddPolicyBenefitUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add policy benefit using p o s t not found response has a 4xx status code
func (o *AddPolicyBenefitUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add policy benefit using p o s t not found response has a 5xx status code
func (o *AddPolicyBenefitUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add policy benefit using p o s t not found response a status code equal to that given
func (o *AddPolicyBenefitUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add policy benefit using p o s t not found response
func (o *AddPolicyBenefitUsingPOSTNotFound) Code() int {
	return 404
}

func (o *AddPolicyBenefitUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/policyBenefit][%d] addPolicyBenefitUsingPOSTNotFound", 404)
}

func (o *AddPolicyBenefitUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/policyBenefit][%d] addPolicyBenefitUsingPOSTNotFound", 404)
}

func (o *AddPolicyBenefitUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddPolicyBenefitUsingPOSTInternalServerError creates a AddPolicyBenefitUsingPOSTInternalServerError with default headers values
func NewAddPolicyBenefitUsingPOSTInternalServerError() *AddPolicyBenefitUsingPOSTInternalServerError {
	return &AddPolicyBenefitUsingPOSTInternalServerError{}
}

/*
AddPolicyBenefitUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AddPolicyBenefitUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this add policy benefit using p o s t internal server error response has a 2xx status code
func (o *AddPolicyBenefitUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add policy benefit using p o s t internal server error response has a 3xx status code
func (o *AddPolicyBenefitUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add policy benefit using p o s t internal server error response has a 4xx status code
func (o *AddPolicyBenefitUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add policy benefit using p o s t internal server error response has a 5xx status code
func (o *AddPolicyBenefitUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add policy benefit using p o s t internal server error response a status code equal to that given
func (o *AddPolicyBenefitUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add policy benefit using p o s t internal server error response
func (o *AddPolicyBenefitUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *AddPolicyBenefitUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/policyBenefit][%d] addPolicyBenefitUsingPOSTInternalServerError", 500)
}

func (o *AddPolicyBenefitUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/policyBenefit][%d] addPolicyBenefitUsingPOSTInternalServerError", 500)
}

func (o *AddPolicyBenefitUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
