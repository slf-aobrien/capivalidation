// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetBenefitOptionListUsingGETReader is a Reader for the GetBenefitOptionListUsingGET structure.
type GetBenefitOptionListUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBenefitOptionListUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBenefitOptionListUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBenefitOptionListUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBenefitOptionListUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBenefitOptionListUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBenefitOptionListUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBenefitOptionListUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}/{benefitParentDescription}] getBenefitOptionListUsingGET", response, response.Code())
	}
}

// NewGetBenefitOptionListUsingGETOK creates a GetBenefitOptionListUsingGETOK with default headers values
func NewGetBenefitOptionListUsingGETOK() *GetBenefitOptionListUsingGETOK {
	return &GetBenefitOptionListUsingGETOK{}
}

/*
GetBenefitOptionListUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetBenefitOptionListUsingGETOK struct {
	Payload *models.ResponseWrapperOptionChoiceListDTO
}

// IsSuccess returns true when this get benefit option list using g e t o k response has a 2xx status code
func (o *GetBenefitOptionListUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get benefit option list using g e t o k response has a 3xx status code
func (o *GetBenefitOptionListUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit option list using g e t o k response has a 4xx status code
func (o *GetBenefitOptionListUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get benefit option list using g e t o k response has a 5xx status code
func (o *GetBenefitOptionListUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit option list using g e t o k response a status code equal to that given
func (o *GetBenefitOptionListUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get benefit option list using g e t o k response
func (o *GetBenefitOptionListUsingGETOK) Code() int {
	return 200
}

func (o *GetBenefitOptionListUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}/{benefitParentDescription}][%d] getBenefitOptionListUsingGETOK %s", 200, payload)
}

func (o *GetBenefitOptionListUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}/{benefitParentDescription}][%d] getBenefitOptionListUsingGETOK %s", 200, payload)
}

func (o *GetBenefitOptionListUsingGETOK) GetPayload() *models.ResponseWrapperOptionChoiceListDTO {
	return o.Payload
}

func (o *GetBenefitOptionListUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperOptionChoiceListDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBenefitOptionListUsingGETBadRequest creates a GetBenefitOptionListUsingGETBadRequest with default headers values
func NewGetBenefitOptionListUsingGETBadRequest() *GetBenefitOptionListUsingGETBadRequest {
	return &GetBenefitOptionListUsingGETBadRequest{}
}

/*
GetBenefitOptionListUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetBenefitOptionListUsingGETBadRequest struct {
}

// IsSuccess returns true when this get benefit option list using g e t bad request response has a 2xx status code
func (o *GetBenefitOptionListUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit option list using g e t bad request response has a 3xx status code
func (o *GetBenefitOptionListUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit option list using g e t bad request response has a 4xx status code
func (o *GetBenefitOptionListUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get benefit option list using g e t bad request response has a 5xx status code
func (o *GetBenefitOptionListUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit option list using g e t bad request response a status code equal to that given
func (o *GetBenefitOptionListUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get benefit option list using g e t bad request response
func (o *GetBenefitOptionListUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetBenefitOptionListUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}/{benefitParentDescription}][%d] getBenefitOptionListUsingGETBadRequest", 400)
}

func (o *GetBenefitOptionListUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}/{benefitParentDescription}][%d] getBenefitOptionListUsingGETBadRequest", 400)
}

func (o *GetBenefitOptionListUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBenefitOptionListUsingGETUnauthorized creates a GetBenefitOptionListUsingGETUnauthorized with default headers values
func NewGetBenefitOptionListUsingGETUnauthorized() *GetBenefitOptionListUsingGETUnauthorized {
	return &GetBenefitOptionListUsingGETUnauthorized{}
}

/*
GetBenefitOptionListUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetBenefitOptionListUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get benefit option list using g e t unauthorized response has a 2xx status code
func (o *GetBenefitOptionListUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit option list using g e t unauthorized response has a 3xx status code
func (o *GetBenefitOptionListUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit option list using g e t unauthorized response has a 4xx status code
func (o *GetBenefitOptionListUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get benefit option list using g e t unauthorized response has a 5xx status code
func (o *GetBenefitOptionListUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit option list using g e t unauthorized response a status code equal to that given
func (o *GetBenefitOptionListUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get benefit option list using g e t unauthorized response
func (o *GetBenefitOptionListUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetBenefitOptionListUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}/{benefitParentDescription}][%d] getBenefitOptionListUsingGETUnauthorized", 401)
}

func (o *GetBenefitOptionListUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}/{benefitParentDescription}][%d] getBenefitOptionListUsingGETUnauthorized", 401)
}

func (o *GetBenefitOptionListUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBenefitOptionListUsingGETForbidden creates a GetBenefitOptionListUsingGETForbidden with default headers values
func NewGetBenefitOptionListUsingGETForbidden() *GetBenefitOptionListUsingGETForbidden {
	return &GetBenefitOptionListUsingGETForbidden{}
}

/*
GetBenefitOptionListUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBenefitOptionListUsingGETForbidden struct {
}

// IsSuccess returns true when this get benefit option list using g e t forbidden response has a 2xx status code
func (o *GetBenefitOptionListUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit option list using g e t forbidden response has a 3xx status code
func (o *GetBenefitOptionListUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit option list using g e t forbidden response has a 4xx status code
func (o *GetBenefitOptionListUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get benefit option list using g e t forbidden response has a 5xx status code
func (o *GetBenefitOptionListUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit option list using g e t forbidden response a status code equal to that given
func (o *GetBenefitOptionListUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get benefit option list using g e t forbidden response
func (o *GetBenefitOptionListUsingGETForbidden) Code() int {
	return 403
}

func (o *GetBenefitOptionListUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}/{benefitParentDescription}][%d] getBenefitOptionListUsingGETForbidden", 403)
}

func (o *GetBenefitOptionListUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}/{benefitParentDescription}][%d] getBenefitOptionListUsingGETForbidden", 403)
}

func (o *GetBenefitOptionListUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBenefitOptionListUsingGETNotFound creates a GetBenefitOptionListUsingGETNotFound with default headers values
func NewGetBenefitOptionListUsingGETNotFound() *GetBenefitOptionListUsingGETNotFound {
	return &GetBenefitOptionListUsingGETNotFound{}
}

/*
GetBenefitOptionListUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetBenefitOptionListUsingGETNotFound struct {
}

// IsSuccess returns true when this get benefit option list using g e t not found response has a 2xx status code
func (o *GetBenefitOptionListUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit option list using g e t not found response has a 3xx status code
func (o *GetBenefitOptionListUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit option list using g e t not found response has a 4xx status code
func (o *GetBenefitOptionListUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get benefit option list using g e t not found response has a 5xx status code
func (o *GetBenefitOptionListUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit option list using g e t not found response a status code equal to that given
func (o *GetBenefitOptionListUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get benefit option list using g e t not found response
func (o *GetBenefitOptionListUsingGETNotFound) Code() int {
	return 404
}

func (o *GetBenefitOptionListUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}/{benefitParentDescription}][%d] getBenefitOptionListUsingGETNotFound", 404)
}

func (o *GetBenefitOptionListUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}/{benefitParentDescription}][%d] getBenefitOptionListUsingGETNotFound", 404)
}

func (o *GetBenefitOptionListUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBenefitOptionListUsingGETInternalServerError creates a GetBenefitOptionListUsingGETInternalServerError with default headers values
func NewGetBenefitOptionListUsingGETInternalServerError() *GetBenefitOptionListUsingGETInternalServerError {
	return &GetBenefitOptionListUsingGETInternalServerError{}
}

/*
GetBenefitOptionListUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetBenefitOptionListUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get benefit option list using g e t internal server error response has a 2xx status code
func (o *GetBenefitOptionListUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit option list using g e t internal server error response has a 3xx status code
func (o *GetBenefitOptionListUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit option list using g e t internal server error response has a 4xx status code
func (o *GetBenefitOptionListUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get benefit option list using g e t internal server error response has a 5xx status code
func (o *GetBenefitOptionListUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get benefit option list using g e t internal server error response a status code equal to that given
func (o *GetBenefitOptionListUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get benefit option list using g e t internal server error response
func (o *GetBenefitOptionListUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetBenefitOptionListUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}/{benefitParentDescription}][%d] getBenefitOptionListUsingGETInternalServerError", 500)
}

func (o *GetBenefitOptionListUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitOptionList/{policyNumber}/{memberGroupDescription}/{benefitParentDescription}][%d] getBenefitOptionListUsingGETInternalServerError", 500)
}

func (o *GetBenefitOptionListUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
