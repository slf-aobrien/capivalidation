// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateMemberGenderUsingPUTReader is a Reader for the UpdateMemberGenderUsingPUT structure.
type UpdateMemberGenderUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMemberGenderUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateMemberGenderUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateMemberGenderUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateMemberGenderUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateMemberGenderUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateMemberGenderUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateMemberGenderUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateMemberGenderUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/member/update/gender] updateMemberGenderUsingPUT", response, response.Code())
	}
}

// NewUpdateMemberGenderUsingPUTOK creates a UpdateMemberGenderUsingPUTOK with default headers values
func NewUpdateMemberGenderUsingPUTOK() *UpdateMemberGenderUsingPUTOK {
	return &UpdateMemberGenderUsingPUTOK{}
}

/*
UpdateMemberGenderUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateMemberGenderUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update member gender using p u t o k response has a 2xx status code
func (o *UpdateMemberGenderUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member gender using p u t o k response has a 3xx status code
func (o *UpdateMemberGenderUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member gender using p u t o k response has a 4xx status code
func (o *UpdateMemberGenderUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member gender using p u t o k response has a 5xx status code
func (o *UpdateMemberGenderUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update member gender using p u t o k response a status code equal to that given
func (o *UpdateMemberGenderUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update member gender using p u t o k response
func (o *UpdateMemberGenderUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateMemberGenderUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/gender][%d] updateMemberGenderUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberGenderUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/gender][%d] updateMemberGenderUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberGenderUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateMemberGenderUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMemberGenderUsingPUTCreated creates a UpdateMemberGenderUsingPUTCreated with default headers values
func NewUpdateMemberGenderUsingPUTCreated() *UpdateMemberGenderUsingPUTCreated {
	return &UpdateMemberGenderUsingPUTCreated{}
}

/*
UpdateMemberGenderUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateMemberGenderUsingPUTCreated struct {
}

// IsSuccess returns true when this update member gender using p u t created response has a 2xx status code
func (o *UpdateMemberGenderUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member gender using p u t created response has a 3xx status code
func (o *UpdateMemberGenderUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member gender using p u t created response has a 4xx status code
func (o *UpdateMemberGenderUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member gender using p u t created response has a 5xx status code
func (o *UpdateMemberGenderUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update member gender using p u t created response a status code equal to that given
func (o *UpdateMemberGenderUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update member gender using p u t created response
func (o *UpdateMemberGenderUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateMemberGenderUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/gender][%d] updateMemberGenderUsingPUTCreated", 201)
}

func (o *UpdateMemberGenderUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/gender][%d] updateMemberGenderUsingPUTCreated", 201)
}

func (o *UpdateMemberGenderUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGenderUsingPUTBadRequest creates a UpdateMemberGenderUsingPUTBadRequest with default headers values
func NewUpdateMemberGenderUsingPUTBadRequest() *UpdateMemberGenderUsingPUTBadRequest {
	return &UpdateMemberGenderUsingPUTBadRequest{}
}

/*
UpdateMemberGenderUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateMemberGenderUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update member gender using p u t bad request response has a 2xx status code
func (o *UpdateMemberGenderUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member gender using p u t bad request response has a 3xx status code
func (o *UpdateMemberGenderUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member gender using p u t bad request response has a 4xx status code
func (o *UpdateMemberGenderUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member gender using p u t bad request response has a 5xx status code
func (o *UpdateMemberGenderUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update member gender using p u t bad request response a status code equal to that given
func (o *UpdateMemberGenderUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update member gender using p u t bad request response
func (o *UpdateMemberGenderUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateMemberGenderUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/gender][%d] updateMemberGenderUsingPUTBadRequest", 400)
}

func (o *UpdateMemberGenderUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/gender][%d] updateMemberGenderUsingPUTBadRequest", 400)
}

func (o *UpdateMemberGenderUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGenderUsingPUTUnauthorized creates a UpdateMemberGenderUsingPUTUnauthorized with default headers values
func NewUpdateMemberGenderUsingPUTUnauthorized() *UpdateMemberGenderUsingPUTUnauthorized {
	return &UpdateMemberGenderUsingPUTUnauthorized{}
}

/*
UpdateMemberGenderUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateMemberGenderUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update member gender using p u t unauthorized response has a 2xx status code
func (o *UpdateMemberGenderUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member gender using p u t unauthorized response has a 3xx status code
func (o *UpdateMemberGenderUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member gender using p u t unauthorized response has a 4xx status code
func (o *UpdateMemberGenderUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member gender using p u t unauthorized response has a 5xx status code
func (o *UpdateMemberGenderUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update member gender using p u t unauthorized response a status code equal to that given
func (o *UpdateMemberGenderUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update member gender using p u t unauthorized response
func (o *UpdateMemberGenderUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateMemberGenderUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/gender][%d] updateMemberGenderUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberGenderUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/gender][%d] updateMemberGenderUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberGenderUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGenderUsingPUTForbidden creates a UpdateMemberGenderUsingPUTForbidden with default headers values
func NewUpdateMemberGenderUsingPUTForbidden() *UpdateMemberGenderUsingPUTForbidden {
	return &UpdateMemberGenderUsingPUTForbidden{}
}

/*
UpdateMemberGenderUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateMemberGenderUsingPUTForbidden struct {
}

// IsSuccess returns true when this update member gender using p u t forbidden response has a 2xx status code
func (o *UpdateMemberGenderUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member gender using p u t forbidden response has a 3xx status code
func (o *UpdateMemberGenderUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member gender using p u t forbidden response has a 4xx status code
func (o *UpdateMemberGenderUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member gender using p u t forbidden response has a 5xx status code
func (o *UpdateMemberGenderUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update member gender using p u t forbidden response a status code equal to that given
func (o *UpdateMemberGenderUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update member gender using p u t forbidden response
func (o *UpdateMemberGenderUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateMemberGenderUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/gender][%d] updateMemberGenderUsingPUTForbidden", 403)
}

func (o *UpdateMemberGenderUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/gender][%d] updateMemberGenderUsingPUTForbidden", 403)
}

func (o *UpdateMemberGenderUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGenderUsingPUTNotFound creates a UpdateMemberGenderUsingPUTNotFound with default headers values
func NewUpdateMemberGenderUsingPUTNotFound() *UpdateMemberGenderUsingPUTNotFound {
	return &UpdateMemberGenderUsingPUTNotFound{}
}

/*
UpdateMemberGenderUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateMemberGenderUsingPUTNotFound struct {
}

// IsSuccess returns true when this update member gender using p u t not found response has a 2xx status code
func (o *UpdateMemberGenderUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member gender using p u t not found response has a 3xx status code
func (o *UpdateMemberGenderUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member gender using p u t not found response has a 4xx status code
func (o *UpdateMemberGenderUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member gender using p u t not found response has a 5xx status code
func (o *UpdateMemberGenderUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update member gender using p u t not found response a status code equal to that given
func (o *UpdateMemberGenderUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update member gender using p u t not found response
func (o *UpdateMemberGenderUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateMemberGenderUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/gender][%d] updateMemberGenderUsingPUTNotFound", 404)
}

func (o *UpdateMemberGenderUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/gender][%d] updateMemberGenderUsingPUTNotFound", 404)
}

func (o *UpdateMemberGenderUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGenderUsingPUTInternalServerError creates a UpdateMemberGenderUsingPUTInternalServerError with default headers values
func NewUpdateMemberGenderUsingPUTInternalServerError() *UpdateMemberGenderUsingPUTInternalServerError {
	return &UpdateMemberGenderUsingPUTInternalServerError{}
}

/*
UpdateMemberGenderUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateMemberGenderUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update member gender using p u t internal server error response has a 2xx status code
func (o *UpdateMemberGenderUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member gender using p u t internal server error response has a 3xx status code
func (o *UpdateMemberGenderUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member gender using p u t internal server error response has a 4xx status code
func (o *UpdateMemberGenderUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member gender using p u t internal server error response has a 5xx status code
func (o *UpdateMemberGenderUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update member gender using p u t internal server error response a status code equal to that given
func (o *UpdateMemberGenderUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update member gender using p u t internal server error response
func (o *UpdateMemberGenderUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateMemberGenderUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/gender][%d] updateMemberGenderUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberGenderUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/gender][%d] updateMemberGenderUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberGenderUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
