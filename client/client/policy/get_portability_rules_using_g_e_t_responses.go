// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetPortabilityRulesUsingGETReader is a Reader for the GetPortabilityRulesUsingGET structure.
type GetPortabilityRulesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPortabilityRulesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPortabilityRulesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPortabilityRulesUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPortabilityRulesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPortabilityRulesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPortabilityRulesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPortabilityRulesUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/policy/portabilityRules] getPortabilityRulesUsingGET", response, response.Code())
	}
}

// NewGetPortabilityRulesUsingGETOK creates a GetPortabilityRulesUsingGETOK with default headers values
func NewGetPortabilityRulesUsingGETOK() *GetPortabilityRulesUsingGETOK {
	return &GetPortabilityRulesUsingGETOK{}
}

/*
GetPortabilityRulesUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetPortabilityRulesUsingGETOK struct {
	Payload *models.ResponseWrapperListPortabilityRuleDTO
}

// IsSuccess returns true when this get portability rules using g e t o k response has a 2xx status code
func (o *GetPortabilityRulesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get portability rules using g e t o k response has a 3xx status code
func (o *GetPortabilityRulesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get portability rules using g e t o k response has a 4xx status code
func (o *GetPortabilityRulesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get portability rules using g e t o k response has a 5xx status code
func (o *GetPortabilityRulesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get portability rules using g e t o k response a status code equal to that given
func (o *GetPortabilityRulesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get portability rules using g e t o k response
func (o *GetPortabilityRulesUsingGETOK) Code() int {
	return 200
}

func (o *GetPortabilityRulesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/portabilityRules][%d] getPortabilityRulesUsingGETOK %s", 200, payload)
}

func (o *GetPortabilityRulesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/portabilityRules][%d] getPortabilityRulesUsingGETOK %s", 200, payload)
}

func (o *GetPortabilityRulesUsingGETOK) GetPayload() *models.ResponseWrapperListPortabilityRuleDTO {
	return o.Payload
}

func (o *GetPortabilityRulesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperListPortabilityRuleDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPortabilityRulesUsingGETBadRequest creates a GetPortabilityRulesUsingGETBadRequest with default headers values
func NewGetPortabilityRulesUsingGETBadRequest() *GetPortabilityRulesUsingGETBadRequest {
	return &GetPortabilityRulesUsingGETBadRequest{}
}

/*
GetPortabilityRulesUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetPortabilityRulesUsingGETBadRequest struct {
}

// IsSuccess returns true when this get portability rules using g e t bad request response has a 2xx status code
func (o *GetPortabilityRulesUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get portability rules using g e t bad request response has a 3xx status code
func (o *GetPortabilityRulesUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get portability rules using g e t bad request response has a 4xx status code
func (o *GetPortabilityRulesUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get portability rules using g e t bad request response has a 5xx status code
func (o *GetPortabilityRulesUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get portability rules using g e t bad request response a status code equal to that given
func (o *GetPortabilityRulesUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get portability rules using g e t bad request response
func (o *GetPortabilityRulesUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetPortabilityRulesUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/portabilityRules][%d] getPortabilityRulesUsingGETBadRequest", 400)
}

func (o *GetPortabilityRulesUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/portabilityRules][%d] getPortabilityRulesUsingGETBadRequest", 400)
}

func (o *GetPortabilityRulesUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPortabilityRulesUsingGETUnauthorized creates a GetPortabilityRulesUsingGETUnauthorized with default headers values
func NewGetPortabilityRulesUsingGETUnauthorized() *GetPortabilityRulesUsingGETUnauthorized {
	return &GetPortabilityRulesUsingGETUnauthorized{}
}

/*
GetPortabilityRulesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetPortabilityRulesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get portability rules using g e t unauthorized response has a 2xx status code
func (o *GetPortabilityRulesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get portability rules using g e t unauthorized response has a 3xx status code
func (o *GetPortabilityRulesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get portability rules using g e t unauthorized response has a 4xx status code
func (o *GetPortabilityRulesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get portability rules using g e t unauthorized response has a 5xx status code
func (o *GetPortabilityRulesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get portability rules using g e t unauthorized response a status code equal to that given
func (o *GetPortabilityRulesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get portability rules using g e t unauthorized response
func (o *GetPortabilityRulesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetPortabilityRulesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/portabilityRules][%d] getPortabilityRulesUsingGETUnauthorized", 401)
}

func (o *GetPortabilityRulesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/portabilityRules][%d] getPortabilityRulesUsingGETUnauthorized", 401)
}

func (o *GetPortabilityRulesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPortabilityRulesUsingGETForbidden creates a GetPortabilityRulesUsingGETForbidden with default headers values
func NewGetPortabilityRulesUsingGETForbidden() *GetPortabilityRulesUsingGETForbidden {
	return &GetPortabilityRulesUsingGETForbidden{}
}

/*
GetPortabilityRulesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetPortabilityRulesUsingGETForbidden struct {
}

// IsSuccess returns true when this get portability rules using g e t forbidden response has a 2xx status code
func (o *GetPortabilityRulesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get portability rules using g e t forbidden response has a 3xx status code
func (o *GetPortabilityRulesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get portability rules using g e t forbidden response has a 4xx status code
func (o *GetPortabilityRulesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get portability rules using g e t forbidden response has a 5xx status code
func (o *GetPortabilityRulesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get portability rules using g e t forbidden response a status code equal to that given
func (o *GetPortabilityRulesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get portability rules using g e t forbidden response
func (o *GetPortabilityRulesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetPortabilityRulesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/portabilityRules][%d] getPortabilityRulesUsingGETForbidden", 403)
}

func (o *GetPortabilityRulesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/portabilityRules][%d] getPortabilityRulesUsingGETForbidden", 403)
}

func (o *GetPortabilityRulesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPortabilityRulesUsingGETNotFound creates a GetPortabilityRulesUsingGETNotFound with default headers values
func NewGetPortabilityRulesUsingGETNotFound() *GetPortabilityRulesUsingGETNotFound {
	return &GetPortabilityRulesUsingGETNotFound{}
}

/*
GetPortabilityRulesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetPortabilityRulesUsingGETNotFound struct {
}

// IsSuccess returns true when this get portability rules using g e t not found response has a 2xx status code
func (o *GetPortabilityRulesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get portability rules using g e t not found response has a 3xx status code
func (o *GetPortabilityRulesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get portability rules using g e t not found response has a 4xx status code
func (o *GetPortabilityRulesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get portability rules using g e t not found response has a 5xx status code
func (o *GetPortabilityRulesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get portability rules using g e t not found response a status code equal to that given
func (o *GetPortabilityRulesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get portability rules using g e t not found response
func (o *GetPortabilityRulesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetPortabilityRulesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/portabilityRules][%d] getPortabilityRulesUsingGETNotFound", 404)
}

func (o *GetPortabilityRulesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/portabilityRules][%d] getPortabilityRulesUsingGETNotFound", 404)
}

func (o *GetPortabilityRulesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPortabilityRulesUsingGETInternalServerError creates a GetPortabilityRulesUsingGETInternalServerError with default headers values
func NewGetPortabilityRulesUsingGETInternalServerError() *GetPortabilityRulesUsingGETInternalServerError {
	return &GetPortabilityRulesUsingGETInternalServerError{}
}

/*
GetPortabilityRulesUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetPortabilityRulesUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get portability rules using g e t internal server error response has a 2xx status code
func (o *GetPortabilityRulesUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get portability rules using g e t internal server error response has a 3xx status code
func (o *GetPortabilityRulesUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get portability rules using g e t internal server error response has a 4xx status code
func (o *GetPortabilityRulesUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get portability rules using g e t internal server error response has a 5xx status code
func (o *GetPortabilityRulesUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get portability rules using g e t internal server error response a status code equal to that given
func (o *GetPortabilityRulesUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get portability rules using g e t internal server error response
func (o *GetPortabilityRulesUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetPortabilityRulesUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/portabilityRules][%d] getPortabilityRulesUsingGETInternalServerError", 500)
}

func (o *GetPortabilityRulesUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/portabilityRules][%d] getPortabilityRulesUsingGETInternalServerError", 500)
}

func (o *GetPortabilityRulesUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
