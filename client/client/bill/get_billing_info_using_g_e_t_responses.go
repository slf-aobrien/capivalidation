// Code generated by go-swagger; DO NOT EDIT.

package bill

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetBillingInfoUsingGETReader is a Reader for the GetBillingInfoUsingGET structure.
type GetBillingInfoUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBillingInfoUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBillingInfoUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBillingInfoUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBillingInfoUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBillingInfoUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBillingInfoUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBillingInfoUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/bill/info] getBillingInfoUsingGET", response, response.Code())
	}
}

// NewGetBillingInfoUsingGETOK creates a GetBillingInfoUsingGETOK with default headers values
func NewGetBillingInfoUsingGETOK() *GetBillingInfoUsingGETOK {
	return &GetBillingInfoUsingGETOK{}
}

/*
GetBillingInfoUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetBillingInfoUsingGETOK struct {
	Payload *models.ResponseWrapperListBillingInfoDTO
}

// IsSuccess returns true when this get billing info using g e t o k response has a 2xx status code
func (o *GetBillingInfoUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get billing info using g e t o k response has a 3xx status code
func (o *GetBillingInfoUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing info using g e t o k response has a 4xx status code
func (o *GetBillingInfoUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get billing info using g e t o k response has a 5xx status code
func (o *GetBillingInfoUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get billing info using g e t o k response a status code equal to that given
func (o *GetBillingInfoUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get billing info using g e t o k response
func (o *GetBillingInfoUsingGETOK) Code() int {
	return 200
}

func (o *GetBillingInfoUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/bill/info][%d] getBillingInfoUsingGETOK %s", 200, payload)
}

func (o *GetBillingInfoUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/bill/info][%d] getBillingInfoUsingGETOK %s", 200, payload)
}

func (o *GetBillingInfoUsingGETOK) GetPayload() *models.ResponseWrapperListBillingInfoDTO {
	return o.Payload
}

func (o *GetBillingInfoUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperListBillingInfoDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBillingInfoUsingGETBadRequest creates a GetBillingInfoUsingGETBadRequest with default headers values
func NewGetBillingInfoUsingGETBadRequest() *GetBillingInfoUsingGETBadRequest {
	return &GetBillingInfoUsingGETBadRequest{}
}

/*
GetBillingInfoUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetBillingInfoUsingGETBadRequest struct {
}

// IsSuccess returns true when this get billing info using g e t bad request response has a 2xx status code
func (o *GetBillingInfoUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get billing info using g e t bad request response has a 3xx status code
func (o *GetBillingInfoUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing info using g e t bad request response has a 4xx status code
func (o *GetBillingInfoUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get billing info using g e t bad request response has a 5xx status code
func (o *GetBillingInfoUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get billing info using g e t bad request response a status code equal to that given
func (o *GetBillingInfoUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get billing info using g e t bad request response
func (o *GetBillingInfoUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetBillingInfoUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/info][%d] getBillingInfoUsingGETBadRequest", 400)
}

func (o *GetBillingInfoUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/info][%d] getBillingInfoUsingGETBadRequest", 400)
}

func (o *GetBillingInfoUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBillingInfoUsingGETUnauthorized creates a GetBillingInfoUsingGETUnauthorized with default headers values
func NewGetBillingInfoUsingGETUnauthorized() *GetBillingInfoUsingGETUnauthorized {
	return &GetBillingInfoUsingGETUnauthorized{}
}

/*
GetBillingInfoUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetBillingInfoUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get billing info using g e t unauthorized response has a 2xx status code
func (o *GetBillingInfoUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get billing info using g e t unauthorized response has a 3xx status code
func (o *GetBillingInfoUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing info using g e t unauthorized response has a 4xx status code
func (o *GetBillingInfoUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get billing info using g e t unauthorized response has a 5xx status code
func (o *GetBillingInfoUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get billing info using g e t unauthorized response a status code equal to that given
func (o *GetBillingInfoUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get billing info using g e t unauthorized response
func (o *GetBillingInfoUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetBillingInfoUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/info][%d] getBillingInfoUsingGETUnauthorized", 401)
}

func (o *GetBillingInfoUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/info][%d] getBillingInfoUsingGETUnauthorized", 401)
}

func (o *GetBillingInfoUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBillingInfoUsingGETForbidden creates a GetBillingInfoUsingGETForbidden with default headers values
func NewGetBillingInfoUsingGETForbidden() *GetBillingInfoUsingGETForbidden {
	return &GetBillingInfoUsingGETForbidden{}
}

/*
GetBillingInfoUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBillingInfoUsingGETForbidden struct {
}

// IsSuccess returns true when this get billing info using g e t forbidden response has a 2xx status code
func (o *GetBillingInfoUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get billing info using g e t forbidden response has a 3xx status code
func (o *GetBillingInfoUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing info using g e t forbidden response has a 4xx status code
func (o *GetBillingInfoUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get billing info using g e t forbidden response has a 5xx status code
func (o *GetBillingInfoUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get billing info using g e t forbidden response a status code equal to that given
func (o *GetBillingInfoUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get billing info using g e t forbidden response
func (o *GetBillingInfoUsingGETForbidden) Code() int {
	return 403
}

func (o *GetBillingInfoUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/info][%d] getBillingInfoUsingGETForbidden", 403)
}

func (o *GetBillingInfoUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/info][%d] getBillingInfoUsingGETForbidden", 403)
}

func (o *GetBillingInfoUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBillingInfoUsingGETNotFound creates a GetBillingInfoUsingGETNotFound with default headers values
func NewGetBillingInfoUsingGETNotFound() *GetBillingInfoUsingGETNotFound {
	return &GetBillingInfoUsingGETNotFound{}
}

/*
GetBillingInfoUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetBillingInfoUsingGETNotFound struct {
}

// IsSuccess returns true when this get billing info using g e t not found response has a 2xx status code
func (o *GetBillingInfoUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get billing info using g e t not found response has a 3xx status code
func (o *GetBillingInfoUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing info using g e t not found response has a 4xx status code
func (o *GetBillingInfoUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get billing info using g e t not found response has a 5xx status code
func (o *GetBillingInfoUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get billing info using g e t not found response a status code equal to that given
func (o *GetBillingInfoUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get billing info using g e t not found response
func (o *GetBillingInfoUsingGETNotFound) Code() int {
	return 404
}

func (o *GetBillingInfoUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/info][%d] getBillingInfoUsingGETNotFound", 404)
}

func (o *GetBillingInfoUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/info][%d] getBillingInfoUsingGETNotFound", 404)
}

func (o *GetBillingInfoUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBillingInfoUsingGETInternalServerError creates a GetBillingInfoUsingGETInternalServerError with default headers values
func NewGetBillingInfoUsingGETInternalServerError() *GetBillingInfoUsingGETInternalServerError {
	return &GetBillingInfoUsingGETInternalServerError{}
}

/*
GetBillingInfoUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetBillingInfoUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get billing info using g e t internal server error response has a 2xx status code
func (o *GetBillingInfoUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get billing info using g e t internal server error response has a 3xx status code
func (o *GetBillingInfoUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing info using g e t internal server error response has a 4xx status code
func (o *GetBillingInfoUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get billing info using g e t internal server error response has a 5xx status code
func (o *GetBillingInfoUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get billing info using g e t internal server error response a status code equal to that given
func (o *GetBillingInfoUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get billing info using g e t internal server error response
func (o *GetBillingInfoUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetBillingInfoUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/info][%d] getBillingInfoUsingGETInternalServerError", 500)
}

func (o *GetBillingInfoUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/info][%d] getBillingInfoUsingGETInternalServerError", 500)
}

func (o *GetBillingInfoUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
