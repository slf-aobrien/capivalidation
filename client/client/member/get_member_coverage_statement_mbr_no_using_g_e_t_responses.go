// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetMemberCoverageStatementMbrNoUsingGETReader is a Reader for the GetMemberCoverageStatementMbrNoUsingGET structure.
type GetMemberCoverageStatementMbrNoUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMemberCoverageStatementMbrNoUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMemberCoverageStatementMbrNoUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetMemberCoverageStatementMbrNoUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetMemberCoverageStatementMbrNoUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMemberCoverageStatementMbrNoUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMemberCoverageStatementMbrNoUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetMemberCoverageStatementMbrNoUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/member/coverageStatementMbrNo] getMemberCoverageStatementMbrNoUsingGET", response, response.Code())
	}
}

// NewGetMemberCoverageStatementMbrNoUsingGETOK creates a GetMemberCoverageStatementMbrNoUsingGETOK with default headers values
func NewGetMemberCoverageStatementMbrNoUsingGETOK() *GetMemberCoverageStatementMbrNoUsingGETOK {
	return &GetMemberCoverageStatementMbrNoUsingGETOK{}
}

/*
GetMemberCoverageStatementMbrNoUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetMemberCoverageStatementMbrNoUsingGETOK struct {
	Payload *models.ResponseWrapperMemberListDTO
}

// IsSuccess returns true when this get member coverage statement mbr no using g e t o k response has a 2xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get member coverage statement mbr no using g e t o k response has a 3xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member coverage statement mbr no using g e t o k response has a 4xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get member coverage statement mbr no using g e t o k response has a 5xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get member coverage statement mbr no using g e t o k response a status code equal to that given
func (o *GetMemberCoverageStatementMbrNoUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get member coverage statement mbr no using g e t o k response
func (o *GetMemberCoverageStatementMbrNoUsingGETOK) Code() int {
	return 200
}

func (o *GetMemberCoverageStatementMbrNoUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatementMbrNo][%d] getMemberCoverageStatementMbrNoUsingGETOK %s", 200, payload)
}

func (o *GetMemberCoverageStatementMbrNoUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatementMbrNo][%d] getMemberCoverageStatementMbrNoUsingGETOK %s", 200, payload)
}

func (o *GetMemberCoverageStatementMbrNoUsingGETOK) GetPayload() *models.ResponseWrapperMemberListDTO {
	return o.Payload
}

func (o *GetMemberCoverageStatementMbrNoUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperMemberListDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMemberCoverageStatementMbrNoUsingGETBadRequest creates a GetMemberCoverageStatementMbrNoUsingGETBadRequest with default headers values
func NewGetMemberCoverageStatementMbrNoUsingGETBadRequest() *GetMemberCoverageStatementMbrNoUsingGETBadRequest {
	return &GetMemberCoverageStatementMbrNoUsingGETBadRequest{}
}

/*
GetMemberCoverageStatementMbrNoUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetMemberCoverageStatementMbrNoUsingGETBadRequest struct {
}

// IsSuccess returns true when this get member coverage statement mbr no using g e t bad request response has a 2xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member coverage statement mbr no using g e t bad request response has a 3xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member coverage statement mbr no using g e t bad request response has a 4xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member coverage statement mbr no using g e t bad request response has a 5xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get member coverage statement mbr no using g e t bad request response a status code equal to that given
func (o *GetMemberCoverageStatementMbrNoUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get member coverage statement mbr no using g e t bad request response
func (o *GetMemberCoverageStatementMbrNoUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetMemberCoverageStatementMbrNoUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatementMbrNo][%d] getMemberCoverageStatementMbrNoUsingGETBadRequest", 400)
}

func (o *GetMemberCoverageStatementMbrNoUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatementMbrNo][%d] getMemberCoverageStatementMbrNoUsingGETBadRequest", 400)
}

func (o *GetMemberCoverageStatementMbrNoUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberCoverageStatementMbrNoUsingGETUnauthorized creates a GetMemberCoverageStatementMbrNoUsingGETUnauthorized with default headers values
func NewGetMemberCoverageStatementMbrNoUsingGETUnauthorized() *GetMemberCoverageStatementMbrNoUsingGETUnauthorized {
	return &GetMemberCoverageStatementMbrNoUsingGETUnauthorized{}
}

/*
GetMemberCoverageStatementMbrNoUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetMemberCoverageStatementMbrNoUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get member coverage statement mbr no using g e t unauthorized response has a 2xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member coverage statement mbr no using g e t unauthorized response has a 3xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member coverage statement mbr no using g e t unauthorized response has a 4xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member coverage statement mbr no using g e t unauthorized response has a 5xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get member coverage statement mbr no using g e t unauthorized response a status code equal to that given
func (o *GetMemberCoverageStatementMbrNoUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get member coverage statement mbr no using g e t unauthorized response
func (o *GetMemberCoverageStatementMbrNoUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetMemberCoverageStatementMbrNoUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatementMbrNo][%d] getMemberCoverageStatementMbrNoUsingGETUnauthorized", 401)
}

func (o *GetMemberCoverageStatementMbrNoUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatementMbrNo][%d] getMemberCoverageStatementMbrNoUsingGETUnauthorized", 401)
}

func (o *GetMemberCoverageStatementMbrNoUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberCoverageStatementMbrNoUsingGETForbidden creates a GetMemberCoverageStatementMbrNoUsingGETForbidden with default headers values
func NewGetMemberCoverageStatementMbrNoUsingGETForbidden() *GetMemberCoverageStatementMbrNoUsingGETForbidden {
	return &GetMemberCoverageStatementMbrNoUsingGETForbidden{}
}

/*
GetMemberCoverageStatementMbrNoUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetMemberCoverageStatementMbrNoUsingGETForbidden struct {
}

// IsSuccess returns true when this get member coverage statement mbr no using g e t forbidden response has a 2xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member coverage statement mbr no using g e t forbidden response has a 3xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member coverage statement mbr no using g e t forbidden response has a 4xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member coverage statement mbr no using g e t forbidden response has a 5xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get member coverage statement mbr no using g e t forbidden response a status code equal to that given
func (o *GetMemberCoverageStatementMbrNoUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get member coverage statement mbr no using g e t forbidden response
func (o *GetMemberCoverageStatementMbrNoUsingGETForbidden) Code() int {
	return 403
}

func (o *GetMemberCoverageStatementMbrNoUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatementMbrNo][%d] getMemberCoverageStatementMbrNoUsingGETForbidden", 403)
}

func (o *GetMemberCoverageStatementMbrNoUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatementMbrNo][%d] getMemberCoverageStatementMbrNoUsingGETForbidden", 403)
}

func (o *GetMemberCoverageStatementMbrNoUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberCoverageStatementMbrNoUsingGETNotFound creates a GetMemberCoverageStatementMbrNoUsingGETNotFound with default headers values
func NewGetMemberCoverageStatementMbrNoUsingGETNotFound() *GetMemberCoverageStatementMbrNoUsingGETNotFound {
	return &GetMemberCoverageStatementMbrNoUsingGETNotFound{}
}

/*
GetMemberCoverageStatementMbrNoUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetMemberCoverageStatementMbrNoUsingGETNotFound struct {
}

// IsSuccess returns true when this get member coverage statement mbr no using g e t not found response has a 2xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member coverage statement mbr no using g e t not found response has a 3xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member coverage statement mbr no using g e t not found response has a 4xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member coverage statement mbr no using g e t not found response has a 5xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get member coverage statement mbr no using g e t not found response a status code equal to that given
func (o *GetMemberCoverageStatementMbrNoUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get member coverage statement mbr no using g e t not found response
func (o *GetMemberCoverageStatementMbrNoUsingGETNotFound) Code() int {
	return 404
}

func (o *GetMemberCoverageStatementMbrNoUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatementMbrNo][%d] getMemberCoverageStatementMbrNoUsingGETNotFound", 404)
}

func (o *GetMemberCoverageStatementMbrNoUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatementMbrNo][%d] getMemberCoverageStatementMbrNoUsingGETNotFound", 404)
}

func (o *GetMemberCoverageStatementMbrNoUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberCoverageStatementMbrNoUsingGETInternalServerError creates a GetMemberCoverageStatementMbrNoUsingGETInternalServerError with default headers values
func NewGetMemberCoverageStatementMbrNoUsingGETInternalServerError() *GetMemberCoverageStatementMbrNoUsingGETInternalServerError {
	return &GetMemberCoverageStatementMbrNoUsingGETInternalServerError{}
}

/*
GetMemberCoverageStatementMbrNoUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetMemberCoverageStatementMbrNoUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get member coverage statement mbr no using g e t internal server error response has a 2xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member coverage statement mbr no using g e t internal server error response has a 3xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member coverage statement mbr no using g e t internal server error response has a 4xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get member coverage statement mbr no using g e t internal server error response has a 5xx status code
func (o *GetMemberCoverageStatementMbrNoUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get member coverage statement mbr no using g e t internal server error response a status code equal to that given
func (o *GetMemberCoverageStatementMbrNoUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get member coverage statement mbr no using g e t internal server error response
func (o *GetMemberCoverageStatementMbrNoUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetMemberCoverageStatementMbrNoUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatementMbrNo][%d] getMemberCoverageStatementMbrNoUsingGETInternalServerError", 500)
}

func (o *GetMemberCoverageStatementMbrNoUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatementMbrNo][%d] getMemberCoverageStatementMbrNoUsingGETInternalServerError", 500)
}

func (o *GetMemberCoverageStatementMbrNoUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
