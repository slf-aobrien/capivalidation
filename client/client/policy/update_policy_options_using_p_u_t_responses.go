// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdatePolicyOptionsUsingPUTReader is a Reader for the UpdatePolicyOptionsUsingPUT structure.
type UpdatePolicyOptionsUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePolicyOptionsUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdatePolicyOptionsUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdatePolicyOptionsUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdatePolicyOptionsUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdatePolicyOptionsUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdatePolicyOptionsUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdatePolicyOptionsUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdatePolicyOptionsUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/policy/policyOptions] updatePolicyOptionsUsingPUT", response, response.Code())
	}
}

// NewUpdatePolicyOptionsUsingPUTOK creates a UpdatePolicyOptionsUsingPUTOK with default headers values
func NewUpdatePolicyOptionsUsingPUTOK() *UpdatePolicyOptionsUsingPUTOK {
	return &UpdatePolicyOptionsUsingPUTOK{}
}

/*
UpdatePolicyOptionsUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdatePolicyOptionsUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update policy options using p u t o k response has a 2xx status code
func (o *UpdatePolicyOptionsUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update policy options using p u t o k response has a 3xx status code
func (o *UpdatePolicyOptionsUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy options using p u t o k response has a 4xx status code
func (o *UpdatePolicyOptionsUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update policy options using p u t o k response has a 5xx status code
func (o *UpdatePolicyOptionsUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy options using p u t o k response a status code equal to that given
func (o *UpdatePolicyOptionsUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update policy options using p u t o k response
func (o *UpdatePolicyOptionsUsingPUTOK) Code() int {
	return 200
}

func (o *UpdatePolicyOptionsUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyOptions][%d] updatePolicyOptionsUsingPUTOK %s", 200, payload)
}

func (o *UpdatePolicyOptionsUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyOptions][%d] updatePolicyOptionsUsingPUTOK %s", 200, payload)
}

func (o *UpdatePolicyOptionsUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdatePolicyOptionsUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePolicyOptionsUsingPUTCreated creates a UpdatePolicyOptionsUsingPUTCreated with default headers values
func NewUpdatePolicyOptionsUsingPUTCreated() *UpdatePolicyOptionsUsingPUTCreated {
	return &UpdatePolicyOptionsUsingPUTCreated{}
}

/*
UpdatePolicyOptionsUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdatePolicyOptionsUsingPUTCreated struct {
}

// IsSuccess returns true when this update policy options using p u t created response has a 2xx status code
func (o *UpdatePolicyOptionsUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update policy options using p u t created response has a 3xx status code
func (o *UpdatePolicyOptionsUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy options using p u t created response has a 4xx status code
func (o *UpdatePolicyOptionsUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update policy options using p u t created response has a 5xx status code
func (o *UpdatePolicyOptionsUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy options using p u t created response a status code equal to that given
func (o *UpdatePolicyOptionsUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update policy options using p u t created response
func (o *UpdatePolicyOptionsUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdatePolicyOptionsUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyOptions][%d] updatePolicyOptionsUsingPUTCreated", 201)
}

func (o *UpdatePolicyOptionsUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyOptions][%d] updatePolicyOptionsUsingPUTCreated", 201)
}

func (o *UpdatePolicyOptionsUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyOptionsUsingPUTBadRequest creates a UpdatePolicyOptionsUsingPUTBadRequest with default headers values
func NewUpdatePolicyOptionsUsingPUTBadRequest() *UpdatePolicyOptionsUsingPUTBadRequest {
	return &UpdatePolicyOptionsUsingPUTBadRequest{}
}

/*
UpdatePolicyOptionsUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdatePolicyOptionsUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update policy options using p u t bad request response has a 2xx status code
func (o *UpdatePolicyOptionsUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy options using p u t bad request response has a 3xx status code
func (o *UpdatePolicyOptionsUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy options using p u t bad request response has a 4xx status code
func (o *UpdatePolicyOptionsUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy options using p u t bad request response has a 5xx status code
func (o *UpdatePolicyOptionsUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy options using p u t bad request response a status code equal to that given
func (o *UpdatePolicyOptionsUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update policy options using p u t bad request response
func (o *UpdatePolicyOptionsUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdatePolicyOptionsUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyOptions][%d] updatePolicyOptionsUsingPUTBadRequest", 400)
}

func (o *UpdatePolicyOptionsUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyOptions][%d] updatePolicyOptionsUsingPUTBadRequest", 400)
}

func (o *UpdatePolicyOptionsUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyOptionsUsingPUTUnauthorized creates a UpdatePolicyOptionsUsingPUTUnauthorized with default headers values
func NewUpdatePolicyOptionsUsingPUTUnauthorized() *UpdatePolicyOptionsUsingPUTUnauthorized {
	return &UpdatePolicyOptionsUsingPUTUnauthorized{}
}

/*
UpdatePolicyOptionsUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdatePolicyOptionsUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update policy options using p u t unauthorized response has a 2xx status code
func (o *UpdatePolicyOptionsUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy options using p u t unauthorized response has a 3xx status code
func (o *UpdatePolicyOptionsUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy options using p u t unauthorized response has a 4xx status code
func (o *UpdatePolicyOptionsUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy options using p u t unauthorized response has a 5xx status code
func (o *UpdatePolicyOptionsUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy options using p u t unauthorized response a status code equal to that given
func (o *UpdatePolicyOptionsUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update policy options using p u t unauthorized response
func (o *UpdatePolicyOptionsUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdatePolicyOptionsUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyOptions][%d] updatePolicyOptionsUsingPUTUnauthorized", 401)
}

func (o *UpdatePolicyOptionsUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyOptions][%d] updatePolicyOptionsUsingPUTUnauthorized", 401)
}

func (o *UpdatePolicyOptionsUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyOptionsUsingPUTForbidden creates a UpdatePolicyOptionsUsingPUTForbidden with default headers values
func NewUpdatePolicyOptionsUsingPUTForbidden() *UpdatePolicyOptionsUsingPUTForbidden {
	return &UpdatePolicyOptionsUsingPUTForbidden{}
}

/*
UpdatePolicyOptionsUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdatePolicyOptionsUsingPUTForbidden struct {
}

// IsSuccess returns true when this update policy options using p u t forbidden response has a 2xx status code
func (o *UpdatePolicyOptionsUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy options using p u t forbidden response has a 3xx status code
func (o *UpdatePolicyOptionsUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy options using p u t forbidden response has a 4xx status code
func (o *UpdatePolicyOptionsUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy options using p u t forbidden response has a 5xx status code
func (o *UpdatePolicyOptionsUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy options using p u t forbidden response a status code equal to that given
func (o *UpdatePolicyOptionsUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update policy options using p u t forbidden response
func (o *UpdatePolicyOptionsUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdatePolicyOptionsUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyOptions][%d] updatePolicyOptionsUsingPUTForbidden", 403)
}

func (o *UpdatePolicyOptionsUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyOptions][%d] updatePolicyOptionsUsingPUTForbidden", 403)
}

func (o *UpdatePolicyOptionsUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyOptionsUsingPUTNotFound creates a UpdatePolicyOptionsUsingPUTNotFound with default headers values
func NewUpdatePolicyOptionsUsingPUTNotFound() *UpdatePolicyOptionsUsingPUTNotFound {
	return &UpdatePolicyOptionsUsingPUTNotFound{}
}

/*
UpdatePolicyOptionsUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdatePolicyOptionsUsingPUTNotFound struct {
}

// IsSuccess returns true when this update policy options using p u t not found response has a 2xx status code
func (o *UpdatePolicyOptionsUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy options using p u t not found response has a 3xx status code
func (o *UpdatePolicyOptionsUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy options using p u t not found response has a 4xx status code
func (o *UpdatePolicyOptionsUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy options using p u t not found response has a 5xx status code
func (o *UpdatePolicyOptionsUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy options using p u t not found response a status code equal to that given
func (o *UpdatePolicyOptionsUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update policy options using p u t not found response
func (o *UpdatePolicyOptionsUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdatePolicyOptionsUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyOptions][%d] updatePolicyOptionsUsingPUTNotFound", 404)
}

func (o *UpdatePolicyOptionsUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyOptions][%d] updatePolicyOptionsUsingPUTNotFound", 404)
}

func (o *UpdatePolicyOptionsUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyOptionsUsingPUTInternalServerError creates a UpdatePolicyOptionsUsingPUTInternalServerError with default headers values
func NewUpdatePolicyOptionsUsingPUTInternalServerError() *UpdatePolicyOptionsUsingPUTInternalServerError {
	return &UpdatePolicyOptionsUsingPUTInternalServerError{}
}

/*
UpdatePolicyOptionsUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdatePolicyOptionsUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update policy options using p u t internal server error response has a 2xx status code
func (o *UpdatePolicyOptionsUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy options using p u t internal server error response has a 3xx status code
func (o *UpdatePolicyOptionsUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy options using p u t internal server error response has a 4xx status code
func (o *UpdatePolicyOptionsUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update policy options using p u t internal server error response has a 5xx status code
func (o *UpdatePolicyOptionsUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update policy options using p u t internal server error response a status code equal to that given
func (o *UpdatePolicyOptionsUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update policy options using p u t internal server error response
func (o *UpdatePolicyOptionsUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdatePolicyOptionsUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyOptions][%d] updatePolicyOptionsUsingPUTInternalServerError", 500)
}

func (o *UpdatePolicyOptionsUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyOptions][%d] updatePolicyOptionsUsingPUTInternalServerError", 500)
}

func (o *UpdatePolicyOptionsUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
