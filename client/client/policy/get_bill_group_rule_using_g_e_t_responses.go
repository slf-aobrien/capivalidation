// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetBillGroupRuleUsingGETReader is a Reader for the GetBillGroupRuleUsingGET structure.
type GetBillGroupRuleUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBillGroupRuleUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBillGroupRuleUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBillGroupRuleUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBillGroupRuleUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBillGroupRuleUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBillGroupRuleUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBillGroupRuleUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/policy/billGroupRule] getBillGroupRuleUsingGET", response, response.Code())
	}
}

// NewGetBillGroupRuleUsingGETOK creates a GetBillGroupRuleUsingGETOK with default headers values
func NewGetBillGroupRuleUsingGETOK() *GetBillGroupRuleUsingGETOK {
	return &GetBillGroupRuleUsingGETOK{}
}

/*
GetBillGroupRuleUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetBillGroupRuleUsingGETOK struct {
	Payload *models.ResponseWrapperListBillGroupRuleDTO
}

// IsSuccess returns true when this get bill group rule using g e t o k response has a 2xx status code
func (o *GetBillGroupRuleUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get bill group rule using g e t o k response has a 3xx status code
func (o *GetBillGroupRuleUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bill group rule using g e t o k response has a 4xx status code
func (o *GetBillGroupRuleUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bill group rule using g e t o k response has a 5xx status code
func (o *GetBillGroupRuleUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get bill group rule using g e t o k response a status code equal to that given
func (o *GetBillGroupRuleUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get bill group rule using g e t o k response
func (o *GetBillGroupRuleUsingGETOK) Code() int {
	return 200
}

func (o *GetBillGroupRuleUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroupRule][%d] getBillGroupRuleUsingGETOK %s", 200, payload)
}

func (o *GetBillGroupRuleUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroupRule][%d] getBillGroupRuleUsingGETOK %s", 200, payload)
}

func (o *GetBillGroupRuleUsingGETOK) GetPayload() *models.ResponseWrapperListBillGroupRuleDTO {
	return o.Payload
}

func (o *GetBillGroupRuleUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperListBillGroupRuleDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBillGroupRuleUsingGETBadRequest creates a GetBillGroupRuleUsingGETBadRequest with default headers values
func NewGetBillGroupRuleUsingGETBadRequest() *GetBillGroupRuleUsingGETBadRequest {
	return &GetBillGroupRuleUsingGETBadRequest{}
}

/*
GetBillGroupRuleUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetBillGroupRuleUsingGETBadRequest struct {
}

// IsSuccess returns true when this get bill group rule using g e t bad request response has a 2xx status code
func (o *GetBillGroupRuleUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bill group rule using g e t bad request response has a 3xx status code
func (o *GetBillGroupRuleUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bill group rule using g e t bad request response has a 4xx status code
func (o *GetBillGroupRuleUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bill group rule using g e t bad request response has a 5xx status code
func (o *GetBillGroupRuleUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get bill group rule using g e t bad request response a status code equal to that given
func (o *GetBillGroupRuleUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get bill group rule using g e t bad request response
func (o *GetBillGroupRuleUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetBillGroupRuleUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroupRule][%d] getBillGroupRuleUsingGETBadRequest", 400)
}

func (o *GetBillGroupRuleUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroupRule][%d] getBillGroupRuleUsingGETBadRequest", 400)
}

func (o *GetBillGroupRuleUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBillGroupRuleUsingGETUnauthorized creates a GetBillGroupRuleUsingGETUnauthorized with default headers values
func NewGetBillGroupRuleUsingGETUnauthorized() *GetBillGroupRuleUsingGETUnauthorized {
	return &GetBillGroupRuleUsingGETUnauthorized{}
}

/*
GetBillGroupRuleUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetBillGroupRuleUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get bill group rule using g e t unauthorized response has a 2xx status code
func (o *GetBillGroupRuleUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bill group rule using g e t unauthorized response has a 3xx status code
func (o *GetBillGroupRuleUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bill group rule using g e t unauthorized response has a 4xx status code
func (o *GetBillGroupRuleUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bill group rule using g e t unauthorized response has a 5xx status code
func (o *GetBillGroupRuleUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get bill group rule using g e t unauthorized response a status code equal to that given
func (o *GetBillGroupRuleUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get bill group rule using g e t unauthorized response
func (o *GetBillGroupRuleUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetBillGroupRuleUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroupRule][%d] getBillGroupRuleUsingGETUnauthorized", 401)
}

func (o *GetBillGroupRuleUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroupRule][%d] getBillGroupRuleUsingGETUnauthorized", 401)
}

func (o *GetBillGroupRuleUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBillGroupRuleUsingGETForbidden creates a GetBillGroupRuleUsingGETForbidden with default headers values
func NewGetBillGroupRuleUsingGETForbidden() *GetBillGroupRuleUsingGETForbidden {
	return &GetBillGroupRuleUsingGETForbidden{}
}

/*
GetBillGroupRuleUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBillGroupRuleUsingGETForbidden struct {
}

// IsSuccess returns true when this get bill group rule using g e t forbidden response has a 2xx status code
func (o *GetBillGroupRuleUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bill group rule using g e t forbidden response has a 3xx status code
func (o *GetBillGroupRuleUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bill group rule using g e t forbidden response has a 4xx status code
func (o *GetBillGroupRuleUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bill group rule using g e t forbidden response has a 5xx status code
func (o *GetBillGroupRuleUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get bill group rule using g e t forbidden response a status code equal to that given
func (o *GetBillGroupRuleUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get bill group rule using g e t forbidden response
func (o *GetBillGroupRuleUsingGETForbidden) Code() int {
	return 403
}

func (o *GetBillGroupRuleUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroupRule][%d] getBillGroupRuleUsingGETForbidden", 403)
}

func (o *GetBillGroupRuleUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroupRule][%d] getBillGroupRuleUsingGETForbidden", 403)
}

func (o *GetBillGroupRuleUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBillGroupRuleUsingGETNotFound creates a GetBillGroupRuleUsingGETNotFound with default headers values
func NewGetBillGroupRuleUsingGETNotFound() *GetBillGroupRuleUsingGETNotFound {
	return &GetBillGroupRuleUsingGETNotFound{}
}

/*
GetBillGroupRuleUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetBillGroupRuleUsingGETNotFound struct {
}

// IsSuccess returns true when this get bill group rule using g e t not found response has a 2xx status code
func (o *GetBillGroupRuleUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bill group rule using g e t not found response has a 3xx status code
func (o *GetBillGroupRuleUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bill group rule using g e t not found response has a 4xx status code
func (o *GetBillGroupRuleUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bill group rule using g e t not found response has a 5xx status code
func (o *GetBillGroupRuleUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get bill group rule using g e t not found response a status code equal to that given
func (o *GetBillGroupRuleUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get bill group rule using g e t not found response
func (o *GetBillGroupRuleUsingGETNotFound) Code() int {
	return 404
}

func (o *GetBillGroupRuleUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroupRule][%d] getBillGroupRuleUsingGETNotFound", 404)
}

func (o *GetBillGroupRuleUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroupRule][%d] getBillGroupRuleUsingGETNotFound", 404)
}

func (o *GetBillGroupRuleUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBillGroupRuleUsingGETInternalServerError creates a GetBillGroupRuleUsingGETInternalServerError with default headers values
func NewGetBillGroupRuleUsingGETInternalServerError() *GetBillGroupRuleUsingGETInternalServerError {
	return &GetBillGroupRuleUsingGETInternalServerError{}
}

/*
GetBillGroupRuleUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetBillGroupRuleUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get bill group rule using g e t internal server error response has a 2xx status code
func (o *GetBillGroupRuleUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bill group rule using g e t internal server error response has a 3xx status code
func (o *GetBillGroupRuleUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bill group rule using g e t internal server error response has a 4xx status code
func (o *GetBillGroupRuleUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bill group rule using g e t internal server error response has a 5xx status code
func (o *GetBillGroupRuleUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get bill group rule using g e t internal server error response a status code equal to that given
func (o *GetBillGroupRuleUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get bill group rule using g e t internal server error response
func (o *GetBillGroupRuleUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetBillGroupRuleUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroupRule][%d] getBillGroupRuleUsingGETInternalServerError", 500)
}

func (o *GetBillGroupRuleUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billGroupRule][%d] getBillGroupRuleUsingGETInternalServerError", 500)
}

func (o *GetBillGroupRuleUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
