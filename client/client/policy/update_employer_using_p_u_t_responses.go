// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateEmployerUsingPUTReader is a Reader for the UpdateEmployerUsingPUT structure.
type UpdateEmployerUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateEmployerUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateEmployerUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateEmployerUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateEmployerUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateEmployerUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateEmployerUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateEmployerUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateEmployerUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/policy/employer] updateEmployerUsingPUT", response, response.Code())
	}
}

// NewUpdateEmployerUsingPUTOK creates a UpdateEmployerUsingPUTOK with default headers values
func NewUpdateEmployerUsingPUTOK() *UpdateEmployerUsingPUTOK {
	return &UpdateEmployerUsingPUTOK{}
}

/*
UpdateEmployerUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateEmployerUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update employer using p u t o k response has a 2xx status code
func (o *UpdateEmployerUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update employer using p u t o k response has a 3xx status code
func (o *UpdateEmployerUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update employer using p u t o k response has a 4xx status code
func (o *UpdateEmployerUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update employer using p u t o k response has a 5xx status code
func (o *UpdateEmployerUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update employer using p u t o k response a status code equal to that given
func (o *UpdateEmployerUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update employer using p u t o k response
func (o *UpdateEmployerUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateEmployerUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/employer][%d] updateEmployerUsingPUTOK %s", 200, payload)
}

func (o *UpdateEmployerUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/employer][%d] updateEmployerUsingPUTOK %s", 200, payload)
}

func (o *UpdateEmployerUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateEmployerUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEmployerUsingPUTCreated creates a UpdateEmployerUsingPUTCreated with default headers values
func NewUpdateEmployerUsingPUTCreated() *UpdateEmployerUsingPUTCreated {
	return &UpdateEmployerUsingPUTCreated{}
}

/*
UpdateEmployerUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateEmployerUsingPUTCreated struct {
}

// IsSuccess returns true when this update employer using p u t created response has a 2xx status code
func (o *UpdateEmployerUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update employer using p u t created response has a 3xx status code
func (o *UpdateEmployerUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update employer using p u t created response has a 4xx status code
func (o *UpdateEmployerUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update employer using p u t created response has a 5xx status code
func (o *UpdateEmployerUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update employer using p u t created response a status code equal to that given
func (o *UpdateEmployerUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update employer using p u t created response
func (o *UpdateEmployerUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateEmployerUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/employer][%d] updateEmployerUsingPUTCreated", 201)
}

func (o *UpdateEmployerUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/employer][%d] updateEmployerUsingPUTCreated", 201)
}

func (o *UpdateEmployerUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateEmployerUsingPUTBadRequest creates a UpdateEmployerUsingPUTBadRequest with default headers values
func NewUpdateEmployerUsingPUTBadRequest() *UpdateEmployerUsingPUTBadRequest {
	return &UpdateEmployerUsingPUTBadRequest{}
}

/*
UpdateEmployerUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateEmployerUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update employer using p u t bad request response has a 2xx status code
func (o *UpdateEmployerUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update employer using p u t bad request response has a 3xx status code
func (o *UpdateEmployerUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update employer using p u t bad request response has a 4xx status code
func (o *UpdateEmployerUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update employer using p u t bad request response has a 5xx status code
func (o *UpdateEmployerUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update employer using p u t bad request response a status code equal to that given
func (o *UpdateEmployerUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update employer using p u t bad request response
func (o *UpdateEmployerUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateEmployerUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/employer][%d] updateEmployerUsingPUTBadRequest", 400)
}

func (o *UpdateEmployerUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/employer][%d] updateEmployerUsingPUTBadRequest", 400)
}

func (o *UpdateEmployerUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateEmployerUsingPUTUnauthorized creates a UpdateEmployerUsingPUTUnauthorized with default headers values
func NewUpdateEmployerUsingPUTUnauthorized() *UpdateEmployerUsingPUTUnauthorized {
	return &UpdateEmployerUsingPUTUnauthorized{}
}

/*
UpdateEmployerUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateEmployerUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update employer using p u t unauthorized response has a 2xx status code
func (o *UpdateEmployerUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update employer using p u t unauthorized response has a 3xx status code
func (o *UpdateEmployerUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update employer using p u t unauthorized response has a 4xx status code
func (o *UpdateEmployerUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update employer using p u t unauthorized response has a 5xx status code
func (o *UpdateEmployerUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update employer using p u t unauthorized response a status code equal to that given
func (o *UpdateEmployerUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update employer using p u t unauthorized response
func (o *UpdateEmployerUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateEmployerUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/employer][%d] updateEmployerUsingPUTUnauthorized", 401)
}

func (o *UpdateEmployerUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/employer][%d] updateEmployerUsingPUTUnauthorized", 401)
}

func (o *UpdateEmployerUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateEmployerUsingPUTForbidden creates a UpdateEmployerUsingPUTForbidden with default headers values
func NewUpdateEmployerUsingPUTForbidden() *UpdateEmployerUsingPUTForbidden {
	return &UpdateEmployerUsingPUTForbidden{}
}

/*
UpdateEmployerUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateEmployerUsingPUTForbidden struct {
}

// IsSuccess returns true when this update employer using p u t forbidden response has a 2xx status code
func (o *UpdateEmployerUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update employer using p u t forbidden response has a 3xx status code
func (o *UpdateEmployerUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update employer using p u t forbidden response has a 4xx status code
func (o *UpdateEmployerUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update employer using p u t forbidden response has a 5xx status code
func (o *UpdateEmployerUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update employer using p u t forbidden response a status code equal to that given
func (o *UpdateEmployerUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update employer using p u t forbidden response
func (o *UpdateEmployerUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateEmployerUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/employer][%d] updateEmployerUsingPUTForbidden", 403)
}

func (o *UpdateEmployerUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/employer][%d] updateEmployerUsingPUTForbidden", 403)
}

func (o *UpdateEmployerUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateEmployerUsingPUTNotFound creates a UpdateEmployerUsingPUTNotFound with default headers values
func NewUpdateEmployerUsingPUTNotFound() *UpdateEmployerUsingPUTNotFound {
	return &UpdateEmployerUsingPUTNotFound{}
}

/*
UpdateEmployerUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateEmployerUsingPUTNotFound struct {
}

// IsSuccess returns true when this update employer using p u t not found response has a 2xx status code
func (o *UpdateEmployerUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update employer using p u t not found response has a 3xx status code
func (o *UpdateEmployerUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update employer using p u t not found response has a 4xx status code
func (o *UpdateEmployerUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update employer using p u t not found response has a 5xx status code
func (o *UpdateEmployerUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update employer using p u t not found response a status code equal to that given
func (o *UpdateEmployerUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update employer using p u t not found response
func (o *UpdateEmployerUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateEmployerUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/employer][%d] updateEmployerUsingPUTNotFound", 404)
}

func (o *UpdateEmployerUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/employer][%d] updateEmployerUsingPUTNotFound", 404)
}

func (o *UpdateEmployerUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateEmployerUsingPUTInternalServerError creates a UpdateEmployerUsingPUTInternalServerError with default headers values
func NewUpdateEmployerUsingPUTInternalServerError() *UpdateEmployerUsingPUTInternalServerError {
	return &UpdateEmployerUsingPUTInternalServerError{}
}

/*
UpdateEmployerUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateEmployerUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update employer using p u t internal server error response has a 2xx status code
func (o *UpdateEmployerUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update employer using p u t internal server error response has a 3xx status code
func (o *UpdateEmployerUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update employer using p u t internal server error response has a 4xx status code
func (o *UpdateEmployerUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update employer using p u t internal server error response has a 5xx status code
func (o *UpdateEmployerUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update employer using p u t internal server error response a status code equal to that given
func (o *UpdateEmployerUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update employer using p u t internal server error response
func (o *UpdateEmployerUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateEmployerUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/employer][%d] updateEmployerUsingPUTInternalServerError", 500)
}

func (o *UpdateEmployerUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/employer][%d] updateEmployerUsingPUTInternalServerError", 500)
}

func (o *UpdateEmployerUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
