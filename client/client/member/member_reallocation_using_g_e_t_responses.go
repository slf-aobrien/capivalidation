// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// MemberReallocationUsingGETReader is a Reader for the MemberReallocationUsingGET structure.
type MemberReallocationUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MemberReallocationUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMemberReallocationUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMemberReallocationUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewMemberReallocationUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewMemberReallocationUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewMemberReallocationUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewMemberReallocationUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/member/doReallocation] memberReallocationUsingGET", response, response.Code())
	}
}

// NewMemberReallocationUsingGETOK creates a MemberReallocationUsingGETOK with default headers values
func NewMemberReallocationUsingGETOK() *MemberReallocationUsingGETOK {
	return &MemberReallocationUsingGETOK{}
}

/*
MemberReallocationUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type MemberReallocationUsingGETOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this member reallocation using g e t o k response has a 2xx status code
func (o *MemberReallocationUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this member reallocation using g e t o k response has a 3xx status code
func (o *MemberReallocationUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this member reallocation using g e t o k response has a 4xx status code
func (o *MemberReallocationUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this member reallocation using g e t o k response has a 5xx status code
func (o *MemberReallocationUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this member reallocation using g e t o k response a status code equal to that given
func (o *MemberReallocationUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the member reallocation using g e t o k response
func (o *MemberReallocationUsingGETOK) Code() int {
	return 200
}

func (o *MemberReallocationUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/doReallocation][%d] memberReallocationUsingGETOK %s", 200, payload)
}

func (o *MemberReallocationUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/doReallocation][%d] memberReallocationUsingGETOK %s", 200, payload)
}

func (o *MemberReallocationUsingGETOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *MemberReallocationUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMemberReallocationUsingGETBadRequest creates a MemberReallocationUsingGETBadRequest with default headers values
func NewMemberReallocationUsingGETBadRequest() *MemberReallocationUsingGETBadRequest {
	return &MemberReallocationUsingGETBadRequest{}
}

/*
MemberReallocationUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type MemberReallocationUsingGETBadRequest struct {
}

// IsSuccess returns true when this member reallocation using g e t bad request response has a 2xx status code
func (o *MemberReallocationUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this member reallocation using g e t bad request response has a 3xx status code
func (o *MemberReallocationUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this member reallocation using g e t bad request response has a 4xx status code
func (o *MemberReallocationUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this member reallocation using g e t bad request response has a 5xx status code
func (o *MemberReallocationUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this member reallocation using g e t bad request response a status code equal to that given
func (o *MemberReallocationUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the member reallocation using g e t bad request response
func (o *MemberReallocationUsingGETBadRequest) Code() int {
	return 400
}

func (o *MemberReallocationUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/doReallocation][%d] memberReallocationUsingGETBadRequest", 400)
}

func (o *MemberReallocationUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/doReallocation][%d] memberReallocationUsingGETBadRequest", 400)
}

func (o *MemberReallocationUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMemberReallocationUsingGETUnauthorized creates a MemberReallocationUsingGETUnauthorized with default headers values
func NewMemberReallocationUsingGETUnauthorized() *MemberReallocationUsingGETUnauthorized {
	return &MemberReallocationUsingGETUnauthorized{}
}

/*
MemberReallocationUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type MemberReallocationUsingGETUnauthorized struct {
}

// IsSuccess returns true when this member reallocation using g e t unauthorized response has a 2xx status code
func (o *MemberReallocationUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this member reallocation using g e t unauthorized response has a 3xx status code
func (o *MemberReallocationUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this member reallocation using g e t unauthorized response has a 4xx status code
func (o *MemberReallocationUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this member reallocation using g e t unauthorized response has a 5xx status code
func (o *MemberReallocationUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this member reallocation using g e t unauthorized response a status code equal to that given
func (o *MemberReallocationUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the member reallocation using g e t unauthorized response
func (o *MemberReallocationUsingGETUnauthorized) Code() int {
	return 401
}

func (o *MemberReallocationUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/doReallocation][%d] memberReallocationUsingGETUnauthorized", 401)
}

func (o *MemberReallocationUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/doReallocation][%d] memberReallocationUsingGETUnauthorized", 401)
}

func (o *MemberReallocationUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMemberReallocationUsingGETForbidden creates a MemberReallocationUsingGETForbidden with default headers values
func NewMemberReallocationUsingGETForbidden() *MemberReallocationUsingGETForbidden {
	return &MemberReallocationUsingGETForbidden{}
}

/*
MemberReallocationUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type MemberReallocationUsingGETForbidden struct {
}

// IsSuccess returns true when this member reallocation using g e t forbidden response has a 2xx status code
func (o *MemberReallocationUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this member reallocation using g e t forbidden response has a 3xx status code
func (o *MemberReallocationUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this member reallocation using g e t forbidden response has a 4xx status code
func (o *MemberReallocationUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this member reallocation using g e t forbidden response has a 5xx status code
func (o *MemberReallocationUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this member reallocation using g e t forbidden response a status code equal to that given
func (o *MemberReallocationUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the member reallocation using g e t forbidden response
func (o *MemberReallocationUsingGETForbidden) Code() int {
	return 403
}

func (o *MemberReallocationUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/doReallocation][%d] memberReallocationUsingGETForbidden", 403)
}

func (o *MemberReallocationUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/doReallocation][%d] memberReallocationUsingGETForbidden", 403)
}

func (o *MemberReallocationUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMemberReallocationUsingGETNotFound creates a MemberReallocationUsingGETNotFound with default headers values
func NewMemberReallocationUsingGETNotFound() *MemberReallocationUsingGETNotFound {
	return &MemberReallocationUsingGETNotFound{}
}

/*
MemberReallocationUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type MemberReallocationUsingGETNotFound struct {
}

// IsSuccess returns true when this member reallocation using g e t not found response has a 2xx status code
func (o *MemberReallocationUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this member reallocation using g e t not found response has a 3xx status code
func (o *MemberReallocationUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this member reallocation using g e t not found response has a 4xx status code
func (o *MemberReallocationUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this member reallocation using g e t not found response has a 5xx status code
func (o *MemberReallocationUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this member reallocation using g e t not found response a status code equal to that given
func (o *MemberReallocationUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the member reallocation using g e t not found response
func (o *MemberReallocationUsingGETNotFound) Code() int {
	return 404
}

func (o *MemberReallocationUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/doReallocation][%d] memberReallocationUsingGETNotFound", 404)
}

func (o *MemberReallocationUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/doReallocation][%d] memberReallocationUsingGETNotFound", 404)
}

func (o *MemberReallocationUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMemberReallocationUsingGETInternalServerError creates a MemberReallocationUsingGETInternalServerError with default headers values
func NewMemberReallocationUsingGETInternalServerError() *MemberReallocationUsingGETInternalServerError {
	return &MemberReallocationUsingGETInternalServerError{}
}

/*
MemberReallocationUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type MemberReallocationUsingGETInternalServerError struct {
}

// IsSuccess returns true when this member reallocation using g e t internal server error response has a 2xx status code
func (o *MemberReallocationUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this member reallocation using g e t internal server error response has a 3xx status code
func (o *MemberReallocationUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this member reallocation using g e t internal server error response has a 4xx status code
func (o *MemberReallocationUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this member reallocation using g e t internal server error response has a 5xx status code
func (o *MemberReallocationUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this member reallocation using g e t internal server error response a status code equal to that given
func (o *MemberReallocationUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the member reallocation using g e t internal server error response
func (o *MemberReallocationUsingGETInternalServerError) Code() int {
	return 500
}

func (o *MemberReallocationUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/doReallocation][%d] memberReallocationUsingGETInternalServerError", 500)
}

func (o *MemberReallocationUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/doReallocation][%d] memberReallocationUsingGETInternalServerError", 500)
}

func (o *MemberReallocationUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
