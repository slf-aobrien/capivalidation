// Code generated by go-swagger; DO NOT EDIT.

package error

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// HandlePostErrorUsingPOSTReader is a Reader for the HandlePostErrorUsingPOST structure.
type HandlePostErrorUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HandlePostErrorUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHandlePostErrorUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewHandlePostErrorUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewHandlePostErrorUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewHandlePostErrorUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewHandlePostErrorUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/error] handlePostErrorUsingPOST", response, response.Code())
	}
}

// NewHandlePostErrorUsingPOSTOK creates a HandlePostErrorUsingPOSTOK with default headers values
func NewHandlePostErrorUsingPOSTOK() *HandlePostErrorUsingPOSTOK {
	return &HandlePostErrorUsingPOSTOK{}
}

/*
HandlePostErrorUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type HandlePostErrorUsingPOSTOK struct {
}

// IsSuccess returns true when this handle post error using p o s t o k response has a 2xx status code
func (o *HandlePostErrorUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this handle post error using p o s t o k response has a 3xx status code
func (o *HandlePostErrorUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this handle post error using p o s t o k response has a 4xx status code
func (o *HandlePostErrorUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this handle post error using p o s t o k response has a 5xx status code
func (o *HandlePostErrorUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this handle post error using p o s t o k response a status code equal to that given
func (o *HandlePostErrorUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the handle post error using p o s t o k response
func (o *HandlePostErrorUsingPOSTOK) Code() int {
	return 200
}

func (o *HandlePostErrorUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/error][%d] handlePostErrorUsingPOSTOK", 200)
}

func (o *HandlePostErrorUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/error][%d] handlePostErrorUsingPOSTOK", 200)
}

func (o *HandlePostErrorUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHandlePostErrorUsingPOSTCreated creates a HandlePostErrorUsingPOSTCreated with default headers values
func NewHandlePostErrorUsingPOSTCreated() *HandlePostErrorUsingPOSTCreated {
	return &HandlePostErrorUsingPOSTCreated{}
}

/*
HandlePostErrorUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type HandlePostErrorUsingPOSTCreated struct {
}

// IsSuccess returns true when this handle post error using p o s t created response has a 2xx status code
func (o *HandlePostErrorUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this handle post error using p o s t created response has a 3xx status code
func (o *HandlePostErrorUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this handle post error using p o s t created response has a 4xx status code
func (o *HandlePostErrorUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this handle post error using p o s t created response has a 5xx status code
func (o *HandlePostErrorUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this handle post error using p o s t created response a status code equal to that given
func (o *HandlePostErrorUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the handle post error using p o s t created response
func (o *HandlePostErrorUsingPOSTCreated) Code() int {
	return 201
}

func (o *HandlePostErrorUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/error][%d] handlePostErrorUsingPOSTCreated", 201)
}

func (o *HandlePostErrorUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/error][%d] handlePostErrorUsingPOSTCreated", 201)
}

func (o *HandlePostErrorUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHandlePostErrorUsingPOSTUnauthorized creates a HandlePostErrorUsingPOSTUnauthorized with default headers values
func NewHandlePostErrorUsingPOSTUnauthorized() *HandlePostErrorUsingPOSTUnauthorized {
	return &HandlePostErrorUsingPOSTUnauthorized{}
}

/*
HandlePostErrorUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type HandlePostErrorUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this handle post error using p o s t unauthorized response has a 2xx status code
func (o *HandlePostErrorUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this handle post error using p o s t unauthorized response has a 3xx status code
func (o *HandlePostErrorUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this handle post error using p o s t unauthorized response has a 4xx status code
func (o *HandlePostErrorUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this handle post error using p o s t unauthorized response has a 5xx status code
func (o *HandlePostErrorUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this handle post error using p o s t unauthorized response a status code equal to that given
func (o *HandlePostErrorUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the handle post error using p o s t unauthorized response
func (o *HandlePostErrorUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *HandlePostErrorUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/error][%d] handlePostErrorUsingPOSTUnauthorized", 401)
}

func (o *HandlePostErrorUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/error][%d] handlePostErrorUsingPOSTUnauthorized", 401)
}

func (o *HandlePostErrorUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHandlePostErrorUsingPOSTForbidden creates a HandlePostErrorUsingPOSTForbidden with default headers values
func NewHandlePostErrorUsingPOSTForbidden() *HandlePostErrorUsingPOSTForbidden {
	return &HandlePostErrorUsingPOSTForbidden{}
}

/*
HandlePostErrorUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type HandlePostErrorUsingPOSTForbidden struct {
}

// IsSuccess returns true when this handle post error using p o s t forbidden response has a 2xx status code
func (o *HandlePostErrorUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this handle post error using p o s t forbidden response has a 3xx status code
func (o *HandlePostErrorUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this handle post error using p o s t forbidden response has a 4xx status code
func (o *HandlePostErrorUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this handle post error using p o s t forbidden response has a 5xx status code
func (o *HandlePostErrorUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this handle post error using p o s t forbidden response a status code equal to that given
func (o *HandlePostErrorUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the handle post error using p o s t forbidden response
func (o *HandlePostErrorUsingPOSTForbidden) Code() int {
	return 403
}

func (o *HandlePostErrorUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/error][%d] handlePostErrorUsingPOSTForbidden", 403)
}

func (o *HandlePostErrorUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/error][%d] handlePostErrorUsingPOSTForbidden", 403)
}

func (o *HandlePostErrorUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHandlePostErrorUsingPOSTNotFound creates a HandlePostErrorUsingPOSTNotFound with default headers values
func NewHandlePostErrorUsingPOSTNotFound() *HandlePostErrorUsingPOSTNotFound {
	return &HandlePostErrorUsingPOSTNotFound{}
}

/*
HandlePostErrorUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type HandlePostErrorUsingPOSTNotFound struct {
}

// IsSuccess returns true when this handle post error using p o s t not found response has a 2xx status code
func (o *HandlePostErrorUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this handle post error using p o s t not found response has a 3xx status code
func (o *HandlePostErrorUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this handle post error using p o s t not found response has a 4xx status code
func (o *HandlePostErrorUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this handle post error using p o s t not found response has a 5xx status code
func (o *HandlePostErrorUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this handle post error using p o s t not found response a status code equal to that given
func (o *HandlePostErrorUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the handle post error using p o s t not found response
func (o *HandlePostErrorUsingPOSTNotFound) Code() int {
	return 404
}

func (o *HandlePostErrorUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/error][%d] handlePostErrorUsingPOSTNotFound", 404)
}

func (o *HandlePostErrorUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/error][%d] handlePostErrorUsingPOSTNotFound", 404)
}

func (o *HandlePostErrorUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
