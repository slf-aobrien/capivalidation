// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateMemberMiddleNameUsingPUTReader is a Reader for the UpdateMemberMiddleNameUsingPUT structure.
type UpdateMemberMiddleNameUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMemberMiddleNameUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateMemberMiddleNameUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateMemberMiddleNameUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateMemberMiddleNameUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateMemberMiddleNameUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateMemberMiddleNameUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateMemberMiddleNameUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateMemberMiddleNameUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/member/update/midName] updateMemberMiddleNameUsingPUT", response, response.Code())
	}
}

// NewUpdateMemberMiddleNameUsingPUTOK creates a UpdateMemberMiddleNameUsingPUTOK with default headers values
func NewUpdateMemberMiddleNameUsingPUTOK() *UpdateMemberMiddleNameUsingPUTOK {
	return &UpdateMemberMiddleNameUsingPUTOK{}
}

/*
UpdateMemberMiddleNameUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateMemberMiddleNameUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update member middle name using p u t o k response has a 2xx status code
func (o *UpdateMemberMiddleNameUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member middle name using p u t o k response has a 3xx status code
func (o *UpdateMemberMiddleNameUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member middle name using p u t o k response has a 4xx status code
func (o *UpdateMemberMiddleNameUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member middle name using p u t o k response has a 5xx status code
func (o *UpdateMemberMiddleNameUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update member middle name using p u t o k response a status code equal to that given
func (o *UpdateMemberMiddleNameUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update member middle name using p u t o k response
func (o *UpdateMemberMiddleNameUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateMemberMiddleNameUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/midName][%d] updateMemberMiddleNameUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberMiddleNameUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/midName][%d] updateMemberMiddleNameUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberMiddleNameUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateMemberMiddleNameUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMemberMiddleNameUsingPUTCreated creates a UpdateMemberMiddleNameUsingPUTCreated with default headers values
func NewUpdateMemberMiddleNameUsingPUTCreated() *UpdateMemberMiddleNameUsingPUTCreated {
	return &UpdateMemberMiddleNameUsingPUTCreated{}
}

/*
UpdateMemberMiddleNameUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateMemberMiddleNameUsingPUTCreated struct {
}

// IsSuccess returns true when this update member middle name using p u t created response has a 2xx status code
func (o *UpdateMemberMiddleNameUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member middle name using p u t created response has a 3xx status code
func (o *UpdateMemberMiddleNameUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member middle name using p u t created response has a 4xx status code
func (o *UpdateMemberMiddleNameUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member middle name using p u t created response has a 5xx status code
func (o *UpdateMemberMiddleNameUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update member middle name using p u t created response a status code equal to that given
func (o *UpdateMemberMiddleNameUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update member middle name using p u t created response
func (o *UpdateMemberMiddleNameUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateMemberMiddleNameUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/midName][%d] updateMemberMiddleNameUsingPUTCreated", 201)
}

func (o *UpdateMemberMiddleNameUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/midName][%d] updateMemberMiddleNameUsingPUTCreated", 201)
}

func (o *UpdateMemberMiddleNameUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberMiddleNameUsingPUTBadRequest creates a UpdateMemberMiddleNameUsingPUTBadRequest with default headers values
func NewUpdateMemberMiddleNameUsingPUTBadRequest() *UpdateMemberMiddleNameUsingPUTBadRequest {
	return &UpdateMemberMiddleNameUsingPUTBadRequest{}
}

/*
UpdateMemberMiddleNameUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateMemberMiddleNameUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update member middle name using p u t bad request response has a 2xx status code
func (o *UpdateMemberMiddleNameUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member middle name using p u t bad request response has a 3xx status code
func (o *UpdateMemberMiddleNameUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member middle name using p u t bad request response has a 4xx status code
func (o *UpdateMemberMiddleNameUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member middle name using p u t bad request response has a 5xx status code
func (o *UpdateMemberMiddleNameUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update member middle name using p u t bad request response a status code equal to that given
func (o *UpdateMemberMiddleNameUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update member middle name using p u t bad request response
func (o *UpdateMemberMiddleNameUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateMemberMiddleNameUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/midName][%d] updateMemberMiddleNameUsingPUTBadRequest", 400)
}

func (o *UpdateMemberMiddleNameUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/midName][%d] updateMemberMiddleNameUsingPUTBadRequest", 400)
}

func (o *UpdateMemberMiddleNameUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberMiddleNameUsingPUTUnauthorized creates a UpdateMemberMiddleNameUsingPUTUnauthorized with default headers values
func NewUpdateMemberMiddleNameUsingPUTUnauthorized() *UpdateMemberMiddleNameUsingPUTUnauthorized {
	return &UpdateMemberMiddleNameUsingPUTUnauthorized{}
}

/*
UpdateMemberMiddleNameUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateMemberMiddleNameUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update member middle name using p u t unauthorized response has a 2xx status code
func (o *UpdateMemberMiddleNameUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member middle name using p u t unauthorized response has a 3xx status code
func (o *UpdateMemberMiddleNameUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member middle name using p u t unauthorized response has a 4xx status code
func (o *UpdateMemberMiddleNameUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member middle name using p u t unauthorized response has a 5xx status code
func (o *UpdateMemberMiddleNameUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update member middle name using p u t unauthorized response a status code equal to that given
func (o *UpdateMemberMiddleNameUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update member middle name using p u t unauthorized response
func (o *UpdateMemberMiddleNameUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateMemberMiddleNameUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/midName][%d] updateMemberMiddleNameUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberMiddleNameUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/midName][%d] updateMemberMiddleNameUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberMiddleNameUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberMiddleNameUsingPUTForbidden creates a UpdateMemberMiddleNameUsingPUTForbidden with default headers values
func NewUpdateMemberMiddleNameUsingPUTForbidden() *UpdateMemberMiddleNameUsingPUTForbidden {
	return &UpdateMemberMiddleNameUsingPUTForbidden{}
}

/*
UpdateMemberMiddleNameUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateMemberMiddleNameUsingPUTForbidden struct {
}

// IsSuccess returns true when this update member middle name using p u t forbidden response has a 2xx status code
func (o *UpdateMemberMiddleNameUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member middle name using p u t forbidden response has a 3xx status code
func (o *UpdateMemberMiddleNameUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member middle name using p u t forbidden response has a 4xx status code
func (o *UpdateMemberMiddleNameUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member middle name using p u t forbidden response has a 5xx status code
func (o *UpdateMemberMiddleNameUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update member middle name using p u t forbidden response a status code equal to that given
func (o *UpdateMemberMiddleNameUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update member middle name using p u t forbidden response
func (o *UpdateMemberMiddleNameUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateMemberMiddleNameUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/midName][%d] updateMemberMiddleNameUsingPUTForbidden", 403)
}

func (o *UpdateMemberMiddleNameUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/midName][%d] updateMemberMiddleNameUsingPUTForbidden", 403)
}

func (o *UpdateMemberMiddleNameUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberMiddleNameUsingPUTNotFound creates a UpdateMemberMiddleNameUsingPUTNotFound with default headers values
func NewUpdateMemberMiddleNameUsingPUTNotFound() *UpdateMemberMiddleNameUsingPUTNotFound {
	return &UpdateMemberMiddleNameUsingPUTNotFound{}
}

/*
UpdateMemberMiddleNameUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateMemberMiddleNameUsingPUTNotFound struct {
}

// IsSuccess returns true when this update member middle name using p u t not found response has a 2xx status code
func (o *UpdateMemberMiddleNameUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member middle name using p u t not found response has a 3xx status code
func (o *UpdateMemberMiddleNameUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member middle name using p u t not found response has a 4xx status code
func (o *UpdateMemberMiddleNameUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member middle name using p u t not found response has a 5xx status code
func (o *UpdateMemberMiddleNameUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update member middle name using p u t not found response a status code equal to that given
func (o *UpdateMemberMiddleNameUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update member middle name using p u t not found response
func (o *UpdateMemberMiddleNameUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateMemberMiddleNameUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/midName][%d] updateMemberMiddleNameUsingPUTNotFound", 404)
}

func (o *UpdateMemberMiddleNameUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/midName][%d] updateMemberMiddleNameUsingPUTNotFound", 404)
}

func (o *UpdateMemberMiddleNameUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberMiddleNameUsingPUTInternalServerError creates a UpdateMemberMiddleNameUsingPUTInternalServerError with default headers values
func NewUpdateMemberMiddleNameUsingPUTInternalServerError() *UpdateMemberMiddleNameUsingPUTInternalServerError {
	return &UpdateMemberMiddleNameUsingPUTInternalServerError{}
}

/*
UpdateMemberMiddleNameUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateMemberMiddleNameUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update member middle name using p u t internal server error response has a 2xx status code
func (o *UpdateMemberMiddleNameUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member middle name using p u t internal server error response has a 3xx status code
func (o *UpdateMemberMiddleNameUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member middle name using p u t internal server error response has a 4xx status code
func (o *UpdateMemberMiddleNameUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member middle name using p u t internal server error response has a 5xx status code
func (o *UpdateMemberMiddleNameUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update member middle name using p u t internal server error response a status code equal to that given
func (o *UpdateMemberMiddleNameUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update member middle name using p u t internal server error response
func (o *UpdateMemberMiddleNameUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateMemberMiddleNameUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/midName][%d] updateMemberMiddleNameUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberMiddleNameUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/midName][%d] updateMemberMiddleNameUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberMiddleNameUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
