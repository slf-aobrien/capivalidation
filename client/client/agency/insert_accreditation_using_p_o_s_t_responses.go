// Code generated by go-swagger; DO NOT EDIT.

package agency

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// InsertAccreditationUsingPOSTReader is a Reader for the InsertAccreditationUsingPOST structure.
type InsertAccreditationUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InsertAccreditationUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInsertAccreditationUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewInsertAccreditationUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInsertAccreditationUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewInsertAccreditationUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInsertAccreditationUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInsertAccreditationUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInsertAccreditationUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/agency/accreditation] insertAccreditationUsingPOST", response, response.Code())
	}
}

// NewInsertAccreditationUsingPOSTOK creates a InsertAccreditationUsingPOSTOK with default headers values
func NewInsertAccreditationUsingPOSTOK() *InsertAccreditationUsingPOSTOK {
	return &InsertAccreditationUsingPOSTOK{}
}

/*
InsertAccreditationUsingPOSTOK describes a response with status code 200, with default header values.

Success
*/
type InsertAccreditationUsingPOSTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this insert accreditation using p o s t o k response has a 2xx status code
func (o *InsertAccreditationUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this insert accreditation using p o s t o k response has a 3xx status code
func (o *InsertAccreditationUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert accreditation using p o s t o k response has a 4xx status code
func (o *InsertAccreditationUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this insert accreditation using p o s t o k response has a 5xx status code
func (o *InsertAccreditationUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this insert accreditation using p o s t o k response a status code equal to that given
func (o *InsertAccreditationUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the insert accreditation using p o s t o k response
func (o *InsertAccreditationUsingPOSTOK) Code() int {
	return 200
}

func (o *InsertAccreditationUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/agency/accreditation][%d] insertAccreditationUsingPOSTOK %s", 200, payload)
}

func (o *InsertAccreditationUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/agency/accreditation][%d] insertAccreditationUsingPOSTOK %s", 200, payload)
}

func (o *InsertAccreditationUsingPOSTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *InsertAccreditationUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInsertAccreditationUsingPOSTCreated creates a InsertAccreditationUsingPOSTCreated with default headers values
func NewInsertAccreditationUsingPOSTCreated() *InsertAccreditationUsingPOSTCreated {
	return &InsertAccreditationUsingPOSTCreated{}
}

/*
InsertAccreditationUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type InsertAccreditationUsingPOSTCreated struct {
}

// IsSuccess returns true when this insert accreditation using p o s t created response has a 2xx status code
func (o *InsertAccreditationUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this insert accreditation using p o s t created response has a 3xx status code
func (o *InsertAccreditationUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert accreditation using p o s t created response has a 4xx status code
func (o *InsertAccreditationUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this insert accreditation using p o s t created response has a 5xx status code
func (o *InsertAccreditationUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this insert accreditation using p o s t created response a status code equal to that given
func (o *InsertAccreditationUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the insert accreditation using p o s t created response
func (o *InsertAccreditationUsingPOSTCreated) Code() int {
	return 201
}

func (o *InsertAccreditationUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/agency/accreditation][%d] insertAccreditationUsingPOSTCreated", 201)
}

func (o *InsertAccreditationUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/agency/accreditation][%d] insertAccreditationUsingPOSTCreated", 201)
}

func (o *InsertAccreditationUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertAccreditationUsingPOSTBadRequest creates a InsertAccreditationUsingPOSTBadRequest with default headers values
func NewInsertAccreditationUsingPOSTBadRequest() *InsertAccreditationUsingPOSTBadRequest {
	return &InsertAccreditationUsingPOSTBadRequest{}
}

/*
InsertAccreditationUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type InsertAccreditationUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this insert accreditation using p o s t bad request response has a 2xx status code
func (o *InsertAccreditationUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert accreditation using p o s t bad request response has a 3xx status code
func (o *InsertAccreditationUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert accreditation using p o s t bad request response has a 4xx status code
func (o *InsertAccreditationUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert accreditation using p o s t bad request response has a 5xx status code
func (o *InsertAccreditationUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this insert accreditation using p o s t bad request response a status code equal to that given
func (o *InsertAccreditationUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the insert accreditation using p o s t bad request response
func (o *InsertAccreditationUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *InsertAccreditationUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/agency/accreditation][%d] insertAccreditationUsingPOSTBadRequest", 400)
}

func (o *InsertAccreditationUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/agency/accreditation][%d] insertAccreditationUsingPOSTBadRequest", 400)
}

func (o *InsertAccreditationUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertAccreditationUsingPOSTUnauthorized creates a InsertAccreditationUsingPOSTUnauthorized with default headers values
func NewInsertAccreditationUsingPOSTUnauthorized() *InsertAccreditationUsingPOSTUnauthorized {
	return &InsertAccreditationUsingPOSTUnauthorized{}
}

/*
InsertAccreditationUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type InsertAccreditationUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this insert accreditation using p o s t unauthorized response has a 2xx status code
func (o *InsertAccreditationUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert accreditation using p o s t unauthorized response has a 3xx status code
func (o *InsertAccreditationUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert accreditation using p o s t unauthorized response has a 4xx status code
func (o *InsertAccreditationUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert accreditation using p o s t unauthorized response has a 5xx status code
func (o *InsertAccreditationUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this insert accreditation using p o s t unauthorized response a status code equal to that given
func (o *InsertAccreditationUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the insert accreditation using p o s t unauthorized response
func (o *InsertAccreditationUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *InsertAccreditationUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/agency/accreditation][%d] insertAccreditationUsingPOSTUnauthorized", 401)
}

func (o *InsertAccreditationUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/agency/accreditation][%d] insertAccreditationUsingPOSTUnauthorized", 401)
}

func (o *InsertAccreditationUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertAccreditationUsingPOSTForbidden creates a InsertAccreditationUsingPOSTForbidden with default headers values
func NewInsertAccreditationUsingPOSTForbidden() *InsertAccreditationUsingPOSTForbidden {
	return &InsertAccreditationUsingPOSTForbidden{}
}

/*
InsertAccreditationUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type InsertAccreditationUsingPOSTForbidden struct {
}

// IsSuccess returns true when this insert accreditation using p o s t forbidden response has a 2xx status code
func (o *InsertAccreditationUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert accreditation using p o s t forbidden response has a 3xx status code
func (o *InsertAccreditationUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert accreditation using p o s t forbidden response has a 4xx status code
func (o *InsertAccreditationUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert accreditation using p o s t forbidden response has a 5xx status code
func (o *InsertAccreditationUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this insert accreditation using p o s t forbidden response a status code equal to that given
func (o *InsertAccreditationUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the insert accreditation using p o s t forbidden response
func (o *InsertAccreditationUsingPOSTForbidden) Code() int {
	return 403
}

func (o *InsertAccreditationUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/agency/accreditation][%d] insertAccreditationUsingPOSTForbidden", 403)
}

func (o *InsertAccreditationUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/agency/accreditation][%d] insertAccreditationUsingPOSTForbidden", 403)
}

func (o *InsertAccreditationUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertAccreditationUsingPOSTNotFound creates a InsertAccreditationUsingPOSTNotFound with default headers values
func NewInsertAccreditationUsingPOSTNotFound() *InsertAccreditationUsingPOSTNotFound {
	return &InsertAccreditationUsingPOSTNotFound{}
}

/*
InsertAccreditationUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type InsertAccreditationUsingPOSTNotFound struct {
}

// IsSuccess returns true when this insert accreditation using p o s t not found response has a 2xx status code
func (o *InsertAccreditationUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert accreditation using p o s t not found response has a 3xx status code
func (o *InsertAccreditationUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert accreditation using p o s t not found response has a 4xx status code
func (o *InsertAccreditationUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert accreditation using p o s t not found response has a 5xx status code
func (o *InsertAccreditationUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this insert accreditation using p o s t not found response a status code equal to that given
func (o *InsertAccreditationUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the insert accreditation using p o s t not found response
func (o *InsertAccreditationUsingPOSTNotFound) Code() int {
	return 404
}

func (o *InsertAccreditationUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/agency/accreditation][%d] insertAccreditationUsingPOSTNotFound", 404)
}

func (o *InsertAccreditationUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/agency/accreditation][%d] insertAccreditationUsingPOSTNotFound", 404)
}

func (o *InsertAccreditationUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertAccreditationUsingPOSTInternalServerError creates a InsertAccreditationUsingPOSTInternalServerError with default headers values
func NewInsertAccreditationUsingPOSTInternalServerError() *InsertAccreditationUsingPOSTInternalServerError {
	return &InsertAccreditationUsingPOSTInternalServerError{}
}

/*
InsertAccreditationUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type InsertAccreditationUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this insert accreditation using p o s t internal server error response has a 2xx status code
func (o *InsertAccreditationUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert accreditation using p o s t internal server error response has a 3xx status code
func (o *InsertAccreditationUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert accreditation using p o s t internal server error response has a 4xx status code
func (o *InsertAccreditationUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this insert accreditation using p o s t internal server error response has a 5xx status code
func (o *InsertAccreditationUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this insert accreditation using p o s t internal server error response a status code equal to that given
func (o *InsertAccreditationUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the insert accreditation using p o s t internal server error response
func (o *InsertAccreditationUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *InsertAccreditationUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/agency/accreditation][%d] insertAccreditationUsingPOSTInternalServerError", 500)
}

func (o *InsertAccreditationUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/agency/accreditation][%d] insertAccreditationUsingPOSTInternalServerError", 500)
}

func (o *InsertAccreditationUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
