// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateMemberBenefitOptionUsingPOSTReader is a Reader for the UpdateMemberBenefitOptionUsingPOST structure.
type UpdateMemberBenefitOptionUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMemberBenefitOptionUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateMemberBenefitOptionUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateMemberBenefitOptionUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateMemberBenefitOptionUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateMemberBenefitOptionUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateMemberBenefitOptionUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateMemberBenefitOptionUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateMemberBenefitOptionUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/member/memberBenefitOptions] updateMemberBenefitOptionUsingPOST", response, response.Code())
	}
}

// NewUpdateMemberBenefitOptionUsingPOSTOK creates a UpdateMemberBenefitOptionUsingPOSTOK with default headers values
func NewUpdateMemberBenefitOptionUsingPOSTOK() *UpdateMemberBenefitOptionUsingPOSTOK {
	return &UpdateMemberBenefitOptionUsingPOSTOK{}
}

/*
UpdateMemberBenefitOptionUsingPOSTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateMemberBenefitOptionUsingPOSTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update member benefit option using p o s t o k response has a 2xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member benefit option using p o s t o k response has a 3xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member benefit option using p o s t o k response has a 4xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member benefit option using p o s t o k response has a 5xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update member benefit option using p o s t o k response a status code equal to that given
func (o *UpdateMemberBenefitOptionUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update member benefit option using p o s t o k response
func (o *UpdateMemberBenefitOptionUsingPOSTOK) Code() int {
	return 200
}

func (o *UpdateMemberBenefitOptionUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/member/memberBenefitOptions][%d] updateMemberBenefitOptionUsingPOSTOK %s", 200, payload)
}

func (o *UpdateMemberBenefitOptionUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/member/memberBenefitOptions][%d] updateMemberBenefitOptionUsingPOSTOK %s", 200, payload)
}

func (o *UpdateMemberBenefitOptionUsingPOSTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateMemberBenefitOptionUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMemberBenefitOptionUsingPOSTCreated creates a UpdateMemberBenefitOptionUsingPOSTCreated with default headers values
func NewUpdateMemberBenefitOptionUsingPOSTCreated() *UpdateMemberBenefitOptionUsingPOSTCreated {
	return &UpdateMemberBenefitOptionUsingPOSTCreated{}
}

/*
UpdateMemberBenefitOptionUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateMemberBenefitOptionUsingPOSTCreated struct {
}

// IsSuccess returns true when this update member benefit option using p o s t created response has a 2xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member benefit option using p o s t created response has a 3xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member benefit option using p o s t created response has a 4xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member benefit option using p o s t created response has a 5xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update member benefit option using p o s t created response a status code equal to that given
func (o *UpdateMemberBenefitOptionUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update member benefit option using p o s t created response
func (o *UpdateMemberBenefitOptionUsingPOSTCreated) Code() int {
	return 201
}

func (o *UpdateMemberBenefitOptionUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/memberBenefitOptions][%d] updateMemberBenefitOptionUsingPOSTCreated", 201)
}

func (o *UpdateMemberBenefitOptionUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/memberBenefitOptions][%d] updateMemberBenefitOptionUsingPOSTCreated", 201)
}

func (o *UpdateMemberBenefitOptionUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberBenefitOptionUsingPOSTBadRequest creates a UpdateMemberBenefitOptionUsingPOSTBadRequest with default headers values
func NewUpdateMemberBenefitOptionUsingPOSTBadRequest() *UpdateMemberBenefitOptionUsingPOSTBadRequest {
	return &UpdateMemberBenefitOptionUsingPOSTBadRequest{}
}

/*
UpdateMemberBenefitOptionUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateMemberBenefitOptionUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this update member benefit option using p o s t bad request response has a 2xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member benefit option using p o s t bad request response has a 3xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member benefit option using p o s t bad request response has a 4xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member benefit option using p o s t bad request response has a 5xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update member benefit option using p o s t bad request response a status code equal to that given
func (o *UpdateMemberBenefitOptionUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update member benefit option using p o s t bad request response
func (o *UpdateMemberBenefitOptionUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *UpdateMemberBenefitOptionUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/memberBenefitOptions][%d] updateMemberBenefitOptionUsingPOSTBadRequest", 400)
}

func (o *UpdateMemberBenefitOptionUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/memberBenefitOptions][%d] updateMemberBenefitOptionUsingPOSTBadRequest", 400)
}

func (o *UpdateMemberBenefitOptionUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberBenefitOptionUsingPOSTUnauthorized creates a UpdateMemberBenefitOptionUsingPOSTUnauthorized with default headers values
func NewUpdateMemberBenefitOptionUsingPOSTUnauthorized() *UpdateMemberBenefitOptionUsingPOSTUnauthorized {
	return &UpdateMemberBenefitOptionUsingPOSTUnauthorized{}
}

/*
UpdateMemberBenefitOptionUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateMemberBenefitOptionUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this update member benefit option using p o s t unauthorized response has a 2xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member benefit option using p o s t unauthorized response has a 3xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member benefit option using p o s t unauthorized response has a 4xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member benefit option using p o s t unauthorized response has a 5xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update member benefit option using p o s t unauthorized response a status code equal to that given
func (o *UpdateMemberBenefitOptionUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update member benefit option using p o s t unauthorized response
func (o *UpdateMemberBenefitOptionUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *UpdateMemberBenefitOptionUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/memberBenefitOptions][%d] updateMemberBenefitOptionUsingPOSTUnauthorized", 401)
}

func (o *UpdateMemberBenefitOptionUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/memberBenefitOptions][%d] updateMemberBenefitOptionUsingPOSTUnauthorized", 401)
}

func (o *UpdateMemberBenefitOptionUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberBenefitOptionUsingPOSTForbidden creates a UpdateMemberBenefitOptionUsingPOSTForbidden with default headers values
func NewUpdateMemberBenefitOptionUsingPOSTForbidden() *UpdateMemberBenefitOptionUsingPOSTForbidden {
	return &UpdateMemberBenefitOptionUsingPOSTForbidden{}
}

/*
UpdateMemberBenefitOptionUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateMemberBenefitOptionUsingPOSTForbidden struct {
}

// IsSuccess returns true when this update member benefit option using p o s t forbidden response has a 2xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member benefit option using p o s t forbidden response has a 3xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member benefit option using p o s t forbidden response has a 4xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member benefit option using p o s t forbidden response has a 5xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update member benefit option using p o s t forbidden response a status code equal to that given
func (o *UpdateMemberBenefitOptionUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update member benefit option using p o s t forbidden response
func (o *UpdateMemberBenefitOptionUsingPOSTForbidden) Code() int {
	return 403
}

func (o *UpdateMemberBenefitOptionUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/memberBenefitOptions][%d] updateMemberBenefitOptionUsingPOSTForbidden", 403)
}

func (o *UpdateMemberBenefitOptionUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/memberBenefitOptions][%d] updateMemberBenefitOptionUsingPOSTForbidden", 403)
}

func (o *UpdateMemberBenefitOptionUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberBenefitOptionUsingPOSTNotFound creates a UpdateMemberBenefitOptionUsingPOSTNotFound with default headers values
func NewUpdateMemberBenefitOptionUsingPOSTNotFound() *UpdateMemberBenefitOptionUsingPOSTNotFound {
	return &UpdateMemberBenefitOptionUsingPOSTNotFound{}
}

/*
UpdateMemberBenefitOptionUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateMemberBenefitOptionUsingPOSTNotFound struct {
}

// IsSuccess returns true when this update member benefit option using p o s t not found response has a 2xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member benefit option using p o s t not found response has a 3xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member benefit option using p o s t not found response has a 4xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member benefit option using p o s t not found response has a 5xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update member benefit option using p o s t not found response a status code equal to that given
func (o *UpdateMemberBenefitOptionUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update member benefit option using p o s t not found response
func (o *UpdateMemberBenefitOptionUsingPOSTNotFound) Code() int {
	return 404
}

func (o *UpdateMemberBenefitOptionUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/memberBenefitOptions][%d] updateMemberBenefitOptionUsingPOSTNotFound", 404)
}

func (o *UpdateMemberBenefitOptionUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/memberBenefitOptions][%d] updateMemberBenefitOptionUsingPOSTNotFound", 404)
}

func (o *UpdateMemberBenefitOptionUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberBenefitOptionUsingPOSTInternalServerError creates a UpdateMemberBenefitOptionUsingPOSTInternalServerError with default headers values
func NewUpdateMemberBenefitOptionUsingPOSTInternalServerError() *UpdateMemberBenefitOptionUsingPOSTInternalServerError {
	return &UpdateMemberBenefitOptionUsingPOSTInternalServerError{}
}

/*
UpdateMemberBenefitOptionUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateMemberBenefitOptionUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this update member benefit option using p o s t internal server error response has a 2xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member benefit option using p o s t internal server error response has a 3xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member benefit option using p o s t internal server error response has a 4xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member benefit option using p o s t internal server error response has a 5xx status code
func (o *UpdateMemberBenefitOptionUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update member benefit option using p o s t internal server error response a status code equal to that given
func (o *UpdateMemberBenefitOptionUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update member benefit option using p o s t internal server error response
func (o *UpdateMemberBenefitOptionUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *UpdateMemberBenefitOptionUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/memberBenefitOptions][%d] updateMemberBenefitOptionUsingPOSTInternalServerError", 500)
}

func (o *UpdateMemberBenefitOptionUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/memberBenefitOptions][%d] updateMemberBenefitOptionUsingPOSTInternalServerError", 500)
}

func (o *UpdateMemberBenefitOptionUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
