// Code generated by go-swagger; DO NOT EDIT.

package agency

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// NewUpdateAgencyUsingPUTParams creates a new UpdateAgencyUsingPUTParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateAgencyUsingPUTParams() *UpdateAgencyUsingPUTParams {
	return &UpdateAgencyUsingPUTParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateAgencyUsingPUTParamsWithTimeout creates a new UpdateAgencyUsingPUTParams object
// with the ability to set a timeout on a request.
func NewUpdateAgencyUsingPUTParamsWithTimeout(timeout time.Duration) *UpdateAgencyUsingPUTParams {
	return &UpdateAgencyUsingPUTParams{
		timeout: timeout,
	}
}

// NewUpdateAgencyUsingPUTParamsWithContext creates a new UpdateAgencyUsingPUTParams object
// with the ability to set a context for a request.
func NewUpdateAgencyUsingPUTParamsWithContext(ctx context.Context) *UpdateAgencyUsingPUTParams {
	return &UpdateAgencyUsingPUTParams{
		Context: ctx,
	}
}

// NewUpdateAgencyUsingPUTParamsWithHTTPClient creates a new UpdateAgencyUsingPUTParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateAgencyUsingPUTParamsWithHTTPClient(client *http.Client) *UpdateAgencyUsingPUTParams {
	return &UpdateAgencyUsingPUTParams{
		HTTPClient: client,
	}
}

/*
UpdateAgencyUsingPUTParams contains all the parameters to send to the API endpoint

	for the update agency using p u t operation.

	Typically these are written to a http.Request.
*/
type UpdateAgencyUsingPUTParams struct {

	/* AgencyID.

	   agencyId
	*/
	AgencyID *models.AgencyIDDTO

	/* AgencyStatusCode.

	   agencyStatusCode
	*/
	AgencyStatusCode string

	/* EffectiveDate.

	   effectiveDate
	*/
	EffectiveDate string

	/* GroupOfficeNumber.

	   groupOfficeNumber
	*/
	GroupOfficeNumber string

	/* RequestApplication.

	   requestApplication
	*/
	RequestApplication string

	/* RequestUser.

	   requestUser
	*/
	RequestUser string

	/* VarianceFormat.

	   varianceFormat
	*/
	VarianceFormat string

	/* VarianceLevel.

	   varianceLevel
	*/
	VarianceLevel string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update agency using p u t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateAgencyUsingPUTParams) WithDefaults() *UpdateAgencyUsingPUTParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update agency using p u t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateAgencyUsingPUTParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) WithTimeout(timeout time.Duration) *UpdateAgencyUsingPUTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) WithContext(ctx context.Context) *UpdateAgencyUsingPUTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) WithHTTPClient(client *http.Client) *UpdateAgencyUsingPUTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAgencyID adds the agencyID to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) WithAgencyID(agencyID *models.AgencyIDDTO) *UpdateAgencyUsingPUTParams {
	o.SetAgencyID(agencyID)
	return o
}

// SetAgencyID adds the agencyId to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) SetAgencyID(agencyID *models.AgencyIDDTO) {
	o.AgencyID = agencyID
}

// WithAgencyStatusCode adds the agencyStatusCode to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) WithAgencyStatusCode(agencyStatusCode string) *UpdateAgencyUsingPUTParams {
	o.SetAgencyStatusCode(agencyStatusCode)
	return o
}

// SetAgencyStatusCode adds the agencyStatusCode to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) SetAgencyStatusCode(agencyStatusCode string) {
	o.AgencyStatusCode = agencyStatusCode
}

// WithEffectiveDate adds the effectiveDate to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) WithEffectiveDate(effectiveDate string) *UpdateAgencyUsingPUTParams {
	o.SetEffectiveDate(effectiveDate)
	return o
}

// SetEffectiveDate adds the effectiveDate to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) SetEffectiveDate(effectiveDate string) {
	o.EffectiveDate = effectiveDate
}

// WithGroupOfficeNumber adds the groupOfficeNumber to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) WithGroupOfficeNumber(groupOfficeNumber string) *UpdateAgencyUsingPUTParams {
	o.SetGroupOfficeNumber(groupOfficeNumber)
	return o
}

// SetGroupOfficeNumber adds the groupOfficeNumber to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) SetGroupOfficeNumber(groupOfficeNumber string) {
	o.GroupOfficeNumber = groupOfficeNumber
}

// WithRequestApplication adds the requestApplication to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) WithRequestApplication(requestApplication string) *UpdateAgencyUsingPUTParams {
	o.SetRequestApplication(requestApplication)
	return o
}

// SetRequestApplication adds the requestApplication to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) SetRequestApplication(requestApplication string) {
	o.RequestApplication = requestApplication
}

// WithRequestUser adds the requestUser to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) WithRequestUser(requestUser string) *UpdateAgencyUsingPUTParams {
	o.SetRequestUser(requestUser)
	return o
}

// SetRequestUser adds the requestUser to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) SetRequestUser(requestUser string) {
	o.RequestUser = requestUser
}

// WithVarianceFormat adds the varianceFormat to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) WithVarianceFormat(varianceFormat string) *UpdateAgencyUsingPUTParams {
	o.SetVarianceFormat(varianceFormat)
	return o
}

// SetVarianceFormat adds the varianceFormat to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) SetVarianceFormat(varianceFormat string) {
	o.VarianceFormat = varianceFormat
}

// WithVarianceLevel adds the varianceLevel to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) WithVarianceLevel(varianceLevel string) *UpdateAgencyUsingPUTParams {
	o.SetVarianceLevel(varianceLevel)
	return o
}

// SetVarianceLevel adds the varianceLevel to the update agency using p u t params
func (o *UpdateAgencyUsingPUTParams) SetVarianceLevel(varianceLevel string) {
	o.VarianceLevel = varianceLevel
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateAgencyUsingPUTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.AgencyID != nil {
		if err := r.SetBodyParam(o.AgencyID); err != nil {
			return err
		}
	}

	// query param agencyStatusCode
	qrAgencyStatusCode := o.AgencyStatusCode
	qAgencyStatusCode := qrAgencyStatusCode
	if qAgencyStatusCode != "" {

		if err := r.SetQueryParam("agencyStatusCode", qAgencyStatusCode); err != nil {
			return err
		}
	}

	// query param effectiveDate
	qrEffectiveDate := o.EffectiveDate
	qEffectiveDate := qrEffectiveDate
	if qEffectiveDate != "" {

		if err := r.SetQueryParam("effectiveDate", qEffectiveDate); err != nil {
			return err
		}
	}

	// query param groupOfficeNumber
	qrGroupOfficeNumber := o.GroupOfficeNumber
	qGroupOfficeNumber := qrGroupOfficeNumber
	if qGroupOfficeNumber != "" {

		if err := r.SetQueryParam("groupOfficeNumber", qGroupOfficeNumber); err != nil {
			return err
		}
	}

	// query param requestApplication
	qrRequestApplication := o.RequestApplication
	qRequestApplication := qrRequestApplication
	if qRequestApplication != "" {

		if err := r.SetQueryParam("requestApplication", qRequestApplication); err != nil {
			return err
		}
	}

	// query param requestUser
	qrRequestUser := o.RequestUser
	qRequestUser := qrRequestUser
	if qRequestUser != "" {

		if err := r.SetQueryParam("requestUser", qRequestUser); err != nil {
			return err
		}
	}

	// query param varianceFormat
	qrVarianceFormat := o.VarianceFormat
	qVarianceFormat := qrVarianceFormat
	if qVarianceFormat != "" {

		if err := r.SetQueryParam("varianceFormat", qVarianceFormat); err != nil {
			return err
		}
	}

	// query param varianceLevel
	qrVarianceLevel := o.VarianceLevel
	qVarianceLevel := qrVarianceLevel
	if qVarianceLevel != "" {

		if err := r.SetQueryParam("varianceLevel", qVarianceLevel); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
