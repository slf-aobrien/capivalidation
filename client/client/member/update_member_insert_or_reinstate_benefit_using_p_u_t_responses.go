// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateMemberInsertOrReinstateBenefitUsingPUTReader is a Reader for the UpdateMemberInsertOrReinstateBenefitUsingPUT structure.
type UpdateMemberInsertOrReinstateBenefitUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateMemberInsertOrReinstateBenefitUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateMemberInsertOrReinstateBenefitUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateMemberInsertOrReinstateBenefitUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateMemberInsertOrReinstateBenefitUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateMemberInsertOrReinstateBenefitUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateMemberInsertOrReinstateBenefitUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateMemberInsertOrReinstateBenefitUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/member/update/insertOrReinstateBenefit] updateMemberInsertOrReinstateBenefitUsingPUT", response, response.Code())
	}
}

// NewUpdateMemberInsertOrReinstateBenefitUsingPUTOK creates a UpdateMemberInsertOrReinstateBenefitUsingPUTOK with default headers values
func NewUpdateMemberInsertOrReinstateBenefitUsingPUTOK() *UpdateMemberInsertOrReinstateBenefitUsingPUTOK {
	return &UpdateMemberInsertOrReinstateBenefitUsingPUTOK{}
}

/*
UpdateMemberInsertOrReinstateBenefitUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateMemberInsertOrReinstateBenefitUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update member insert or reinstate benefit using p u t o k response has a 2xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member insert or reinstate benefit using p u t o k response has a 3xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member insert or reinstate benefit using p u t o k response has a 4xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member insert or reinstate benefit using p u t o k response has a 5xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update member insert or reinstate benefit using p u t o k response a status code equal to that given
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update member insert or reinstate benefit using p u t o k response
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/insertOrReinstateBenefit][%d] updateMemberInsertOrReinstateBenefitUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/insertOrReinstateBenefit][%d] updateMemberInsertOrReinstateBenefitUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMemberInsertOrReinstateBenefitUsingPUTCreated creates a UpdateMemberInsertOrReinstateBenefitUsingPUTCreated with default headers values
func NewUpdateMemberInsertOrReinstateBenefitUsingPUTCreated() *UpdateMemberInsertOrReinstateBenefitUsingPUTCreated {
	return &UpdateMemberInsertOrReinstateBenefitUsingPUTCreated{}
}

/*
UpdateMemberInsertOrReinstateBenefitUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateMemberInsertOrReinstateBenefitUsingPUTCreated struct {
}

// IsSuccess returns true when this update member insert or reinstate benefit using p u t created response has a 2xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member insert or reinstate benefit using p u t created response has a 3xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member insert or reinstate benefit using p u t created response has a 4xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member insert or reinstate benefit using p u t created response has a 5xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update member insert or reinstate benefit using p u t created response a status code equal to that given
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update member insert or reinstate benefit using p u t created response
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/insertOrReinstateBenefit][%d] updateMemberInsertOrReinstateBenefitUsingPUTCreated", 201)
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/insertOrReinstateBenefit][%d] updateMemberInsertOrReinstateBenefitUsingPUTCreated", 201)
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberInsertOrReinstateBenefitUsingPUTBadRequest creates a UpdateMemberInsertOrReinstateBenefitUsingPUTBadRequest with default headers values
func NewUpdateMemberInsertOrReinstateBenefitUsingPUTBadRequest() *UpdateMemberInsertOrReinstateBenefitUsingPUTBadRequest {
	return &UpdateMemberInsertOrReinstateBenefitUsingPUTBadRequest{}
}

/*
UpdateMemberInsertOrReinstateBenefitUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateMemberInsertOrReinstateBenefitUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update member insert or reinstate benefit using p u t bad request response has a 2xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member insert or reinstate benefit using p u t bad request response has a 3xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member insert or reinstate benefit using p u t bad request response has a 4xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member insert or reinstate benefit using p u t bad request response has a 5xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update member insert or reinstate benefit using p u t bad request response a status code equal to that given
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update member insert or reinstate benefit using p u t bad request response
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/insertOrReinstateBenefit][%d] updateMemberInsertOrReinstateBenefitUsingPUTBadRequest", 400)
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/insertOrReinstateBenefit][%d] updateMemberInsertOrReinstateBenefitUsingPUTBadRequest", 400)
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberInsertOrReinstateBenefitUsingPUTUnauthorized creates a UpdateMemberInsertOrReinstateBenefitUsingPUTUnauthorized with default headers values
func NewUpdateMemberInsertOrReinstateBenefitUsingPUTUnauthorized() *UpdateMemberInsertOrReinstateBenefitUsingPUTUnauthorized {
	return &UpdateMemberInsertOrReinstateBenefitUsingPUTUnauthorized{}
}

/*
UpdateMemberInsertOrReinstateBenefitUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateMemberInsertOrReinstateBenefitUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update member insert or reinstate benefit using p u t unauthorized response has a 2xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member insert or reinstate benefit using p u t unauthorized response has a 3xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member insert or reinstate benefit using p u t unauthorized response has a 4xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member insert or reinstate benefit using p u t unauthorized response has a 5xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update member insert or reinstate benefit using p u t unauthorized response a status code equal to that given
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update member insert or reinstate benefit using p u t unauthorized response
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/insertOrReinstateBenefit][%d] updateMemberInsertOrReinstateBenefitUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/insertOrReinstateBenefit][%d] updateMemberInsertOrReinstateBenefitUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberInsertOrReinstateBenefitUsingPUTForbidden creates a UpdateMemberInsertOrReinstateBenefitUsingPUTForbidden with default headers values
func NewUpdateMemberInsertOrReinstateBenefitUsingPUTForbidden() *UpdateMemberInsertOrReinstateBenefitUsingPUTForbidden {
	return &UpdateMemberInsertOrReinstateBenefitUsingPUTForbidden{}
}

/*
UpdateMemberInsertOrReinstateBenefitUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateMemberInsertOrReinstateBenefitUsingPUTForbidden struct {
}

// IsSuccess returns true when this update member insert or reinstate benefit using p u t forbidden response has a 2xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member insert or reinstate benefit using p u t forbidden response has a 3xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member insert or reinstate benefit using p u t forbidden response has a 4xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member insert or reinstate benefit using p u t forbidden response has a 5xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update member insert or reinstate benefit using p u t forbidden response a status code equal to that given
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update member insert or reinstate benefit using p u t forbidden response
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/insertOrReinstateBenefit][%d] updateMemberInsertOrReinstateBenefitUsingPUTForbidden", 403)
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/insertOrReinstateBenefit][%d] updateMemberInsertOrReinstateBenefitUsingPUTForbidden", 403)
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberInsertOrReinstateBenefitUsingPUTNotFound creates a UpdateMemberInsertOrReinstateBenefitUsingPUTNotFound with default headers values
func NewUpdateMemberInsertOrReinstateBenefitUsingPUTNotFound() *UpdateMemberInsertOrReinstateBenefitUsingPUTNotFound {
	return &UpdateMemberInsertOrReinstateBenefitUsingPUTNotFound{}
}

/*
UpdateMemberInsertOrReinstateBenefitUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateMemberInsertOrReinstateBenefitUsingPUTNotFound struct {
}

// IsSuccess returns true when this update member insert or reinstate benefit using p u t not found response has a 2xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member insert or reinstate benefit using p u t not found response has a 3xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member insert or reinstate benefit using p u t not found response has a 4xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member insert or reinstate benefit using p u t not found response has a 5xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update member insert or reinstate benefit using p u t not found response a status code equal to that given
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update member insert or reinstate benefit using p u t not found response
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/insertOrReinstateBenefit][%d] updateMemberInsertOrReinstateBenefitUsingPUTNotFound", 404)
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/insertOrReinstateBenefit][%d] updateMemberInsertOrReinstateBenefitUsingPUTNotFound", 404)
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberInsertOrReinstateBenefitUsingPUTInternalServerError creates a UpdateMemberInsertOrReinstateBenefitUsingPUTInternalServerError with default headers values
func NewUpdateMemberInsertOrReinstateBenefitUsingPUTInternalServerError() *UpdateMemberInsertOrReinstateBenefitUsingPUTInternalServerError {
	return &UpdateMemberInsertOrReinstateBenefitUsingPUTInternalServerError{}
}

/*
UpdateMemberInsertOrReinstateBenefitUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateMemberInsertOrReinstateBenefitUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update member insert or reinstate benefit using p u t internal server error response has a 2xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member insert or reinstate benefit using p u t internal server error response has a 3xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member insert or reinstate benefit using p u t internal server error response has a 4xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member insert or reinstate benefit using p u t internal server error response has a 5xx status code
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update member insert or reinstate benefit using p u t internal server error response a status code equal to that given
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update member insert or reinstate benefit using p u t internal server error response
func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/insertOrReinstateBenefit][%d] updateMemberInsertOrReinstateBenefitUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/insertOrReinstateBenefit][%d] updateMemberInsertOrReinstateBenefitUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberInsertOrReinstateBenefitUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
