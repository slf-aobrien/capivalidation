// Code generated by go-swagger; DO NOT EDIT.

package policy_bill_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// AddMiscellaneousContactUsingPOSTReader is a Reader for the AddMiscellaneousContactUsingPOST structure.
type AddMiscellaneousContactUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddMiscellaneousContactUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddMiscellaneousContactUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewAddMiscellaneousContactUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddMiscellaneousContactUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddMiscellaneousContactUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddMiscellaneousContactUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddMiscellaneousContactUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddMiscellaneousContactUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/policyBillGroup/miscellaneousContact] addMiscellaneousContactUsingPOST", response, response.Code())
	}
}

// NewAddMiscellaneousContactUsingPOSTOK creates a AddMiscellaneousContactUsingPOSTOK with default headers values
func NewAddMiscellaneousContactUsingPOSTOK() *AddMiscellaneousContactUsingPOSTOK {
	return &AddMiscellaneousContactUsingPOSTOK{}
}

/*
AddMiscellaneousContactUsingPOSTOK describes a response with status code 200, with default header values.

Success
*/
type AddMiscellaneousContactUsingPOSTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this add miscellaneous contact using p o s t o k response has a 2xx status code
func (o *AddMiscellaneousContactUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add miscellaneous contact using p o s t o k response has a 3xx status code
func (o *AddMiscellaneousContactUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add miscellaneous contact using p o s t o k response has a 4xx status code
func (o *AddMiscellaneousContactUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add miscellaneous contact using p o s t o k response has a 5xx status code
func (o *AddMiscellaneousContactUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add miscellaneous contact using p o s t o k response a status code equal to that given
func (o *AddMiscellaneousContactUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add miscellaneous contact using p o s t o k response
func (o *AddMiscellaneousContactUsingPOSTOK) Code() int {
	return 200
}

func (o *AddMiscellaneousContactUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/miscellaneousContact][%d] addMiscellaneousContactUsingPOSTOK %s", 200, payload)
}

func (o *AddMiscellaneousContactUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/miscellaneousContact][%d] addMiscellaneousContactUsingPOSTOK %s", 200, payload)
}

func (o *AddMiscellaneousContactUsingPOSTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *AddMiscellaneousContactUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddMiscellaneousContactUsingPOSTCreated creates a AddMiscellaneousContactUsingPOSTCreated with default headers values
func NewAddMiscellaneousContactUsingPOSTCreated() *AddMiscellaneousContactUsingPOSTCreated {
	return &AddMiscellaneousContactUsingPOSTCreated{}
}

/*
AddMiscellaneousContactUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type AddMiscellaneousContactUsingPOSTCreated struct {
}

// IsSuccess returns true when this add miscellaneous contact using p o s t created response has a 2xx status code
func (o *AddMiscellaneousContactUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add miscellaneous contact using p o s t created response has a 3xx status code
func (o *AddMiscellaneousContactUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add miscellaneous contact using p o s t created response has a 4xx status code
func (o *AddMiscellaneousContactUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add miscellaneous contact using p o s t created response has a 5xx status code
func (o *AddMiscellaneousContactUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add miscellaneous contact using p o s t created response a status code equal to that given
func (o *AddMiscellaneousContactUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add miscellaneous contact using p o s t created response
func (o *AddMiscellaneousContactUsingPOSTCreated) Code() int {
	return 201
}

func (o *AddMiscellaneousContactUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/miscellaneousContact][%d] addMiscellaneousContactUsingPOSTCreated", 201)
}

func (o *AddMiscellaneousContactUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/miscellaneousContact][%d] addMiscellaneousContactUsingPOSTCreated", 201)
}

func (o *AddMiscellaneousContactUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddMiscellaneousContactUsingPOSTBadRequest creates a AddMiscellaneousContactUsingPOSTBadRequest with default headers values
func NewAddMiscellaneousContactUsingPOSTBadRequest() *AddMiscellaneousContactUsingPOSTBadRequest {
	return &AddMiscellaneousContactUsingPOSTBadRequest{}
}

/*
AddMiscellaneousContactUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddMiscellaneousContactUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this add miscellaneous contact using p o s t bad request response has a 2xx status code
func (o *AddMiscellaneousContactUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add miscellaneous contact using p o s t bad request response has a 3xx status code
func (o *AddMiscellaneousContactUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add miscellaneous contact using p o s t bad request response has a 4xx status code
func (o *AddMiscellaneousContactUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add miscellaneous contact using p o s t bad request response has a 5xx status code
func (o *AddMiscellaneousContactUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add miscellaneous contact using p o s t bad request response a status code equal to that given
func (o *AddMiscellaneousContactUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add miscellaneous contact using p o s t bad request response
func (o *AddMiscellaneousContactUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *AddMiscellaneousContactUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/miscellaneousContact][%d] addMiscellaneousContactUsingPOSTBadRequest", 400)
}

func (o *AddMiscellaneousContactUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/miscellaneousContact][%d] addMiscellaneousContactUsingPOSTBadRequest", 400)
}

func (o *AddMiscellaneousContactUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddMiscellaneousContactUsingPOSTUnauthorized creates a AddMiscellaneousContactUsingPOSTUnauthorized with default headers values
func NewAddMiscellaneousContactUsingPOSTUnauthorized() *AddMiscellaneousContactUsingPOSTUnauthorized {
	return &AddMiscellaneousContactUsingPOSTUnauthorized{}
}

/*
AddMiscellaneousContactUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddMiscellaneousContactUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this add miscellaneous contact using p o s t unauthorized response has a 2xx status code
func (o *AddMiscellaneousContactUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add miscellaneous contact using p o s t unauthorized response has a 3xx status code
func (o *AddMiscellaneousContactUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add miscellaneous contact using p o s t unauthorized response has a 4xx status code
func (o *AddMiscellaneousContactUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add miscellaneous contact using p o s t unauthorized response has a 5xx status code
func (o *AddMiscellaneousContactUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add miscellaneous contact using p o s t unauthorized response a status code equal to that given
func (o *AddMiscellaneousContactUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add miscellaneous contact using p o s t unauthorized response
func (o *AddMiscellaneousContactUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *AddMiscellaneousContactUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/miscellaneousContact][%d] addMiscellaneousContactUsingPOSTUnauthorized", 401)
}

func (o *AddMiscellaneousContactUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/miscellaneousContact][%d] addMiscellaneousContactUsingPOSTUnauthorized", 401)
}

func (o *AddMiscellaneousContactUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddMiscellaneousContactUsingPOSTForbidden creates a AddMiscellaneousContactUsingPOSTForbidden with default headers values
func NewAddMiscellaneousContactUsingPOSTForbidden() *AddMiscellaneousContactUsingPOSTForbidden {
	return &AddMiscellaneousContactUsingPOSTForbidden{}
}

/*
AddMiscellaneousContactUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddMiscellaneousContactUsingPOSTForbidden struct {
}

// IsSuccess returns true when this add miscellaneous contact using p o s t forbidden response has a 2xx status code
func (o *AddMiscellaneousContactUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add miscellaneous contact using p o s t forbidden response has a 3xx status code
func (o *AddMiscellaneousContactUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add miscellaneous contact using p o s t forbidden response has a 4xx status code
func (o *AddMiscellaneousContactUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add miscellaneous contact using p o s t forbidden response has a 5xx status code
func (o *AddMiscellaneousContactUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add miscellaneous contact using p o s t forbidden response a status code equal to that given
func (o *AddMiscellaneousContactUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add miscellaneous contact using p o s t forbidden response
func (o *AddMiscellaneousContactUsingPOSTForbidden) Code() int {
	return 403
}

func (o *AddMiscellaneousContactUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/miscellaneousContact][%d] addMiscellaneousContactUsingPOSTForbidden", 403)
}

func (o *AddMiscellaneousContactUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/miscellaneousContact][%d] addMiscellaneousContactUsingPOSTForbidden", 403)
}

func (o *AddMiscellaneousContactUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddMiscellaneousContactUsingPOSTNotFound creates a AddMiscellaneousContactUsingPOSTNotFound with default headers values
func NewAddMiscellaneousContactUsingPOSTNotFound() *AddMiscellaneousContactUsingPOSTNotFound {
	return &AddMiscellaneousContactUsingPOSTNotFound{}
}

/*
AddMiscellaneousContactUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddMiscellaneousContactUsingPOSTNotFound struct {
}

// IsSuccess returns true when this add miscellaneous contact using p o s t not found response has a 2xx status code
func (o *AddMiscellaneousContactUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add miscellaneous contact using p o s t not found response has a 3xx status code
func (o *AddMiscellaneousContactUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add miscellaneous contact using p o s t not found response has a 4xx status code
func (o *AddMiscellaneousContactUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add miscellaneous contact using p o s t not found response has a 5xx status code
func (o *AddMiscellaneousContactUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add miscellaneous contact using p o s t not found response a status code equal to that given
func (o *AddMiscellaneousContactUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add miscellaneous contact using p o s t not found response
func (o *AddMiscellaneousContactUsingPOSTNotFound) Code() int {
	return 404
}

func (o *AddMiscellaneousContactUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/miscellaneousContact][%d] addMiscellaneousContactUsingPOSTNotFound", 404)
}

func (o *AddMiscellaneousContactUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/miscellaneousContact][%d] addMiscellaneousContactUsingPOSTNotFound", 404)
}

func (o *AddMiscellaneousContactUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddMiscellaneousContactUsingPOSTInternalServerError creates a AddMiscellaneousContactUsingPOSTInternalServerError with default headers values
func NewAddMiscellaneousContactUsingPOSTInternalServerError() *AddMiscellaneousContactUsingPOSTInternalServerError {
	return &AddMiscellaneousContactUsingPOSTInternalServerError{}
}

/*
AddMiscellaneousContactUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AddMiscellaneousContactUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this add miscellaneous contact using p o s t internal server error response has a 2xx status code
func (o *AddMiscellaneousContactUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add miscellaneous contact using p o s t internal server error response has a 3xx status code
func (o *AddMiscellaneousContactUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add miscellaneous contact using p o s t internal server error response has a 4xx status code
func (o *AddMiscellaneousContactUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add miscellaneous contact using p o s t internal server error response has a 5xx status code
func (o *AddMiscellaneousContactUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add miscellaneous contact using p o s t internal server error response a status code equal to that given
func (o *AddMiscellaneousContactUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add miscellaneous contact using p o s t internal server error response
func (o *AddMiscellaneousContactUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *AddMiscellaneousContactUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/miscellaneousContact][%d] addMiscellaneousContactUsingPOSTInternalServerError", 500)
}

func (o *AddMiscellaneousContactUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policyBillGroup/miscellaneousContact][%d] addMiscellaneousContactUsingPOSTInternalServerError", 500)
}

func (o *AddMiscellaneousContactUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
