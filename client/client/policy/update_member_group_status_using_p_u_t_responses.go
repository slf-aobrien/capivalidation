// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateMemberGroupStatusUsingPUTReader is a Reader for the UpdateMemberGroupStatusUsingPUT structure.
type UpdateMemberGroupStatusUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMemberGroupStatusUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateMemberGroupStatusUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateMemberGroupStatusUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateMemberGroupStatusUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateMemberGroupStatusUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateMemberGroupStatusUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateMemberGroupStatusUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateMemberGroupStatusUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/policy/memberGroup/status] updateMemberGroupStatusUsingPUT", response, response.Code())
	}
}

// NewUpdateMemberGroupStatusUsingPUTOK creates a UpdateMemberGroupStatusUsingPUTOK with default headers values
func NewUpdateMemberGroupStatusUsingPUTOK() *UpdateMemberGroupStatusUsingPUTOK {
	return &UpdateMemberGroupStatusUsingPUTOK{}
}

/*
UpdateMemberGroupStatusUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateMemberGroupStatusUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update member group status using p u t o k response has a 2xx status code
func (o *UpdateMemberGroupStatusUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member group status using p u t o k response has a 3xx status code
func (o *UpdateMemberGroupStatusUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group status using p u t o k response has a 4xx status code
func (o *UpdateMemberGroupStatusUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member group status using p u t o k response has a 5xx status code
func (o *UpdateMemberGroupStatusUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group status using p u t o k response a status code equal to that given
func (o *UpdateMemberGroupStatusUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update member group status using p u t o k response
func (o *UpdateMemberGroupStatusUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateMemberGroupStatusUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup/status][%d] updateMemberGroupStatusUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberGroupStatusUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup/status][%d] updateMemberGroupStatusUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberGroupStatusUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateMemberGroupStatusUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMemberGroupStatusUsingPUTCreated creates a UpdateMemberGroupStatusUsingPUTCreated with default headers values
func NewUpdateMemberGroupStatusUsingPUTCreated() *UpdateMemberGroupStatusUsingPUTCreated {
	return &UpdateMemberGroupStatusUsingPUTCreated{}
}

/*
UpdateMemberGroupStatusUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateMemberGroupStatusUsingPUTCreated struct {
}

// IsSuccess returns true when this update member group status using p u t created response has a 2xx status code
func (o *UpdateMemberGroupStatusUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member group status using p u t created response has a 3xx status code
func (o *UpdateMemberGroupStatusUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group status using p u t created response has a 4xx status code
func (o *UpdateMemberGroupStatusUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member group status using p u t created response has a 5xx status code
func (o *UpdateMemberGroupStatusUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group status using p u t created response a status code equal to that given
func (o *UpdateMemberGroupStatusUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update member group status using p u t created response
func (o *UpdateMemberGroupStatusUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateMemberGroupStatusUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup/status][%d] updateMemberGroupStatusUsingPUTCreated", 201)
}

func (o *UpdateMemberGroupStatusUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup/status][%d] updateMemberGroupStatusUsingPUTCreated", 201)
}

func (o *UpdateMemberGroupStatusUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupStatusUsingPUTBadRequest creates a UpdateMemberGroupStatusUsingPUTBadRequest with default headers values
func NewUpdateMemberGroupStatusUsingPUTBadRequest() *UpdateMemberGroupStatusUsingPUTBadRequest {
	return &UpdateMemberGroupStatusUsingPUTBadRequest{}
}

/*
UpdateMemberGroupStatusUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateMemberGroupStatusUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update member group status using p u t bad request response has a 2xx status code
func (o *UpdateMemberGroupStatusUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group status using p u t bad request response has a 3xx status code
func (o *UpdateMemberGroupStatusUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group status using p u t bad request response has a 4xx status code
func (o *UpdateMemberGroupStatusUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member group status using p u t bad request response has a 5xx status code
func (o *UpdateMemberGroupStatusUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group status using p u t bad request response a status code equal to that given
func (o *UpdateMemberGroupStatusUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update member group status using p u t bad request response
func (o *UpdateMemberGroupStatusUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateMemberGroupStatusUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup/status][%d] updateMemberGroupStatusUsingPUTBadRequest", 400)
}

func (o *UpdateMemberGroupStatusUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup/status][%d] updateMemberGroupStatusUsingPUTBadRequest", 400)
}

func (o *UpdateMemberGroupStatusUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupStatusUsingPUTUnauthorized creates a UpdateMemberGroupStatusUsingPUTUnauthorized with default headers values
func NewUpdateMemberGroupStatusUsingPUTUnauthorized() *UpdateMemberGroupStatusUsingPUTUnauthorized {
	return &UpdateMemberGroupStatusUsingPUTUnauthorized{}
}

/*
UpdateMemberGroupStatusUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateMemberGroupStatusUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update member group status using p u t unauthorized response has a 2xx status code
func (o *UpdateMemberGroupStatusUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group status using p u t unauthorized response has a 3xx status code
func (o *UpdateMemberGroupStatusUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group status using p u t unauthorized response has a 4xx status code
func (o *UpdateMemberGroupStatusUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member group status using p u t unauthorized response has a 5xx status code
func (o *UpdateMemberGroupStatusUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group status using p u t unauthorized response a status code equal to that given
func (o *UpdateMemberGroupStatusUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update member group status using p u t unauthorized response
func (o *UpdateMemberGroupStatusUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateMemberGroupStatusUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup/status][%d] updateMemberGroupStatusUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberGroupStatusUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup/status][%d] updateMemberGroupStatusUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberGroupStatusUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupStatusUsingPUTForbidden creates a UpdateMemberGroupStatusUsingPUTForbidden with default headers values
func NewUpdateMemberGroupStatusUsingPUTForbidden() *UpdateMemberGroupStatusUsingPUTForbidden {
	return &UpdateMemberGroupStatusUsingPUTForbidden{}
}

/*
UpdateMemberGroupStatusUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateMemberGroupStatusUsingPUTForbidden struct {
}

// IsSuccess returns true when this update member group status using p u t forbidden response has a 2xx status code
func (o *UpdateMemberGroupStatusUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group status using p u t forbidden response has a 3xx status code
func (o *UpdateMemberGroupStatusUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group status using p u t forbidden response has a 4xx status code
func (o *UpdateMemberGroupStatusUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member group status using p u t forbidden response has a 5xx status code
func (o *UpdateMemberGroupStatusUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group status using p u t forbidden response a status code equal to that given
func (o *UpdateMemberGroupStatusUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update member group status using p u t forbidden response
func (o *UpdateMemberGroupStatusUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateMemberGroupStatusUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup/status][%d] updateMemberGroupStatusUsingPUTForbidden", 403)
}

func (o *UpdateMemberGroupStatusUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup/status][%d] updateMemberGroupStatusUsingPUTForbidden", 403)
}

func (o *UpdateMemberGroupStatusUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupStatusUsingPUTNotFound creates a UpdateMemberGroupStatusUsingPUTNotFound with default headers values
func NewUpdateMemberGroupStatusUsingPUTNotFound() *UpdateMemberGroupStatusUsingPUTNotFound {
	return &UpdateMemberGroupStatusUsingPUTNotFound{}
}

/*
UpdateMemberGroupStatusUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateMemberGroupStatusUsingPUTNotFound struct {
}

// IsSuccess returns true when this update member group status using p u t not found response has a 2xx status code
func (o *UpdateMemberGroupStatusUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group status using p u t not found response has a 3xx status code
func (o *UpdateMemberGroupStatusUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group status using p u t not found response has a 4xx status code
func (o *UpdateMemberGroupStatusUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member group status using p u t not found response has a 5xx status code
func (o *UpdateMemberGroupStatusUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group status using p u t not found response a status code equal to that given
func (o *UpdateMemberGroupStatusUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update member group status using p u t not found response
func (o *UpdateMemberGroupStatusUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateMemberGroupStatusUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup/status][%d] updateMemberGroupStatusUsingPUTNotFound", 404)
}

func (o *UpdateMemberGroupStatusUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup/status][%d] updateMemberGroupStatusUsingPUTNotFound", 404)
}

func (o *UpdateMemberGroupStatusUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupStatusUsingPUTInternalServerError creates a UpdateMemberGroupStatusUsingPUTInternalServerError with default headers values
func NewUpdateMemberGroupStatusUsingPUTInternalServerError() *UpdateMemberGroupStatusUsingPUTInternalServerError {
	return &UpdateMemberGroupStatusUsingPUTInternalServerError{}
}

/*
UpdateMemberGroupStatusUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateMemberGroupStatusUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update member group status using p u t internal server error response has a 2xx status code
func (o *UpdateMemberGroupStatusUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group status using p u t internal server error response has a 3xx status code
func (o *UpdateMemberGroupStatusUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group status using p u t internal server error response has a 4xx status code
func (o *UpdateMemberGroupStatusUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member group status using p u t internal server error response has a 5xx status code
func (o *UpdateMemberGroupStatusUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update member group status using p u t internal server error response a status code equal to that given
func (o *UpdateMemberGroupStatusUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update member group status using p u t internal server error response
func (o *UpdateMemberGroupStatusUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateMemberGroupStatusUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup/status][%d] updateMemberGroupStatusUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberGroupStatusUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup/status][%d] updateMemberGroupStatusUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberGroupStatusUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
