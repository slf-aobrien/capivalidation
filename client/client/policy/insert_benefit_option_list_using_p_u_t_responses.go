// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// InsertBenefitOptionListUsingPUTReader is a Reader for the InsertBenefitOptionListUsingPUT structure.
type InsertBenefitOptionListUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InsertBenefitOptionListUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInsertBenefitOptionListUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewInsertBenefitOptionListUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInsertBenefitOptionListUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewInsertBenefitOptionListUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInsertBenefitOptionListUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInsertBenefitOptionListUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInsertBenefitOptionListUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/policy/benefitOptionList] insertBenefitOptionListUsingPUT", response, response.Code())
	}
}

// NewInsertBenefitOptionListUsingPUTOK creates a InsertBenefitOptionListUsingPUTOK with default headers values
func NewInsertBenefitOptionListUsingPUTOK() *InsertBenefitOptionListUsingPUTOK {
	return &InsertBenefitOptionListUsingPUTOK{}
}

/*
InsertBenefitOptionListUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type InsertBenefitOptionListUsingPUTOK struct {
	Payload *models.ResponseWrapperOptionChoiceListDTO
}

// IsSuccess returns true when this insert benefit option list using p u t o k response has a 2xx status code
func (o *InsertBenefitOptionListUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this insert benefit option list using p u t o k response has a 3xx status code
func (o *InsertBenefitOptionListUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert benefit option list using p u t o k response has a 4xx status code
func (o *InsertBenefitOptionListUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this insert benefit option list using p u t o k response has a 5xx status code
func (o *InsertBenefitOptionListUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this insert benefit option list using p u t o k response a status code equal to that given
func (o *InsertBenefitOptionListUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the insert benefit option list using p u t o k response
func (o *InsertBenefitOptionListUsingPUTOK) Code() int {
	return 200
}

func (o *InsertBenefitOptionListUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/benefitOptionList][%d] insertBenefitOptionListUsingPUTOK %s", 200, payload)
}

func (o *InsertBenefitOptionListUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/benefitOptionList][%d] insertBenefitOptionListUsingPUTOK %s", 200, payload)
}

func (o *InsertBenefitOptionListUsingPUTOK) GetPayload() *models.ResponseWrapperOptionChoiceListDTO {
	return o.Payload
}

func (o *InsertBenefitOptionListUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperOptionChoiceListDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInsertBenefitOptionListUsingPUTCreated creates a InsertBenefitOptionListUsingPUTCreated with default headers values
func NewInsertBenefitOptionListUsingPUTCreated() *InsertBenefitOptionListUsingPUTCreated {
	return &InsertBenefitOptionListUsingPUTCreated{}
}

/*
InsertBenefitOptionListUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type InsertBenefitOptionListUsingPUTCreated struct {
}

// IsSuccess returns true when this insert benefit option list using p u t created response has a 2xx status code
func (o *InsertBenefitOptionListUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this insert benefit option list using p u t created response has a 3xx status code
func (o *InsertBenefitOptionListUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert benefit option list using p u t created response has a 4xx status code
func (o *InsertBenefitOptionListUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this insert benefit option list using p u t created response has a 5xx status code
func (o *InsertBenefitOptionListUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this insert benefit option list using p u t created response a status code equal to that given
func (o *InsertBenefitOptionListUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the insert benefit option list using p u t created response
func (o *InsertBenefitOptionListUsingPUTCreated) Code() int {
	return 201
}

func (o *InsertBenefitOptionListUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/benefitOptionList][%d] insertBenefitOptionListUsingPUTCreated", 201)
}

func (o *InsertBenefitOptionListUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/benefitOptionList][%d] insertBenefitOptionListUsingPUTCreated", 201)
}

func (o *InsertBenefitOptionListUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertBenefitOptionListUsingPUTBadRequest creates a InsertBenefitOptionListUsingPUTBadRequest with default headers values
func NewInsertBenefitOptionListUsingPUTBadRequest() *InsertBenefitOptionListUsingPUTBadRequest {
	return &InsertBenefitOptionListUsingPUTBadRequest{}
}

/*
InsertBenefitOptionListUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type InsertBenefitOptionListUsingPUTBadRequest struct {
}

// IsSuccess returns true when this insert benefit option list using p u t bad request response has a 2xx status code
func (o *InsertBenefitOptionListUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert benefit option list using p u t bad request response has a 3xx status code
func (o *InsertBenefitOptionListUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert benefit option list using p u t bad request response has a 4xx status code
func (o *InsertBenefitOptionListUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert benefit option list using p u t bad request response has a 5xx status code
func (o *InsertBenefitOptionListUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this insert benefit option list using p u t bad request response a status code equal to that given
func (o *InsertBenefitOptionListUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the insert benefit option list using p u t bad request response
func (o *InsertBenefitOptionListUsingPUTBadRequest) Code() int {
	return 400
}

func (o *InsertBenefitOptionListUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/benefitOptionList][%d] insertBenefitOptionListUsingPUTBadRequest", 400)
}

func (o *InsertBenefitOptionListUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/benefitOptionList][%d] insertBenefitOptionListUsingPUTBadRequest", 400)
}

func (o *InsertBenefitOptionListUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertBenefitOptionListUsingPUTUnauthorized creates a InsertBenefitOptionListUsingPUTUnauthorized with default headers values
func NewInsertBenefitOptionListUsingPUTUnauthorized() *InsertBenefitOptionListUsingPUTUnauthorized {
	return &InsertBenefitOptionListUsingPUTUnauthorized{}
}

/*
InsertBenefitOptionListUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type InsertBenefitOptionListUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this insert benefit option list using p u t unauthorized response has a 2xx status code
func (o *InsertBenefitOptionListUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert benefit option list using p u t unauthorized response has a 3xx status code
func (o *InsertBenefitOptionListUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert benefit option list using p u t unauthorized response has a 4xx status code
func (o *InsertBenefitOptionListUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert benefit option list using p u t unauthorized response has a 5xx status code
func (o *InsertBenefitOptionListUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this insert benefit option list using p u t unauthorized response a status code equal to that given
func (o *InsertBenefitOptionListUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the insert benefit option list using p u t unauthorized response
func (o *InsertBenefitOptionListUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *InsertBenefitOptionListUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/benefitOptionList][%d] insertBenefitOptionListUsingPUTUnauthorized", 401)
}

func (o *InsertBenefitOptionListUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/benefitOptionList][%d] insertBenefitOptionListUsingPUTUnauthorized", 401)
}

func (o *InsertBenefitOptionListUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertBenefitOptionListUsingPUTForbidden creates a InsertBenefitOptionListUsingPUTForbidden with default headers values
func NewInsertBenefitOptionListUsingPUTForbidden() *InsertBenefitOptionListUsingPUTForbidden {
	return &InsertBenefitOptionListUsingPUTForbidden{}
}

/*
InsertBenefitOptionListUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type InsertBenefitOptionListUsingPUTForbidden struct {
}

// IsSuccess returns true when this insert benefit option list using p u t forbidden response has a 2xx status code
func (o *InsertBenefitOptionListUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert benefit option list using p u t forbidden response has a 3xx status code
func (o *InsertBenefitOptionListUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert benefit option list using p u t forbidden response has a 4xx status code
func (o *InsertBenefitOptionListUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert benefit option list using p u t forbidden response has a 5xx status code
func (o *InsertBenefitOptionListUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this insert benefit option list using p u t forbidden response a status code equal to that given
func (o *InsertBenefitOptionListUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the insert benefit option list using p u t forbidden response
func (o *InsertBenefitOptionListUsingPUTForbidden) Code() int {
	return 403
}

func (o *InsertBenefitOptionListUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/benefitOptionList][%d] insertBenefitOptionListUsingPUTForbidden", 403)
}

func (o *InsertBenefitOptionListUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/benefitOptionList][%d] insertBenefitOptionListUsingPUTForbidden", 403)
}

func (o *InsertBenefitOptionListUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertBenefitOptionListUsingPUTNotFound creates a InsertBenefitOptionListUsingPUTNotFound with default headers values
func NewInsertBenefitOptionListUsingPUTNotFound() *InsertBenefitOptionListUsingPUTNotFound {
	return &InsertBenefitOptionListUsingPUTNotFound{}
}

/*
InsertBenefitOptionListUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type InsertBenefitOptionListUsingPUTNotFound struct {
}

// IsSuccess returns true when this insert benefit option list using p u t not found response has a 2xx status code
func (o *InsertBenefitOptionListUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert benefit option list using p u t not found response has a 3xx status code
func (o *InsertBenefitOptionListUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert benefit option list using p u t not found response has a 4xx status code
func (o *InsertBenefitOptionListUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert benefit option list using p u t not found response has a 5xx status code
func (o *InsertBenefitOptionListUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this insert benefit option list using p u t not found response a status code equal to that given
func (o *InsertBenefitOptionListUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the insert benefit option list using p u t not found response
func (o *InsertBenefitOptionListUsingPUTNotFound) Code() int {
	return 404
}

func (o *InsertBenefitOptionListUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/benefitOptionList][%d] insertBenefitOptionListUsingPUTNotFound", 404)
}

func (o *InsertBenefitOptionListUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/benefitOptionList][%d] insertBenefitOptionListUsingPUTNotFound", 404)
}

func (o *InsertBenefitOptionListUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertBenefitOptionListUsingPUTInternalServerError creates a InsertBenefitOptionListUsingPUTInternalServerError with default headers values
func NewInsertBenefitOptionListUsingPUTInternalServerError() *InsertBenefitOptionListUsingPUTInternalServerError {
	return &InsertBenefitOptionListUsingPUTInternalServerError{}
}

/*
InsertBenefitOptionListUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type InsertBenefitOptionListUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this insert benefit option list using p u t internal server error response has a 2xx status code
func (o *InsertBenefitOptionListUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert benefit option list using p u t internal server error response has a 3xx status code
func (o *InsertBenefitOptionListUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert benefit option list using p u t internal server error response has a 4xx status code
func (o *InsertBenefitOptionListUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this insert benefit option list using p u t internal server error response has a 5xx status code
func (o *InsertBenefitOptionListUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this insert benefit option list using p u t internal server error response a status code equal to that given
func (o *InsertBenefitOptionListUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the insert benefit option list using p u t internal server error response
func (o *InsertBenefitOptionListUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *InsertBenefitOptionListUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/benefitOptionList][%d] insertBenefitOptionListUsingPUTInternalServerError", 500)
}

func (o *InsertBenefitOptionListUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/benefitOptionList][%d] insertBenefitOptionListUsingPUTInternalServerError", 500)
}

func (o *InsertBenefitOptionListUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
