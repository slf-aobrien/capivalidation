// Code generated by go-swagger; DO NOT EDIT.

package policy_bill_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewAddMiscellaneousContactUsingPOSTParams creates a new AddMiscellaneousContactUsingPOSTParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAddMiscellaneousContactUsingPOSTParams() *AddMiscellaneousContactUsingPOSTParams {
	return &AddMiscellaneousContactUsingPOSTParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAddMiscellaneousContactUsingPOSTParamsWithTimeout creates a new AddMiscellaneousContactUsingPOSTParams object
// with the ability to set a timeout on a request.
func NewAddMiscellaneousContactUsingPOSTParamsWithTimeout(timeout time.Duration) *AddMiscellaneousContactUsingPOSTParams {
	return &AddMiscellaneousContactUsingPOSTParams{
		timeout: timeout,
	}
}

// NewAddMiscellaneousContactUsingPOSTParamsWithContext creates a new AddMiscellaneousContactUsingPOSTParams object
// with the ability to set a context for a request.
func NewAddMiscellaneousContactUsingPOSTParamsWithContext(ctx context.Context) *AddMiscellaneousContactUsingPOSTParams {
	return &AddMiscellaneousContactUsingPOSTParams{
		Context: ctx,
	}
}

// NewAddMiscellaneousContactUsingPOSTParamsWithHTTPClient creates a new AddMiscellaneousContactUsingPOSTParams object
// with the ability to set a custom HTTPClient for a request.
func NewAddMiscellaneousContactUsingPOSTParamsWithHTTPClient(client *http.Client) *AddMiscellaneousContactUsingPOSTParams {
	return &AddMiscellaneousContactUsingPOSTParams{
		HTTPClient: client,
	}
}

/*
AddMiscellaneousContactUsingPOSTParams contains all the parameters to send to the API endpoint

	for the add miscellaneous contact using p o s t operation.

	Typically these are written to a http.Request.
*/
type AddMiscellaneousContactUsingPOSTParams struct {

	/* BillGroupDescription.

	   Existing Bill Group Description for which miscellaneous contacts to be added.
	*/
	BillGroupDescription string

	/* PolicyEffectiveDate.

	   Date should be in MM/DD/YYYY format.
	*/
	PolicyEffectiveDate string

	/* PolicyNumber.

	   policyNumber
	*/
	PolicyNumber string

	/* RequestApplication.

	   requestApplication
	*/
	RequestApplication string

	/* RequestUser.

	   requestUser
	*/
	RequestUser string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the add miscellaneous contact using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddMiscellaneousContactUsingPOSTParams) WithDefaults() *AddMiscellaneousContactUsingPOSTParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the add miscellaneous contact using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddMiscellaneousContactUsingPOSTParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the add miscellaneous contact using p o s t params
func (o *AddMiscellaneousContactUsingPOSTParams) WithTimeout(timeout time.Duration) *AddMiscellaneousContactUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add miscellaneous contact using p o s t params
func (o *AddMiscellaneousContactUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add miscellaneous contact using p o s t params
func (o *AddMiscellaneousContactUsingPOSTParams) WithContext(ctx context.Context) *AddMiscellaneousContactUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add miscellaneous contact using p o s t params
func (o *AddMiscellaneousContactUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add miscellaneous contact using p o s t params
func (o *AddMiscellaneousContactUsingPOSTParams) WithHTTPClient(client *http.Client) *AddMiscellaneousContactUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add miscellaneous contact using p o s t params
func (o *AddMiscellaneousContactUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBillGroupDescription adds the billGroupDescription to the add miscellaneous contact using p o s t params
func (o *AddMiscellaneousContactUsingPOSTParams) WithBillGroupDescription(billGroupDescription string) *AddMiscellaneousContactUsingPOSTParams {
	o.SetBillGroupDescription(billGroupDescription)
	return o
}

// SetBillGroupDescription adds the billGroupDescription to the add miscellaneous contact using p o s t params
func (o *AddMiscellaneousContactUsingPOSTParams) SetBillGroupDescription(billGroupDescription string) {
	o.BillGroupDescription = billGroupDescription
}

// WithPolicyEffectiveDate adds the policyEffectiveDate to the add miscellaneous contact using p o s t params
func (o *AddMiscellaneousContactUsingPOSTParams) WithPolicyEffectiveDate(policyEffectiveDate string) *AddMiscellaneousContactUsingPOSTParams {
	o.SetPolicyEffectiveDate(policyEffectiveDate)
	return o
}

// SetPolicyEffectiveDate adds the policyEffectiveDate to the add miscellaneous contact using p o s t params
func (o *AddMiscellaneousContactUsingPOSTParams) SetPolicyEffectiveDate(policyEffectiveDate string) {
	o.PolicyEffectiveDate = policyEffectiveDate
}

// WithPolicyNumber adds the policyNumber to the add miscellaneous contact using p o s t params
func (o *AddMiscellaneousContactUsingPOSTParams) WithPolicyNumber(policyNumber string) *AddMiscellaneousContactUsingPOSTParams {
	o.SetPolicyNumber(policyNumber)
	return o
}

// SetPolicyNumber adds the policyNumber to the add miscellaneous contact using p o s t params
func (o *AddMiscellaneousContactUsingPOSTParams) SetPolicyNumber(policyNumber string) {
	o.PolicyNumber = policyNumber
}

// WithRequestApplication adds the requestApplication to the add miscellaneous contact using p o s t params
func (o *AddMiscellaneousContactUsingPOSTParams) WithRequestApplication(requestApplication string) *AddMiscellaneousContactUsingPOSTParams {
	o.SetRequestApplication(requestApplication)
	return o
}

// SetRequestApplication adds the requestApplication to the add miscellaneous contact using p o s t params
func (o *AddMiscellaneousContactUsingPOSTParams) SetRequestApplication(requestApplication string) {
	o.RequestApplication = requestApplication
}

// WithRequestUser adds the requestUser to the add miscellaneous contact using p o s t params
func (o *AddMiscellaneousContactUsingPOSTParams) WithRequestUser(requestUser string) *AddMiscellaneousContactUsingPOSTParams {
	o.SetRequestUser(requestUser)
	return o
}

// SetRequestUser adds the requestUser to the add miscellaneous contact using p o s t params
func (o *AddMiscellaneousContactUsingPOSTParams) SetRequestUser(requestUser string) {
	o.RequestUser = requestUser
}

// WriteToRequest writes these params to a swagger request
func (o *AddMiscellaneousContactUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param billGroupDescription
	qrBillGroupDescription := o.BillGroupDescription
	qBillGroupDescription := qrBillGroupDescription
	if qBillGroupDescription != "" {

		if err := r.SetQueryParam("billGroupDescription", qBillGroupDescription); err != nil {
			return err
		}
	}

	// query param policyEffectiveDate
	qrPolicyEffectiveDate := o.PolicyEffectiveDate
	qPolicyEffectiveDate := qrPolicyEffectiveDate
	if qPolicyEffectiveDate != "" {

		if err := r.SetQueryParam("policyEffectiveDate", qPolicyEffectiveDate); err != nil {
			return err
		}
	}

	// query param policyNumber
	qrPolicyNumber := o.PolicyNumber
	qPolicyNumber := qrPolicyNumber
	if qPolicyNumber != "" {

		if err := r.SetQueryParam("policyNumber", qPolicyNumber); err != nil {
			return err
		}
	}

	// query param requestApplication
	qrRequestApplication := o.RequestApplication
	qRequestApplication := qrRequestApplication
	if qRequestApplication != "" {

		if err := r.SetQueryParam("requestApplication", qRequestApplication); err != nil {
			return err
		}
	}

	// query param requestUser
	qrRequestUser := o.RequestUser
	qRequestUser := qrRequestUser
	if qRequestUser != "" {

		if err := r.SetQueryParam("requestUser", qRequestUser); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
