// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// AddServicersUsingPOSTReader is a Reader for the AddServicersUsingPOST structure.
type AddServicersUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddServicersUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddServicersUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewAddServicersUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddServicersUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddServicersUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddServicersUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddServicersUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddServicersUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/policy/servicer] addServicersUsingPOST", response, response.Code())
	}
}

// NewAddServicersUsingPOSTOK creates a AddServicersUsingPOSTOK with default headers values
func NewAddServicersUsingPOSTOK() *AddServicersUsingPOSTOK {
	return &AddServicersUsingPOSTOK{}
}

/*
AddServicersUsingPOSTOK describes a response with status code 200, with default header values.

Success
*/
type AddServicersUsingPOSTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this add servicers using p o s t o k response has a 2xx status code
func (o *AddServicersUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add servicers using p o s t o k response has a 3xx status code
func (o *AddServicersUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add servicers using p o s t o k response has a 4xx status code
func (o *AddServicersUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add servicers using p o s t o k response has a 5xx status code
func (o *AddServicersUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add servicers using p o s t o k response a status code equal to that given
func (o *AddServicersUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add servicers using p o s t o k response
func (o *AddServicersUsingPOSTOK) Code() int {
	return 200
}

func (o *AddServicersUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/servicer][%d] addServicersUsingPOSTOK %s", 200, payload)
}

func (o *AddServicersUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/servicer][%d] addServicersUsingPOSTOK %s", 200, payload)
}

func (o *AddServicersUsingPOSTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *AddServicersUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddServicersUsingPOSTCreated creates a AddServicersUsingPOSTCreated with default headers values
func NewAddServicersUsingPOSTCreated() *AddServicersUsingPOSTCreated {
	return &AddServicersUsingPOSTCreated{}
}

/*
AddServicersUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type AddServicersUsingPOSTCreated struct {
}

// IsSuccess returns true when this add servicers using p o s t created response has a 2xx status code
func (o *AddServicersUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add servicers using p o s t created response has a 3xx status code
func (o *AddServicersUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add servicers using p o s t created response has a 4xx status code
func (o *AddServicersUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add servicers using p o s t created response has a 5xx status code
func (o *AddServicersUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add servicers using p o s t created response a status code equal to that given
func (o *AddServicersUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add servicers using p o s t created response
func (o *AddServicersUsingPOSTCreated) Code() int {
	return 201
}

func (o *AddServicersUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/servicer][%d] addServicersUsingPOSTCreated", 201)
}

func (o *AddServicersUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/servicer][%d] addServicersUsingPOSTCreated", 201)
}

func (o *AddServicersUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddServicersUsingPOSTBadRequest creates a AddServicersUsingPOSTBadRequest with default headers values
func NewAddServicersUsingPOSTBadRequest() *AddServicersUsingPOSTBadRequest {
	return &AddServicersUsingPOSTBadRequest{}
}

/*
AddServicersUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddServicersUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this add servicers using p o s t bad request response has a 2xx status code
func (o *AddServicersUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add servicers using p o s t bad request response has a 3xx status code
func (o *AddServicersUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add servicers using p o s t bad request response has a 4xx status code
func (o *AddServicersUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add servicers using p o s t bad request response has a 5xx status code
func (o *AddServicersUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add servicers using p o s t bad request response a status code equal to that given
func (o *AddServicersUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add servicers using p o s t bad request response
func (o *AddServicersUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *AddServicersUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/servicer][%d] addServicersUsingPOSTBadRequest", 400)
}

func (o *AddServicersUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/servicer][%d] addServicersUsingPOSTBadRequest", 400)
}

func (o *AddServicersUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddServicersUsingPOSTUnauthorized creates a AddServicersUsingPOSTUnauthorized with default headers values
func NewAddServicersUsingPOSTUnauthorized() *AddServicersUsingPOSTUnauthorized {
	return &AddServicersUsingPOSTUnauthorized{}
}

/*
AddServicersUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddServicersUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this add servicers using p o s t unauthorized response has a 2xx status code
func (o *AddServicersUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add servicers using p o s t unauthorized response has a 3xx status code
func (o *AddServicersUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add servicers using p o s t unauthorized response has a 4xx status code
func (o *AddServicersUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add servicers using p o s t unauthorized response has a 5xx status code
func (o *AddServicersUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add servicers using p o s t unauthorized response a status code equal to that given
func (o *AddServicersUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add servicers using p o s t unauthorized response
func (o *AddServicersUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *AddServicersUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/servicer][%d] addServicersUsingPOSTUnauthorized", 401)
}

func (o *AddServicersUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/servicer][%d] addServicersUsingPOSTUnauthorized", 401)
}

func (o *AddServicersUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddServicersUsingPOSTForbidden creates a AddServicersUsingPOSTForbidden with default headers values
func NewAddServicersUsingPOSTForbidden() *AddServicersUsingPOSTForbidden {
	return &AddServicersUsingPOSTForbidden{}
}

/*
AddServicersUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddServicersUsingPOSTForbidden struct {
}

// IsSuccess returns true when this add servicers using p o s t forbidden response has a 2xx status code
func (o *AddServicersUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add servicers using p o s t forbidden response has a 3xx status code
func (o *AddServicersUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add servicers using p o s t forbidden response has a 4xx status code
func (o *AddServicersUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add servicers using p o s t forbidden response has a 5xx status code
func (o *AddServicersUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add servicers using p o s t forbidden response a status code equal to that given
func (o *AddServicersUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add servicers using p o s t forbidden response
func (o *AddServicersUsingPOSTForbidden) Code() int {
	return 403
}

func (o *AddServicersUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/servicer][%d] addServicersUsingPOSTForbidden", 403)
}

func (o *AddServicersUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/servicer][%d] addServicersUsingPOSTForbidden", 403)
}

func (o *AddServicersUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddServicersUsingPOSTNotFound creates a AddServicersUsingPOSTNotFound with default headers values
func NewAddServicersUsingPOSTNotFound() *AddServicersUsingPOSTNotFound {
	return &AddServicersUsingPOSTNotFound{}
}

/*
AddServicersUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddServicersUsingPOSTNotFound struct {
}

// IsSuccess returns true when this add servicers using p o s t not found response has a 2xx status code
func (o *AddServicersUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add servicers using p o s t not found response has a 3xx status code
func (o *AddServicersUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add servicers using p o s t not found response has a 4xx status code
func (o *AddServicersUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add servicers using p o s t not found response has a 5xx status code
func (o *AddServicersUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add servicers using p o s t not found response a status code equal to that given
func (o *AddServicersUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add servicers using p o s t not found response
func (o *AddServicersUsingPOSTNotFound) Code() int {
	return 404
}

func (o *AddServicersUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/servicer][%d] addServicersUsingPOSTNotFound", 404)
}

func (o *AddServicersUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/servicer][%d] addServicersUsingPOSTNotFound", 404)
}

func (o *AddServicersUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddServicersUsingPOSTInternalServerError creates a AddServicersUsingPOSTInternalServerError with default headers values
func NewAddServicersUsingPOSTInternalServerError() *AddServicersUsingPOSTInternalServerError {
	return &AddServicersUsingPOSTInternalServerError{}
}

/*
AddServicersUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AddServicersUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this add servicers using p o s t internal server error response has a 2xx status code
func (o *AddServicersUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add servicers using p o s t internal server error response has a 3xx status code
func (o *AddServicersUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add servicers using p o s t internal server error response has a 4xx status code
func (o *AddServicersUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add servicers using p o s t internal server error response has a 5xx status code
func (o *AddServicersUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add servicers using p o s t internal server error response a status code equal to that given
func (o *AddServicersUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add servicers using p o s t internal server error response
func (o *AddServicersUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *AddServicersUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/servicer][%d] addServicersUsingPOSTInternalServerError", 500)
}

func (o *AddServicersUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/servicer][%d] addServicersUsingPOSTInternalServerError", 500)
}

func (o *AddServicersUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
