// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateMemberGroupBenefitOptionsUsingPUTReader is a Reader for the UpdateMemberGroupBenefitOptionsUsingPUT structure.
type UpdateMemberGroupBenefitOptionsUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMemberGroupBenefitOptionsUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateMemberGroupBenefitOptionsUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateMemberGroupBenefitOptionsUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateMemberGroupBenefitOptionsUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateMemberGroupBenefitOptionsUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateMemberGroupBenefitOptionsUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateMemberGroupBenefitOptionsUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateMemberGroupBenefitOptionsUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/policy/memberGroupBenefitOptions] updateMemberGroupBenefitOptionsUsingPUT", response, response.Code())
	}
}

// NewUpdateMemberGroupBenefitOptionsUsingPUTOK creates a UpdateMemberGroupBenefitOptionsUsingPUTOK with default headers values
func NewUpdateMemberGroupBenefitOptionsUsingPUTOK() *UpdateMemberGroupBenefitOptionsUsingPUTOK {
	return &UpdateMemberGroupBenefitOptionsUsingPUTOK{}
}

/*
UpdateMemberGroupBenefitOptionsUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateMemberGroupBenefitOptionsUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update member group benefit options using p u t o k response has a 2xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member group benefit options using p u t o k response has a 3xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group benefit options using p u t o k response has a 4xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member group benefit options using p u t o k response has a 5xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group benefit options using p u t o k response a status code equal to that given
func (o *UpdateMemberGroupBenefitOptionsUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update member group benefit options using p u t o k response
func (o *UpdateMemberGroupBenefitOptionsUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupBenefitOptions][%d] updateMemberGroupBenefitOptionsUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupBenefitOptions][%d] updateMemberGroupBenefitOptionsUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMemberGroupBenefitOptionsUsingPUTCreated creates a UpdateMemberGroupBenefitOptionsUsingPUTCreated with default headers values
func NewUpdateMemberGroupBenefitOptionsUsingPUTCreated() *UpdateMemberGroupBenefitOptionsUsingPUTCreated {
	return &UpdateMemberGroupBenefitOptionsUsingPUTCreated{}
}

/*
UpdateMemberGroupBenefitOptionsUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateMemberGroupBenefitOptionsUsingPUTCreated struct {
}

// IsSuccess returns true when this update member group benefit options using p u t created response has a 2xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member group benefit options using p u t created response has a 3xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group benefit options using p u t created response has a 4xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member group benefit options using p u t created response has a 5xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group benefit options using p u t created response a status code equal to that given
func (o *UpdateMemberGroupBenefitOptionsUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update member group benefit options using p u t created response
func (o *UpdateMemberGroupBenefitOptionsUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupBenefitOptions][%d] updateMemberGroupBenefitOptionsUsingPUTCreated", 201)
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupBenefitOptions][%d] updateMemberGroupBenefitOptionsUsingPUTCreated", 201)
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupBenefitOptionsUsingPUTBadRequest creates a UpdateMemberGroupBenefitOptionsUsingPUTBadRequest with default headers values
func NewUpdateMemberGroupBenefitOptionsUsingPUTBadRequest() *UpdateMemberGroupBenefitOptionsUsingPUTBadRequest {
	return &UpdateMemberGroupBenefitOptionsUsingPUTBadRequest{}
}

/*
UpdateMemberGroupBenefitOptionsUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateMemberGroupBenefitOptionsUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update member group benefit options using p u t bad request response has a 2xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group benefit options using p u t bad request response has a 3xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group benefit options using p u t bad request response has a 4xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member group benefit options using p u t bad request response has a 5xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group benefit options using p u t bad request response a status code equal to that given
func (o *UpdateMemberGroupBenefitOptionsUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update member group benefit options using p u t bad request response
func (o *UpdateMemberGroupBenefitOptionsUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupBenefitOptions][%d] updateMemberGroupBenefitOptionsUsingPUTBadRequest", 400)
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupBenefitOptions][%d] updateMemberGroupBenefitOptionsUsingPUTBadRequest", 400)
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupBenefitOptionsUsingPUTUnauthorized creates a UpdateMemberGroupBenefitOptionsUsingPUTUnauthorized with default headers values
func NewUpdateMemberGroupBenefitOptionsUsingPUTUnauthorized() *UpdateMemberGroupBenefitOptionsUsingPUTUnauthorized {
	return &UpdateMemberGroupBenefitOptionsUsingPUTUnauthorized{}
}

/*
UpdateMemberGroupBenefitOptionsUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateMemberGroupBenefitOptionsUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update member group benefit options using p u t unauthorized response has a 2xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group benefit options using p u t unauthorized response has a 3xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group benefit options using p u t unauthorized response has a 4xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member group benefit options using p u t unauthorized response has a 5xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group benefit options using p u t unauthorized response a status code equal to that given
func (o *UpdateMemberGroupBenefitOptionsUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update member group benefit options using p u t unauthorized response
func (o *UpdateMemberGroupBenefitOptionsUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupBenefitOptions][%d] updateMemberGroupBenefitOptionsUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupBenefitOptions][%d] updateMemberGroupBenefitOptionsUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupBenefitOptionsUsingPUTForbidden creates a UpdateMemberGroupBenefitOptionsUsingPUTForbidden with default headers values
func NewUpdateMemberGroupBenefitOptionsUsingPUTForbidden() *UpdateMemberGroupBenefitOptionsUsingPUTForbidden {
	return &UpdateMemberGroupBenefitOptionsUsingPUTForbidden{}
}

/*
UpdateMemberGroupBenefitOptionsUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateMemberGroupBenefitOptionsUsingPUTForbidden struct {
}

// IsSuccess returns true when this update member group benefit options using p u t forbidden response has a 2xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group benefit options using p u t forbidden response has a 3xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group benefit options using p u t forbidden response has a 4xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member group benefit options using p u t forbidden response has a 5xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group benefit options using p u t forbidden response a status code equal to that given
func (o *UpdateMemberGroupBenefitOptionsUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update member group benefit options using p u t forbidden response
func (o *UpdateMemberGroupBenefitOptionsUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupBenefitOptions][%d] updateMemberGroupBenefitOptionsUsingPUTForbidden", 403)
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupBenefitOptions][%d] updateMemberGroupBenefitOptionsUsingPUTForbidden", 403)
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupBenefitOptionsUsingPUTNotFound creates a UpdateMemberGroupBenefitOptionsUsingPUTNotFound with default headers values
func NewUpdateMemberGroupBenefitOptionsUsingPUTNotFound() *UpdateMemberGroupBenefitOptionsUsingPUTNotFound {
	return &UpdateMemberGroupBenefitOptionsUsingPUTNotFound{}
}

/*
UpdateMemberGroupBenefitOptionsUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateMemberGroupBenefitOptionsUsingPUTNotFound struct {
}

// IsSuccess returns true when this update member group benefit options using p u t not found response has a 2xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group benefit options using p u t not found response has a 3xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group benefit options using p u t not found response has a 4xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member group benefit options using p u t not found response has a 5xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group benefit options using p u t not found response a status code equal to that given
func (o *UpdateMemberGroupBenefitOptionsUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update member group benefit options using p u t not found response
func (o *UpdateMemberGroupBenefitOptionsUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupBenefitOptions][%d] updateMemberGroupBenefitOptionsUsingPUTNotFound", 404)
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupBenefitOptions][%d] updateMemberGroupBenefitOptionsUsingPUTNotFound", 404)
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupBenefitOptionsUsingPUTInternalServerError creates a UpdateMemberGroupBenefitOptionsUsingPUTInternalServerError with default headers values
func NewUpdateMemberGroupBenefitOptionsUsingPUTInternalServerError() *UpdateMemberGroupBenefitOptionsUsingPUTInternalServerError {
	return &UpdateMemberGroupBenefitOptionsUsingPUTInternalServerError{}
}

/*
UpdateMemberGroupBenefitOptionsUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateMemberGroupBenefitOptionsUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update member group benefit options using p u t internal server error response has a 2xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group benefit options using p u t internal server error response has a 3xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group benefit options using p u t internal server error response has a 4xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member group benefit options using p u t internal server error response has a 5xx status code
func (o *UpdateMemberGroupBenefitOptionsUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update member group benefit options using p u t internal server error response a status code equal to that given
func (o *UpdateMemberGroupBenefitOptionsUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update member group benefit options using p u t internal server error response
func (o *UpdateMemberGroupBenefitOptionsUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupBenefitOptions][%d] updateMemberGroupBenefitOptionsUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupBenefitOptions][%d] updateMemberGroupBenefitOptionsUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberGroupBenefitOptionsUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
