// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateMemberNameSuffixUsingPUTReader is a Reader for the UpdateMemberNameSuffixUsingPUT structure.
type UpdateMemberNameSuffixUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMemberNameSuffixUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateMemberNameSuffixUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateMemberNameSuffixUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateMemberNameSuffixUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateMemberNameSuffixUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateMemberNameSuffixUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateMemberNameSuffixUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateMemberNameSuffixUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/member/update/nameSuffix] updateMemberNameSuffixUsingPUT", response, response.Code())
	}
}

// NewUpdateMemberNameSuffixUsingPUTOK creates a UpdateMemberNameSuffixUsingPUTOK with default headers values
func NewUpdateMemberNameSuffixUsingPUTOK() *UpdateMemberNameSuffixUsingPUTOK {
	return &UpdateMemberNameSuffixUsingPUTOK{}
}

/*
UpdateMemberNameSuffixUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateMemberNameSuffixUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update member name suffix using p u t o k response has a 2xx status code
func (o *UpdateMemberNameSuffixUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member name suffix using p u t o k response has a 3xx status code
func (o *UpdateMemberNameSuffixUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member name suffix using p u t o k response has a 4xx status code
func (o *UpdateMemberNameSuffixUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member name suffix using p u t o k response has a 5xx status code
func (o *UpdateMemberNameSuffixUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update member name suffix using p u t o k response a status code equal to that given
func (o *UpdateMemberNameSuffixUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update member name suffix using p u t o k response
func (o *UpdateMemberNameSuffixUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateMemberNameSuffixUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/nameSuffix][%d] updateMemberNameSuffixUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberNameSuffixUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/nameSuffix][%d] updateMemberNameSuffixUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberNameSuffixUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateMemberNameSuffixUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMemberNameSuffixUsingPUTCreated creates a UpdateMemberNameSuffixUsingPUTCreated with default headers values
func NewUpdateMemberNameSuffixUsingPUTCreated() *UpdateMemberNameSuffixUsingPUTCreated {
	return &UpdateMemberNameSuffixUsingPUTCreated{}
}

/*
UpdateMemberNameSuffixUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateMemberNameSuffixUsingPUTCreated struct {
}

// IsSuccess returns true when this update member name suffix using p u t created response has a 2xx status code
func (o *UpdateMemberNameSuffixUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member name suffix using p u t created response has a 3xx status code
func (o *UpdateMemberNameSuffixUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member name suffix using p u t created response has a 4xx status code
func (o *UpdateMemberNameSuffixUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member name suffix using p u t created response has a 5xx status code
func (o *UpdateMemberNameSuffixUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update member name suffix using p u t created response a status code equal to that given
func (o *UpdateMemberNameSuffixUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update member name suffix using p u t created response
func (o *UpdateMemberNameSuffixUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateMemberNameSuffixUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/nameSuffix][%d] updateMemberNameSuffixUsingPUTCreated", 201)
}

func (o *UpdateMemberNameSuffixUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/nameSuffix][%d] updateMemberNameSuffixUsingPUTCreated", 201)
}

func (o *UpdateMemberNameSuffixUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberNameSuffixUsingPUTBadRequest creates a UpdateMemberNameSuffixUsingPUTBadRequest with default headers values
func NewUpdateMemberNameSuffixUsingPUTBadRequest() *UpdateMemberNameSuffixUsingPUTBadRequest {
	return &UpdateMemberNameSuffixUsingPUTBadRequest{}
}

/*
UpdateMemberNameSuffixUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateMemberNameSuffixUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update member name suffix using p u t bad request response has a 2xx status code
func (o *UpdateMemberNameSuffixUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member name suffix using p u t bad request response has a 3xx status code
func (o *UpdateMemberNameSuffixUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member name suffix using p u t bad request response has a 4xx status code
func (o *UpdateMemberNameSuffixUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member name suffix using p u t bad request response has a 5xx status code
func (o *UpdateMemberNameSuffixUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update member name suffix using p u t bad request response a status code equal to that given
func (o *UpdateMemberNameSuffixUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update member name suffix using p u t bad request response
func (o *UpdateMemberNameSuffixUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateMemberNameSuffixUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/nameSuffix][%d] updateMemberNameSuffixUsingPUTBadRequest", 400)
}

func (o *UpdateMemberNameSuffixUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/nameSuffix][%d] updateMemberNameSuffixUsingPUTBadRequest", 400)
}

func (o *UpdateMemberNameSuffixUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberNameSuffixUsingPUTUnauthorized creates a UpdateMemberNameSuffixUsingPUTUnauthorized with default headers values
func NewUpdateMemberNameSuffixUsingPUTUnauthorized() *UpdateMemberNameSuffixUsingPUTUnauthorized {
	return &UpdateMemberNameSuffixUsingPUTUnauthorized{}
}

/*
UpdateMemberNameSuffixUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateMemberNameSuffixUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update member name suffix using p u t unauthorized response has a 2xx status code
func (o *UpdateMemberNameSuffixUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member name suffix using p u t unauthorized response has a 3xx status code
func (o *UpdateMemberNameSuffixUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member name suffix using p u t unauthorized response has a 4xx status code
func (o *UpdateMemberNameSuffixUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member name suffix using p u t unauthorized response has a 5xx status code
func (o *UpdateMemberNameSuffixUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update member name suffix using p u t unauthorized response a status code equal to that given
func (o *UpdateMemberNameSuffixUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update member name suffix using p u t unauthorized response
func (o *UpdateMemberNameSuffixUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateMemberNameSuffixUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/nameSuffix][%d] updateMemberNameSuffixUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberNameSuffixUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/nameSuffix][%d] updateMemberNameSuffixUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberNameSuffixUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberNameSuffixUsingPUTForbidden creates a UpdateMemberNameSuffixUsingPUTForbidden with default headers values
func NewUpdateMemberNameSuffixUsingPUTForbidden() *UpdateMemberNameSuffixUsingPUTForbidden {
	return &UpdateMemberNameSuffixUsingPUTForbidden{}
}

/*
UpdateMemberNameSuffixUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateMemberNameSuffixUsingPUTForbidden struct {
}

// IsSuccess returns true when this update member name suffix using p u t forbidden response has a 2xx status code
func (o *UpdateMemberNameSuffixUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member name suffix using p u t forbidden response has a 3xx status code
func (o *UpdateMemberNameSuffixUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member name suffix using p u t forbidden response has a 4xx status code
func (o *UpdateMemberNameSuffixUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member name suffix using p u t forbidden response has a 5xx status code
func (o *UpdateMemberNameSuffixUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update member name suffix using p u t forbidden response a status code equal to that given
func (o *UpdateMemberNameSuffixUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update member name suffix using p u t forbidden response
func (o *UpdateMemberNameSuffixUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateMemberNameSuffixUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/nameSuffix][%d] updateMemberNameSuffixUsingPUTForbidden", 403)
}

func (o *UpdateMemberNameSuffixUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/nameSuffix][%d] updateMemberNameSuffixUsingPUTForbidden", 403)
}

func (o *UpdateMemberNameSuffixUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberNameSuffixUsingPUTNotFound creates a UpdateMemberNameSuffixUsingPUTNotFound with default headers values
func NewUpdateMemberNameSuffixUsingPUTNotFound() *UpdateMemberNameSuffixUsingPUTNotFound {
	return &UpdateMemberNameSuffixUsingPUTNotFound{}
}

/*
UpdateMemberNameSuffixUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateMemberNameSuffixUsingPUTNotFound struct {
}

// IsSuccess returns true when this update member name suffix using p u t not found response has a 2xx status code
func (o *UpdateMemberNameSuffixUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member name suffix using p u t not found response has a 3xx status code
func (o *UpdateMemberNameSuffixUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member name suffix using p u t not found response has a 4xx status code
func (o *UpdateMemberNameSuffixUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member name suffix using p u t not found response has a 5xx status code
func (o *UpdateMemberNameSuffixUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update member name suffix using p u t not found response a status code equal to that given
func (o *UpdateMemberNameSuffixUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update member name suffix using p u t not found response
func (o *UpdateMemberNameSuffixUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateMemberNameSuffixUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/nameSuffix][%d] updateMemberNameSuffixUsingPUTNotFound", 404)
}

func (o *UpdateMemberNameSuffixUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/nameSuffix][%d] updateMemberNameSuffixUsingPUTNotFound", 404)
}

func (o *UpdateMemberNameSuffixUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberNameSuffixUsingPUTInternalServerError creates a UpdateMemberNameSuffixUsingPUTInternalServerError with default headers values
func NewUpdateMemberNameSuffixUsingPUTInternalServerError() *UpdateMemberNameSuffixUsingPUTInternalServerError {
	return &UpdateMemberNameSuffixUsingPUTInternalServerError{}
}

/*
UpdateMemberNameSuffixUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateMemberNameSuffixUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update member name suffix using p u t internal server error response has a 2xx status code
func (o *UpdateMemberNameSuffixUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member name suffix using p u t internal server error response has a 3xx status code
func (o *UpdateMemberNameSuffixUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member name suffix using p u t internal server error response has a 4xx status code
func (o *UpdateMemberNameSuffixUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member name suffix using p u t internal server error response has a 5xx status code
func (o *UpdateMemberNameSuffixUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update member name suffix using p u t internal server error response a status code equal to that given
func (o *UpdateMemberNameSuffixUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update member name suffix using p u t internal server error response
func (o *UpdateMemberNameSuffixUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateMemberNameSuffixUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/nameSuffix][%d] updateMemberNameSuffixUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberNameSuffixUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/nameSuffix][%d] updateMemberNameSuffixUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberNameSuffixUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
