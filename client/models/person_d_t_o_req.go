// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PersonDTOReq PersonDTOReq
//
// swagger:model PersonDTOReq
type PersonDTOReq struct {

	// audit Id
	AuditID string `json:"auditId,omitempty"`

	// birth date
	BirthDate string `json:"birthDate,omitempty"`

	// client Id
	ClientID string `json:"clientId,omitempty"`

	// first name
	FirstName string `json:"firstName,omitempty"`

	// gender
	Gender string `json:"gender,omitempty"`

	// height
	Height string `json:"height,omitempty"`

	// last name
	LastName string `json:"lastName,omitempty"`

	// marital status
	MaritalStatus string `json:"maritalStatus,omitempty"`

	// middle name
	MiddleName string `json:"middleName,omitempty"`

	// name prefix
	NamePrefix string `json:"namePrefix,omitempty"`

	// name suffix
	NameSuffix string `json:"nameSuffix,omitempty"`

	// passport number
	PassportNumber string `json:"passportNumber,omitempty"`

	// preferred language
	PreferredLanguage string `json:"preferredLanguage,omitempty"`

	// social security number
	SocialSecurityNumber string `json:"socialSecurityNumber,omitempty"`

	// weight
	Weight string `json:"weight,omitempty"`
}

// Validate validates this person d t o req
func (m *PersonDTOReq) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this person d t o req based on context it is used
func (m *PersonDTOReq) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PersonDTOReq) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PersonDTOReq) UnmarshalBinary(b []byte) error {
	var res PersonDTOReq
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
