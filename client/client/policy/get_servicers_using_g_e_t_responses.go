// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetServicersUsingGETReader is a Reader for the GetServicersUsingGET structure.
type GetServicersUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServicersUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServicersUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetServicersUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetServicersUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetServicersUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetServicersUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetServicersUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/policy/servicer] getServicersUsingGET", response, response.Code())
	}
}

// NewGetServicersUsingGETOK creates a GetServicersUsingGETOK with default headers values
func NewGetServicersUsingGETOK() *GetServicersUsingGETOK {
	return &GetServicersUsingGETOK{}
}

/*
GetServicersUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetServicersUsingGETOK struct {
	Payload *models.ResponseWrapperListServicerDTO
}

// IsSuccess returns true when this get servicers using g e t o k response has a 2xx status code
func (o *GetServicersUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get servicers using g e t o k response has a 3xx status code
func (o *GetServicersUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get servicers using g e t o k response has a 4xx status code
func (o *GetServicersUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get servicers using g e t o k response has a 5xx status code
func (o *GetServicersUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get servicers using g e t o k response a status code equal to that given
func (o *GetServicersUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get servicers using g e t o k response
func (o *GetServicersUsingGETOK) Code() int {
	return 200
}

func (o *GetServicersUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/servicer][%d] getServicersUsingGETOK %s", 200, payload)
}

func (o *GetServicersUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/servicer][%d] getServicersUsingGETOK %s", 200, payload)
}

func (o *GetServicersUsingGETOK) GetPayload() *models.ResponseWrapperListServicerDTO {
	return o.Payload
}

func (o *GetServicersUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperListServicerDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServicersUsingGETBadRequest creates a GetServicersUsingGETBadRequest with default headers values
func NewGetServicersUsingGETBadRequest() *GetServicersUsingGETBadRequest {
	return &GetServicersUsingGETBadRequest{}
}

/*
GetServicersUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetServicersUsingGETBadRequest struct {
}

// IsSuccess returns true when this get servicers using g e t bad request response has a 2xx status code
func (o *GetServicersUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get servicers using g e t bad request response has a 3xx status code
func (o *GetServicersUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get servicers using g e t bad request response has a 4xx status code
func (o *GetServicersUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get servicers using g e t bad request response has a 5xx status code
func (o *GetServicersUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get servicers using g e t bad request response a status code equal to that given
func (o *GetServicersUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get servicers using g e t bad request response
func (o *GetServicersUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetServicersUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/servicer][%d] getServicersUsingGETBadRequest", 400)
}

func (o *GetServicersUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/servicer][%d] getServicersUsingGETBadRequest", 400)
}

func (o *GetServicersUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicersUsingGETUnauthorized creates a GetServicersUsingGETUnauthorized with default headers values
func NewGetServicersUsingGETUnauthorized() *GetServicersUsingGETUnauthorized {
	return &GetServicersUsingGETUnauthorized{}
}

/*
GetServicersUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetServicersUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get servicers using g e t unauthorized response has a 2xx status code
func (o *GetServicersUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get servicers using g e t unauthorized response has a 3xx status code
func (o *GetServicersUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get servicers using g e t unauthorized response has a 4xx status code
func (o *GetServicersUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get servicers using g e t unauthorized response has a 5xx status code
func (o *GetServicersUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get servicers using g e t unauthorized response a status code equal to that given
func (o *GetServicersUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get servicers using g e t unauthorized response
func (o *GetServicersUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetServicersUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/servicer][%d] getServicersUsingGETUnauthorized", 401)
}

func (o *GetServicersUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/servicer][%d] getServicersUsingGETUnauthorized", 401)
}

func (o *GetServicersUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicersUsingGETForbidden creates a GetServicersUsingGETForbidden with default headers values
func NewGetServicersUsingGETForbidden() *GetServicersUsingGETForbidden {
	return &GetServicersUsingGETForbidden{}
}

/*
GetServicersUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetServicersUsingGETForbidden struct {
}

// IsSuccess returns true when this get servicers using g e t forbidden response has a 2xx status code
func (o *GetServicersUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get servicers using g e t forbidden response has a 3xx status code
func (o *GetServicersUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get servicers using g e t forbidden response has a 4xx status code
func (o *GetServicersUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get servicers using g e t forbidden response has a 5xx status code
func (o *GetServicersUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get servicers using g e t forbidden response a status code equal to that given
func (o *GetServicersUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get servicers using g e t forbidden response
func (o *GetServicersUsingGETForbidden) Code() int {
	return 403
}

func (o *GetServicersUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/servicer][%d] getServicersUsingGETForbidden", 403)
}

func (o *GetServicersUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/servicer][%d] getServicersUsingGETForbidden", 403)
}

func (o *GetServicersUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicersUsingGETNotFound creates a GetServicersUsingGETNotFound with default headers values
func NewGetServicersUsingGETNotFound() *GetServicersUsingGETNotFound {
	return &GetServicersUsingGETNotFound{}
}

/*
GetServicersUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetServicersUsingGETNotFound struct {
}

// IsSuccess returns true when this get servicers using g e t not found response has a 2xx status code
func (o *GetServicersUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get servicers using g e t not found response has a 3xx status code
func (o *GetServicersUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get servicers using g e t not found response has a 4xx status code
func (o *GetServicersUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get servicers using g e t not found response has a 5xx status code
func (o *GetServicersUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get servicers using g e t not found response a status code equal to that given
func (o *GetServicersUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get servicers using g e t not found response
func (o *GetServicersUsingGETNotFound) Code() int {
	return 404
}

func (o *GetServicersUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/servicer][%d] getServicersUsingGETNotFound", 404)
}

func (o *GetServicersUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/servicer][%d] getServicersUsingGETNotFound", 404)
}

func (o *GetServicersUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicersUsingGETInternalServerError creates a GetServicersUsingGETInternalServerError with default headers values
func NewGetServicersUsingGETInternalServerError() *GetServicersUsingGETInternalServerError {
	return &GetServicersUsingGETInternalServerError{}
}

/*
GetServicersUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetServicersUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get servicers using g e t internal server error response has a 2xx status code
func (o *GetServicersUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get servicers using g e t internal server error response has a 3xx status code
func (o *GetServicersUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get servicers using g e t internal server error response has a 4xx status code
func (o *GetServicersUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get servicers using g e t internal server error response has a 5xx status code
func (o *GetServicersUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get servicers using g e t internal server error response a status code equal to that given
func (o *GetServicersUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get servicers using g e t internal server error response
func (o *GetServicersUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetServicersUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/servicer][%d] getServicersUsingGETInternalServerError", 500)
}

func (o *GetServicersUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/servicer][%d] getServicersUsingGETInternalServerError", 500)
}

func (o *GetServicersUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
