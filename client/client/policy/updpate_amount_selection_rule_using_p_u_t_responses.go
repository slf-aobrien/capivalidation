// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdpateAmountSelectionRuleUsingPUTReader is a Reader for the UpdpateAmountSelectionRuleUsingPUT structure.
type UpdpateAmountSelectionRuleUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdpateAmountSelectionRuleUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdpateAmountSelectionRuleUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdpateAmountSelectionRuleUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdpateAmountSelectionRuleUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdpateAmountSelectionRuleUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdpateAmountSelectionRuleUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdpateAmountSelectionRuleUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdpateAmountSelectionRuleUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/policy/policyServiceRule/updateAmountSelectionRule] updpateAmountSelectionRuleUsingPUT", response, response.Code())
	}
}

// NewUpdpateAmountSelectionRuleUsingPUTOK creates a UpdpateAmountSelectionRuleUsingPUTOK with default headers values
func NewUpdpateAmountSelectionRuleUsingPUTOK() *UpdpateAmountSelectionRuleUsingPUTOK {
	return &UpdpateAmountSelectionRuleUsingPUTOK{}
}

/*
UpdpateAmountSelectionRuleUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdpateAmountSelectionRuleUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this updpate amount selection rule using p u t o k response has a 2xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this updpate amount selection rule using p u t o k response has a 3xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this updpate amount selection rule using p u t o k response has a 4xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this updpate amount selection rule using p u t o k response has a 5xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this updpate amount selection rule using p u t o k response a status code equal to that given
func (o *UpdpateAmountSelectionRuleUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the updpate amount selection rule using p u t o k response
func (o *UpdpateAmountSelectionRuleUsingPUTOK) Code() int {
	return 200
}

func (o *UpdpateAmountSelectionRuleUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateAmountSelectionRule][%d] updpateAmountSelectionRuleUsingPUTOK %s", 200, payload)
}

func (o *UpdpateAmountSelectionRuleUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateAmountSelectionRule][%d] updpateAmountSelectionRuleUsingPUTOK %s", 200, payload)
}

func (o *UpdpateAmountSelectionRuleUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdpateAmountSelectionRuleUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdpateAmountSelectionRuleUsingPUTCreated creates a UpdpateAmountSelectionRuleUsingPUTCreated with default headers values
func NewUpdpateAmountSelectionRuleUsingPUTCreated() *UpdpateAmountSelectionRuleUsingPUTCreated {
	return &UpdpateAmountSelectionRuleUsingPUTCreated{}
}

/*
UpdpateAmountSelectionRuleUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdpateAmountSelectionRuleUsingPUTCreated struct {
}

// IsSuccess returns true when this updpate amount selection rule using p u t created response has a 2xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this updpate amount selection rule using p u t created response has a 3xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this updpate amount selection rule using p u t created response has a 4xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this updpate amount selection rule using p u t created response has a 5xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this updpate amount selection rule using p u t created response a status code equal to that given
func (o *UpdpateAmountSelectionRuleUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the updpate amount selection rule using p u t created response
func (o *UpdpateAmountSelectionRuleUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdpateAmountSelectionRuleUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateAmountSelectionRule][%d] updpateAmountSelectionRuleUsingPUTCreated", 201)
}

func (o *UpdpateAmountSelectionRuleUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateAmountSelectionRule][%d] updpateAmountSelectionRuleUsingPUTCreated", 201)
}

func (o *UpdpateAmountSelectionRuleUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdpateAmountSelectionRuleUsingPUTBadRequest creates a UpdpateAmountSelectionRuleUsingPUTBadRequest with default headers values
func NewUpdpateAmountSelectionRuleUsingPUTBadRequest() *UpdpateAmountSelectionRuleUsingPUTBadRequest {
	return &UpdpateAmountSelectionRuleUsingPUTBadRequest{}
}

/*
UpdpateAmountSelectionRuleUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdpateAmountSelectionRuleUsingPUTBadRequest struct {
}

// IsSuccess returns true when this updpate amount selection rule using p u t bad request response has a 2xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this updpate amount selection rule using p u t bad request response has a 3xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this updpate amount selection rule using p u t bad request response has a 4xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this updpate amount selection rule using p u t bad request response has a 5xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this updpate amount selection rule using p u t bad request response a status code equal to that given
func (o *UpdpateAmountSelectionRuleUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the updpate amount selection rule using p u t bad request response
func (o *UpdpateAmountSelectionRuleUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdpateAmountSelectionRuleUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateAmountSelectionRule][%d] updpateAmountSelectionRuleUsingPUTBadRequest", 400)
}

func (o *UpdpateAmountSelectionRuleUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateAmountSelectionRule][%d] updpateAmountSelectionRuleUsingPUTBadRequest", 400)
}

func (o *UpdpateAmountSelectionRuleUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdpateAmountSelectionRuleUsingPUTUnauthorized creates a UpdpateAmountSelectionRuleUsingPUTUnauthorized with default headers values
func NewUpdpateAmountSelectionRuleUsingPUTUnauthorized() *UpdpateAmountSelectionRuleUsingPUTUnauthorized {
	return &UpdpateAmountSelectionRuleUsingPUTUnauthorized{}
}

/*
UpdpateAmountSelectionRuleUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdpateAmountSelectionRuleUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this updpate amount selection rule using p u t unauthorized response has a 2xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this updpate amount selection rule using p u t unauthorized response has a 3xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this updpate amount selection rule using p u t unauthorized response has a 4xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this updpate amount selection rule using p u t unauthorized response has a 5xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this updpate amount selection rule using p u t unauthorized response a status code equal to that given
func (o *UpdpateAmountSelectionRuleUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the updpate amount selection rule using p u t unauthorized response
func (o *UpdpateAmountSelectionRuleUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdpateAmountSelectionRuleUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateAmountSelectionRule][%d] updpateAmountSelectionRuleUsingPUTUnauthorized", 401)
}

func (o *UpdpateAmountSelectionRuleUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateAmountSelectionRule][%d] updpateAmountSelectionRuleUsingPUTUnauthorized", 401)
}

func (o *UpdpateAmountSelectionRuleUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdpateAmountSelectionRuleUsingPUTForbidden creates a UpdpateAmountSelectionRuleUsingPUTForbidden with default headers values
func NewUpdpateAmountSelectionRuleUsingPUTForbidden() *UpdpateAmountSelectionRuleUsingPUTForbidden {
	return &UpdpateAmountSelectionRuleUsingPUTForbidden{}
}

/*
UpdpateAmountSelectionRuleUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdpateAmountSelectionRuleUsingPUTForbidden struct {
}

// IsSuccess returns true when this updpate amount selection rule using p u t forbidden response has a 2xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this updpate amount selection rule using p u t forbidden response has a 3xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this updpate amount selection rule using p u t forbidden response has a 4xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this updpate amount selection rule using p u t forbidden response has a 5xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this updpate amount selection rule using p u t forbidden response a status code equal to that given
func (o *UpdpateAmountSelectionRuleUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the updpate amount selection rule using p u t forbidden response
func (o *UpdpateAmountSelectionRuleUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdpateAmountSelectionRuleUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateAmountSelectionRule][%d] updpateAmountSelectionRuleUsingPUTForbidden", 403)
}

func (o *UpdpateAmountSelectionRuleUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateAmountSelectionRule][%d] updpateAmountSelectionRuleUsingPUTForbidden", 403)
}

func (o *UpdpateAmountSelectionRuleUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdpateAmountSelectionRuleUsingPUTNotFound creates a UpdpateAmountSelectionRuleUsingPUTNotFound with default headers values
func NewUpdpateAmountSelectionRuleUsingPUTNotFound() *UpdpateAmountSelectionRuleUsingPUTNotFound {
	return &UpdpateAmountSelectionRuleUsingPUTNotFound{}
}

/*
UpdpateAmountSelectionRuleUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdpateAmountSelectionRuleUsingPUTNotFound struct {
}

// IsSuccess returns true when this updpate amount selection rule using p u t not found response has a 2xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this updpate amount selection rule using p u t not found response has a 3xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this updpate amount selection rule using p u t not found response has a 4xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this updpate amount selection rule using p u t not found response has a 5xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this updpate amount selection rule using p u t not found response a status code equal to that given
func (o *UpdpateAmountSelectionRuleUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the updpate amount selection rule using p u t not found response
func (o *UpdpateAmountSelectionRuleUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdpateAmountSelectionRuleUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateAmountSelectionRule][%d] updpateAmountSelectionRuleUsingPUTNotFound", 404)
}

func (o *UpdpateAmountSelectionRuleUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateAmountSelectionRule][%d] updpateAmountSelectionRuleUsingPUTNotFound", 404)
}

func (o *UpdpateAmountSelectionRuleUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdpateAmountSelectionRuleUsingPUTInternalServerError creates a UpdpateAmountSelectionRuleUsingPUTInternalServerError with default headers values
func NewUpdpateAmountSelectionRuleUsingPUTInternalServerError() *UpdpateAmountSelectionRuleUsingPUTInternalServerError {
	return &UpdpateAmountSelectionRuleUsingPUTInternalServerError{}
}

/*
UpdpateAmountSelectionRuleUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdpateAmountSelectionRuleUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this updpate amount selection rule using p u t internal server error response has a 2xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this updpate amount selection rule using p u t internal server error response has a 3xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this updpate amount selection rule using p u t internal server error response has a 4xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this updpate amount selection rule using p u t internal server error response has a 5xx status code
func (o *UpdpateAmountSelectionRuleUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this updpate amount selection rule using p u t internal server error response a status code equal to that given
func (o *UpdpateAmountSelectionRuleUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the updpate amount selection rule using p u t internal server error response
func (o *UpdpateAmountSelectionRuleUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdpateAmountSelectionRuleUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateAmountSelectionRule][%d] updpateAmountSelectionRuleUsingPUTInternalServerError", 500)
}

func (o *UpdpateAmountSelectionRuleUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateAmountSelectionRule][%d] updpateAmountSelectionRuleUsingPUTInternalServerError", 500)
}

func (o *UpdpateAmountSelectionRuleUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
