// Code generated by go-swagger; DO NOT EDIT.

package dependent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// AddDependentBenefitExclusionsUsingPOSTReader is a Reader for the AddDependentBenefitExclusionsUsingPOST structure.
type AddDependentBenefitExclusionsUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddDependentBenefitExclusionsUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddDependentBenefitExclusionsUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewAddDependentBenefitExclusionsUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddDependentBenefitExclusionsUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddDependentBenefitExclusionsUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddDependentBenefitExclusionsUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddDependentBenefitExclusionsUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddDependentBenefitExclusionsUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/dependent/benefitexclusions/add] addDependentBenefitExclusionsUsingPOST", response, response.Code())
	}
}

// NewAddDependentBenefitExclusionsUsingPOSTOK creates a AddDependentBenefitExclusionsUsingPOSTOK with default headers values
func NewAddDependentBenefitExclusionsUsingPOSTOK() *AddDependentBenefitExclusionsUsingPOSTOK {
	return &AddDependentBenefitExclusionsUsingPOSTOK{}
}

/*
AddDependentBenefitExclusionsUsingPOSTOK describes a response with status code 200, with default header values.

Success
*/
type AddDependentBenefitExclusionsUsingPOSTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this add dependent benefit exclusions using p o s t o k response has a 2xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add dependent benefit exclusions using p o s t o k response has a 3xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add dependent benefit exclusions using p o s t o k response has a 4xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add dependent benefit exclusions using p o s t o k response has a 5xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add dependent benefit exclusions using p o s t o k response a status code equal to that given
func (o *AddDependentBenefitExclusionsUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add dependent benefit exclusions using p o s t o k response
func (o *AddDependentBenefitExclusionsUsingPOSTOK) Code() int {
	return 200
}

func (o *AddDependentBenefitExclusionsUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/benefitexclusions/add][%d] addDependentBenefitExclusionsUsingPOSTOK %s", 200, payload)
}

func (o *AddDependentBenefitExclusionsUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/benefitexclusions/add][%d] addDependentBenefitExclusionsUsingPOSTOK %s", 200, payload)
}

func (o *AddDependentBenefitExclusionsUsingPOSTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *AddDependentBenefitExclusionsUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddDependentBenefitExclusionsUsingPOSTCreated creates a AddDependentBenefitExclusionsUsingPOSTCreated with default headers values
func NewAddDependentBenefitExclusionsUsingPOSTCreated() *AddDependentBenefitExclusionsUsingPOSTCreated {
	return &AddDependentBenefitExclusionsUsingPOSTCreated{}
}

/*
AddDependentBenefitExclusionsUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type AddDependentBenefitExclusionsUsingPOSTCreated struct {
}

// IsSuccess returns true when this add dependent benefit exclusions using p o s t created response has a 2xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add dependent benefit exclusions using p o s t created response has a 3xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add dependent benefit exclusions using p o s t created response has a 4xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add dependent benefit exclusions using p o s t created response has a 5xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add dependent benefit exclusions using p o s t created response a status code equal to that given
func (o *AddDependentBenefitExclusionsUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add dependent benefit exclusions using p o s t created response
func (o *AddDependentBenefitExclusionsUsingPOSTCreated) Code() int {
	return 201
}

func (o *AddDependentBenefitExclusionsUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/benefitexclusions/add][%d] addDependentBenefitExclusionsUsingPOSTCreated", 201)
}

func (o *AddDependentBenefitExclusionsUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/benefitexclusions/add][%d] addDependentBenefitExclusionsUsingPOSTCreated", 201)
}

func (o *AddDependentBenefitExclusionsUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddDependentBenefitExclusionsUsingPOSTBadRequest creates a AddDependentBenefitExclusionsUsingPOSTBadRequest with default headers values
func NewAddDependentBenefitExclusionsUsingPOSTBadRequest() *AddDependentBenefitExclusionsUsingPOSTBadRequest {
	return &AddDependentBenefitExclusionsUsingPOSTBadRequest{}
}

/*
AddDependentBenefitExclusionsUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddDependentBenefitExclusionsUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this add dependent benefit exclusions using p o s t bad request response has a 2xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add dependent benefit exclusions using p o s t bad request response has a 3xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add dependent benefit exclusions using p o s t bad request response has a 4xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add dependent benefit exclusions using p o s t bad request response has a 5xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add dependent benefit exclusions using p o s t bad request response a status code equal to that given
func (o *AddDependentBenefitExclusionsUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add dependent benefit exclusions using p o s t bad request response
func (o *AddDependentBenefitExclusionsUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *AddDependentBenefitExclusionsUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/benefitexclusions/add][%d] addDependentBenefitExclusionsUsingPOSTBadRequest", 400)
}

func (o *AddDependentBenefitExclusionsUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/benefitexclusions/add][%d] addDependentBenefitExclusionsUsingPOSTBadRequest", 400)
}

func (o *AddDependentBenefitExclusionsUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddDependentBenefitExclusionsUsingPOSTUnauthorized creates a AddDependentBenefitExclusionsUsingPOSTUnauthorized with default headers values
func NewAddDependentBenefitExclusionsUsingPOSTUnauthorized() *AddDependentBenefitExclusionsUsingPOSTUnauthorized {
	return &AddDependentBenefitExclusionsUsingPOSTUnauthorized{}
}

/*
AddDependentBenefitExclusionsUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddDependentBenefitExclusionsUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this add dependent benefit exclusions using p o s t unauthorized response has a 2xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add dependent benefit exclusions using p o s t unauthorized response has a 3xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add dependent benefit exclusions using p o s t unauthorized response has a 4xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add dependent benefit exclusions using p o s t unauthorized response has a 5xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add dependent benefit exclusions using p o s t unauthorized response a status code equal to that given
func (o *AddDependentBenefitExclusionsUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add dependent benefit exclusions using p o s t unauthorized response
func (o *AddDependentBenefitExclusionsUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *AddDependentBenefitExclusionsUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/benefitexclusions/add][%d] addDependentBenefitExclusionsUsingPOSTUnauthorized", 401)
}

func (o *AddDependentBenefitExclusionsUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/benefitexclusions/add][%d] addDependentBenefitExclusionsUsingPOSTUnauthorized", 401)
}

func (o *AddDependentBenefitExclusionsUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddDependentBenefitExclusionsUsingPOSTForbidden creates a AddDependentBenefitExclusionsUsingPOSTForbidden with default headers values
func NewAddDependentBenefitExclusionsUsingPOSTForbidden() *AddDependentBenefitExclusionsUsingPOSTForbidden {
	return &AddDependentBenefitExclusionsUsingPOSTForbidden{}
}

/*
AddDependentBenefitExclusionsUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddDependentBenefitExclusionsUsingPOSTForbidden struct {
}

// IsSuccess returns true when this add dependent benefit exclusions using p o s t forbidden response has a 2xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add dependent benefit exclusions using p o s t forbidden response has a 3xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add dependent benefit exclusions using p o s t forbidden response has a 4xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add dependent benefit exclusions using p o s t forbidden response has a 5xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add dependent benefit exclusions using p o s t forbidden response a status code equal to that given
func (o *AddDependentBenefitExclusionsUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add dependent benefit exclusions using p o s t forbidden response
func (o *AddDependentBenefitExclusionsUsingPOSTForbidden) Code() int {
	return 403
}

func (o *AddDependentBenefitExclusionsUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/benefitexclusions/add][%d] addDependentBenefitExclusionsUsingPOSTForbidden", 403)
}

func (o *AddDependentBenefitExclusionsUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/benefitexclusions/add][%d] addDependentBenefitExclusionsUsingPOSTForbidden", 403)
}

func (o *AddDependentBenefitExclusionsUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddDependentBenefitExclusionsUsingPOSTNotFound creates a AddDependentBenefitExclusionsUsingPOSTNotFound with default headers values
func NewAddDependentBenefitExclusionsUsingPOSTNotFound() *AddDependentBenefitExclusionsUsingPOSTNotFound {
	return &AddDependentBenefitExclusionsUsingPOSTNotFound{}
}

/*
AddDependentBenefitExclusionsUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddDependentBenefitExclusionsUsingPOSTNotFound struct {
}

// IsSuccess returns true when this add dependent benefit exclusions using p o s t not found response has a 2xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add dependent benefit exclusions using p o s t not found response has a 3xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add dependent benefit exclusions using p o s t not found response has a 4xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add dependent benefit exclusions using p o s t not found response has a 5xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add dependent benefit exclusions using p o s t not found response a status code equal to that given
func (o *AddDependentBenefitExclusionsUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add dependent benefit exclusions using p o s t not found response
func (o *AddDependentBenefitExclusionsUsingPOSTNotFound) Code() int {
	return 404
}

func (o *AddDependentBenefitExclusionsUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/benefitexclusions/add][%d] addDependentBenefitExclusionsUsingPOSTNotFound", 404)
}

func (o *AddDependentBenefitExclusionsUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/benefitexclusions/add][%d] addDependentBenefitExclusionsUsingPOSTNotFound", 404)
}

func (o *AddDependentBenefitExclusionsUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddDependentBenefitExclusionsUsingPOSTInternalServerError creates a AddDependentBenefitExclusionsUsingPOSTInternalServerError with default headers values
func NewAddDependentBenefitExclusionsUsingPOSTInternalServerError() *AddDependentBenefitExclusionsUsingPOSTInternalServerError {
	return &AddDependentBenefitExclusionsUsingPOSTInternalServerError{}
}

/*
AddDependentBenefitExclusionsUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AddDependentBenefitExclusionsUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this add dependent benefit exclusions using p o s t internal server error response has a 2xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add dependent benefit exclusions using p o s t internal server error response has a 3xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add dependent benefit exclusions using p o s t internal server error response has a 4xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add dependent benefit exclusions using p o s t internal server error response has a 5xx status code
func (o *AddDependentBenefitExclusionsUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add dependent benefit exclusions using p o s t internal server error response a status code equal to that given
func (o *AddDependentBenefitExclusionsUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add dependent benefit exclusions using p o s t internal server error response
func (o *AddDependentBenefitExclusionsUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *AddDependentBenefitExclusionsUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/benefitexclusions/add][%d] addDependentBenefitExclusionsUsingPOSTInternalServerError", 500)
}

func (o *AddDependentBenefitExclusionsUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/benefitexclusions/add][%d] addDependentBenefitExclusionsUsingPOSTInternalServerError", 500)
}

func (o *AddDependentBenefitExclusionsUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
