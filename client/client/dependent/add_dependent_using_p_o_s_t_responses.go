// Code generated by go-swagger; DO NOT EDIT.

package dependent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// AddDependentUsingPOSTReader is a Reader for the AddDependentUsingPOST structure.
type AddDependentUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddDependentUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddDependentUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewAddDependentUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddDependentUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddDependentUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddDependentUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddDependentUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddDependentUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/dependent/add] addDependentUsingPOST", response, response.Code())
	}
}

// NewAddDependentUsingPOSTOK creates a AddDependentUsingPOSTOK with default headers values
func NewAddDependentUsingPOSTOK() *AddDependentUsingPOSTOK {
	return &AddDependentUsingPOSTOK{}
}

/*
AddDependentUsingPOSTOK describes a response with status code 200, with default header values.

Success
*/
type AddDependentUsingPOSTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this add dependent using p o s t o k response has a 2xx status code
func (o *AddDependentUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add dependent using p o s t o k response has a 3xx status code
func (o *AddDependentUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add dependent using p o s t o k response has a 4xx status code
func (o *AddDependentUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add dependent using p o s t o k response has a 5xx status code
func (o *AddDependentUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add dependent using p o s t o k response a status code equal to that given
func (o *AddDependentUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add dependent using p o s t o k response
func (o *AddDependentUsingPOSTOK) Code() int {
	return 200
}

func (o *AddDependentUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/add][%d] addDependentUsingPOSTOK %s", 200, payload)
}

func (o *AddDependentUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/add][%d] addDependentUsingPOSTOK %s", 200, payload)
}

func (o *AddDependentUsingPOSTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *AddDependentUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddDependentUsingPOSTCreated creates a AddDependentUsingPOSTCreated with default headers values
func NewAddDependentUsingPOSTCreated() *AddDependentUsingPOSTCreated {
	return &AddDependentUsingPOSTCreated{}
}

/*
AddDependentUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type AddDependentUsingPOSTCreated struct {
}

// IsSuccess returns true when this add dependent using p o s t created response has a 2xx status code
func (o *AddDependentUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add dependent using p o s t created response has a 3xx status code
func (o *AddDependentUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add dependent using p o s t created response has a 4xx status code
func (o *AddDependentUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add dependent using p o s t created response has a 5xx status code
func (o *AddDependentUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add dependent using p o s t created response a status code equal to that given
func (o *AddDependentUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add dependent using p o s t created response
func (o *AddDependentUsingPOSTCreated) Code() int {
	return 201
}

func (o *AddDependentUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/add][%d] addDependentUsingPOSTCreated", 201)
}

func (o *AddDependentUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/add][%d] addDependentUsingPOSTCreated", 201)
}

func (o *AddDependentUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddDependentUsingPOSTBadRequest creates a AddDependentUsingPOSTBadRequest with default headers values
func NewAddDependentUsingPOSTBadRequest() *AddDependentUsingPOSTBadRequest {
	return &AddDependentUsingPOSTBadRequest{}
}

/*
AddDependentUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddDependentUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this add dependent using p o s t bad request response has a 2xx status code
func (o *AddDependentUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add dependent using p o s t bad request response has a 3xx status code
func (o *AddDependentUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add dependent using p o s t bad request response has a 4xx status code
func (o *AddDependentUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add dependent using p o s t bad request response has a 5xx status code
func (o *AddDependentUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add dependent using p o s t bad request response a status code equal to that given
func (o *AddDependentUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add dependent using p o s t bad request response
func (o *AddDependentUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *AddDependentUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/add][%d] addDependentUsingPOSTBadRequest", 400)
}

func (o *AddDependentUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/add][%d] addDependentUsingPOSTBadRequest", 400)
}

func (o *AddDependentUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddDependentUsingPOSTUnauthorized creates a AddDependentUsingPOSTUnauthorized with default headers values
func NewAddDependentUsingPOSTUnauthorized() *AddDependentUsingPOSTUnauthorized {
	return &AddDependentUsingPOSTUnauthorized{}
}

/*
AddDependentUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddDependentUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this add dependent using p o s t unauthorized response has a 2xx status code
func (o *AddDependentUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add dependent using p o s t unauthorized response has a 3xx status code
func (o *AddDependentUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add dependent using p o s t unauthorized response has a 4xx status code
func (o *AddDependentUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add dependent using p o s t unauthorized response has a 5xx status code
func (o *AddDependentUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add dependent using p o s t unauthorized response a status code equal to that given
func (o *AddDependentUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add dependent using p o s t unauthorized response
func (o *AddDependentUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *AddDependentUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/add][%d] addDependentUsingPOSTUnauthorized", 401)
}

func (o *AddDependentUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/add][%d] addDependentUsingPOSTUnauthorized", 401)
}

func (o *AddDependentUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddDependentUsingPOSTForbidden creates a AddDependentUsingPOSTForbidden with default headers values
func NewAddDependentUsingPOSTForbidden() *AddDependentUsingPOSTForbidden {
	return &AddDependentUsingPOSTForbidden{}
}

/*
AddDependentUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddDependentUsingPOSTForbidden struct {
}

// IsSuccess returns true when this add dependent using p o s t forbidden response has a 2xx status code
func (o *AddDependentUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add dependent using p o s t forbidden response has a 3xx status code
func (o *AddDependentUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add dependent using p o s t forbidden response has a 4xx status code
func (o *AddDependentUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add dependent using p o s t forbidden response has a 5xx status code
func (o *AddDependentUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add dependent using p o s t forbidden response a status code equal to that given
func (o *AddDependentUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add dependent using p o s t forbidden response
func (o *AddDependentUsingPOSTForbidden) Code() int {
	return 403
}

func (o *AddDependentUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/add][%d] addDependentUsingPOSTForbidden", 403)
}

func (o *AddDependentUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/add][%d] addDependentUsingPOSTForbidden", 403)
}

func (o *AddDependentUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddDependentUsingPOSTNotFound creates a AddDependentUsingPOSTNotFound with default headers values
func NewAddDependentUsingPOSTNotFound() *AddDependentUsingPOSTNotFound {
	return &AddDependentUsingPOSTNotFound{}
}

/*
AddDependentUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddDependentUsingPOSTNotFound struct {
}

// IsSuccess returns true when this add dependent using p o s t not found response has a 2xx status code
func (o *AddDependentUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add dependent using p o s t not found response has a 3xx status code
func (o *AddDependentUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add dependent using p o s t not found response has a 4xx status code
func (o *AddDependentUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add dependent using p o s t not found response has a 5xx status code
func (o *AddDependentUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add dependent using p o s t not found response a status code equal to that given
func (o *AddDependentUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add dependent using p o s t not found response
func (o *AddDependentUsingPOSTNotFound) Code() int {
	return 404
}

func (o *AddDependentUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/add][%d] addDependentUsingPOSTNotFound", 404)
}

func (o *AddDependentUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/add][%d] addDependentUsingPOSTNotFound", 404)
}

func (o *AddDependentUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddDependentUsingPOSTInternalServerError creates a AddDependentUsingPOSTInternalServerError with default headers values
func NewAddDependentUsingPOSTInternalServerError() *AddDependentUsingPOSTInternalServerError {
	return &AddDependentUsingPOSTInternalServerError{}
}

/*
AddDependentUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AddDependentUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this add dependent using p o s t internal server error response has a 2xx status code
func (o *AddDependentUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add dependent using p o s t internal server error response has a 3xx status code
func (o *AddDependentUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add dependent using p o s t internal server error response has a 4xx status code
func (o *AddDependentUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add dependent using p o s t internal server error response has a 5xx status code
func (o *AddDependentUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add dependent using p o s t internal server error response a status code equal to that given
func (o *AddDependentUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add dependent using p o s t internal server error response
func (o *AddDependentUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *AddDependentUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/add][%d] addDependentUsingPOSTInternalServerError", 500)
}

func (o *AddDependentUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/add][%d] addDependentUsingPOSTInternalServerError", 500)
}

func (o *AddDependentUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
