// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateMemberLastNameUsingPUTReader is a Reader for the UpdateMemberLastNameUsingPUT structure.
type UpdateMemberLastNameUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMemberLastNameUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateMemberLastNameUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateMemberLastNameUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateMemberLastNameUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateMemberLastNameUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateMemberLastNameUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateMemberLastNameUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateMemberLastNameUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/member/update/lastName] updateMemberLastNameUsingPUT", response, response.Code())
	}
}

// NewUpdateMemberLastNameUsingPUTOK creates a UpdateMemberLastNameUsingPUTOK with default headers values
func NewUpdateMemberLastNameUsingPUTOK() *UpdateMemberLastNameUsingPUTOK {
	return &UpdateMemberLastNameUsingPUTOK{}
}

/*
UpdateMemberLastNameUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateMemberLastNameUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update member last name using p u t o k response has a 2xx status code
func (o *UpdateMemberLastNameUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member last name using p u t o k response has a 3xx status code
func (o *UpdateMemberLastNameUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member last name using p u t o k response has a 4xx status code
func (o *UpdateMemberLastNameUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member last name using p u t o k response has a 5xx status code
func (o *UpdateMemberLastNameUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update member last name using p u t o k response a status code equal to that given
func (o *UpdateMemberLastNameUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update member last name using p u t o k response
func (o *UpdateMemberLastNameUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateMemberLastNameUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/lastName][%d] updateMemberLastNameUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberLastNameUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/lastName][%d] updateMemberLastNameUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberLastNameUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateMemberLastNameUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMemberLastNameUsingPUTCreated creates a UpdateMemberLastNameUsingPUTCreated with default headers values
func NewUpdateMemberLastNameUsingPUTCreated() *UpdateMemberLastNameUsingPUTCreated {
	return &UpdateMemberLastNameUsingPUTCreated{}
}

/*
UpdateMemberLastNameUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateMemberLastNameUsingPUTCreated struct {
}

// IsSuccess returns true when this update member last name using p u t created response has a 2xx status code
func (o *UpdateMemberLastNameUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member last name using p u t created response has a 3xx status code
func (o *UpdateMemberLastNameUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member last name using p u t created response has a 4xx status code
func (o *UpdateMemberLastNameUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member last name using p u t created response has a 5xx status code
func (o *UpdateMemberLastNameUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update member last name using p u t created response a status code equal to that given
func (o *UpdateMemberLastNameUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update member last name using p u t created response
func (o *UpdateMemberLastNameUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateMemberLastNameUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/lastName][%d] updateMemberLastNameUsingPUTCreated", 201)
}

func (o *UpdateMemberLastNameUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/lastName][%d] updateMemberLastNameUsingPUTCreated", 201)
}

func (o *UpdateMemberLastNameUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberLastNameUsingPUTBadRequest creates a UpdateMemberLastNameUsingPUTBadRequest with default headers values
func NewUpdateMemberLastNameUsingPUTBadRequest() *UpdateMemberLastNameUsingPUTBadRequest {
	return &UpdateMemberLastNameUsingPUTBadRequest{}
}

/*
UpdateMemberLastNameUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateMemberLastNameUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update member last name using p u t bad request response has a 2xx status code
func (o *UpdateMemberLastNameUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member last name using p u t bad request response has a 3xx status code
func (o *UpdateMemberLastNameUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member last name using p u t bad request response has a 4xx status code
func (o *UpdateMemberLastNameUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member last name using p u t bad request response has a 5xx status code
func (o *UpdateMemberLastNameUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update member last name using p u t bad request response a status code equal to that given
func (o *UpdateMemberLastNameUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update member last name using p u t bad request response
func (o *UpdateMemberLastNameUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateMemberLastNameUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/lastName][%d] updateMemberLastNameUsingPUTBadRequest", 400)
}

func (o *UpdateMemberLastNameUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/lastName][%d] updateMemberLastNameUsingPUTBadRequest", 400)
}

func (o *UpdateMemberLastNameUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberLastNameUsingPUTUnauthorized creates a UpdateMemberLastNameUsingPUTUnauthorized with default headers values
func NewUpdateMemberLastNameUsingPUTUnauthorized() *UpdateMemberLastNameUsingPUTUnauthorized {
	return &UpdateMemberLastNameUsingPUTUnauthorized{}
}

/*
UpdateMemberLastNameUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateMemberLastNameUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update member last name using p u t unauthorized response has a 2xx status code
func (o *UpdateMemberLastNameUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member last name using p u t unauthorized response has a 3xx status code
func (o *UpdateMemberLastNameUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member last name using p u t unauthorized response has a 4xx status code
func (o *UpdateMemberLastNameUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member last name using p u t unauthorized response has a 5xx status code
func (o *UpdateMemberLastNameUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update member last name using p u t unauthorized response a status code equal to that given
func (o *UpdateMemberLastNameUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update member last name using p u t unauthorized response
func (o *UpdateMemberLastNameUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateMemberLastNameUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/lastName][%d] updateMemberLastNameUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberLastNameUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/lastName][%d] updateMemberLastNameUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberLastNameUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberLastNameUsingPUTForbidden creates a UpdateMemberLastNameUsingPUTForbidden with default headers values
func NewUpdateMemberLastNameUsingPUTForbidden() *UpdateMemberLastNameUsingPUTForbidden {
	return &UpdateMemberLastNameUsingPUTForbidden{}
}

/*
UpdateMemberLastNameUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateMemberLastNameUsingPUTForbidden struct {
}

// IsSuccess returns true when this update member last name using p u t forbidden response has a 2xx status code
func (o *UpdateMemberLastNameUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member last name using p u t forbidden response has a 3xx status code
func (o *UpdateMemberLastNameUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member last name using p u t forbidden response has a 4xx status code
func (o *UpdateMemberLastNameUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member last name using p u t forbidden response has a 5xx status code
func (o *UpdateMemberLastNameUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update member last name using p u t forbidden response a status code equal to that given
func (o *UpdateMemberLastNameUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update member last name using p u t forbidden response
func (o *UpdateMemberLastNameUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateMemberLastNameUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/lastName][%d] updateMemberLastNameUsingPUTForbidden", 403)
}

func (o *UpdateMemberLastNameUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/lastName][%d] updateMemberLastNameUsingPUTForbidden", 403)
}

func (o *UpdateMemberLastNameUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberLastNameUsingPUTNotFound creates a UpdateMemberLastNameUsingPUTNotFound with default headers values
func NewUpdateMemberLastNameUsingPUTNotFound() *UpdateMemberLastNameUsingPUTNotFound {
	return &UpdateMemberLastNameUsingPUTNotFound{}
}

/*
UpdateMemberLastNameUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateMemberLastNameUsingPUTNotFound struct {
}

// IsSuccess returns true when this update member last name using p u t not found response has a 2xx status code
func (o *UpdateMemberLastNameUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member last name using p u t not found response has a 3xx status code
func (o *UpdateMemberLastNameUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member last name using p u t not found response has a 4xx status code
func (o *UpdateMemberLastNameUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member last name using p u t not found response has a 5xx status code
func (o *UpdateMemberLastNameUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update member last name using p u t not found response a status code equal to that given
func (o *UpdateMemberLastNameUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update member last name using p u t not found response
func (o *UpdateMemberLastNameUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateMemberLastNameUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/lastName][%d] updateMemberLastNameUsingPUTNotFound", 404)
}

func (o *UpdateMemberLastNameUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/lastName][%d] updateMemberLastNameUsingPUTNotFound", 404)
}

func (o *UpdateMemberLastNameUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberLastNameUsingPUTInternalServerError creates a UpdateMemberLastNameUsingPUTInternalServerError with default headers values
func NewUpdateMemberLastNameUsingPUTInternalServerError() *UpdateMemberLastNameUsingPUTInternalServerError {
	return &UpdateMemberLastNameUsingPUTInternalServerError{}
}

/*
UpdateMemberLastNameUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateMemberLastNameUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update member last name using p u t internal server error response has a 2xx status code
func (o *UpdateMemberLastNameUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member last name using p u t internal server error response has a 3xx status code
func (o *UpdateMemberLastNameUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member last name using p u t internal server error response has a 4xx status code
func (o *UpdateMemberLastNameUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member last name using p u t internal server error response has a 5xx status code
func (o *UpdateMemberLastNameUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update member last name using p u t internal server error response a status code equal to that given
func (o *UpdateMemberLastNameUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update member last name using p u t internal server error response
func (o *UpdateMemberLastNameUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateMemberLastNameUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/lastName][%d] updateMemberLastNameUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberLastNameUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/lastName][%d] updateMemberLastNameUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberLastNameUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
