// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateMemberGroupUsingPUTReader is a Reader for the UpdateMemberGroupUsingPUT structure.
type UpdateMemberGroupUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMemberGroupUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateMemberGroupUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateMemberGroupUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateMemberGroupUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateMemberGroupUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateMemberGroupUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateMemberGroupUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateMemberGroupUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/member/update/memberGroup] updateMemberGroupUsingPUT", response, response.Code())
	}
}

// NewUpdateMemberGroupUsingPUTOK creates a UpdateMemberGroupUsingPUTOK with default headers values
func NewUpdateMemberGroupUsingPUTOK() *UpdateMemberGroupUsingPUTOK {
	return &UpdateMemberGroupUsingPUTOK{}
}

/*
UpdateMemberGroupUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateMemberGroupUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update member group using p u t o k response has a 2xx status code
func (o *UpdateMemberGroupUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member group using p u t o k response has a 3xx status code
func (o *UpdateMemberGroupUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group using p u t o k response has a 4xx status code
func (o *UpdateMemberGroupUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member group using p u t o k response has a 5xx status code
func (o *UpdateMemberGroupUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group using p u t o k response a status code equal to that given
func (o *UpdateMemberGroupUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update member group using p u t o k response
func (o *UpdateMemberGroupUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateMemberGroupUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/memberGroup][%d] updateMemberGroupUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberGroupUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/memberGroup][%d] updateMemberGroupUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberGroupUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateMemberGroupUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMemberGroupUsingPUTCreated creates a UpdateMemberGroupUsingPUTCreated with default headers values
func NewUpdateMemberGroupUsingPUTCreated() *UpdateMemberGroupUsingPUTCreated {
	return &UpdateMemberGroupUsingPUTCreated{}
}

/*
UpdateMemberGroupUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateMemberGroupUsingPUTCreated struct {
}

// IsSuccess returns true when this update member group using p u t created response has a 2xx status code
func (o *UpdateMemberGroupUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member group using p u t created response has a 3xx status code
func (o *UpdateMemberGroupUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group using p u t created response has a 4xx status code
func (o *UpdateMemberGroupUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member group using p u t created response has a 5xx status code
func (o *UpdateMemberGroupUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group using p u t created response a status code equal to that given
func (o *UpdateMemberGroupUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update member group using p u t created response
func (o *UpdateMemberGroupUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateMemberGroupUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/memberGroup][%d] updateMemberGroupUsingPUTCreated", 201)
}

func (o *UpdateMemberGroupUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/memberGroup][%d] updateMemberGroupUsingPUTCreated", 201)
}

func (o *UpdateMemberGroupUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupUsingPUTBadRequest creates a UpdateMemberGroupUsingPUTBadRequest with default headers values
func NewUpdateMemberGroupUsingPUTBadRequest() *UpdateMemberGroupUsingPUTBadRequest {
	return &UpdateMemberGroupUsingPUTBadRequest{}
}

/*
UpdateMemberGroupUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateMemberGroupUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update member group using p u t bad request response has a 2xx status code
func (o *UpdateMemberGroupUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group using p u t bad request response has a 3xx status code
func (o *UpdateMemberGroupUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group using p u t bad request response has a 4xx status code
func (o *UpdateMemberGroupUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member group using p u t bad request response has a 5xx status code
func (o *UpdateMemberGroupUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group using p u t bad request response a status code equal to that given
func (o *UpdateMemberGroupUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update member group using p u t bad request response
func (o *UpdateMemberGroupUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateMemberGroupUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/memberGroup][%d] updateMemberGroupUsingPUTBadRequest", 400)
}

func (o *UpdateMemberGroupUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/memberGroup][%d] updateMemberGroupUsingPUTBadRequest", 400)
}

func (o *UpdateMemberGroupUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupUsingPUTUnauthorized creates a UpdateMemberGroupUsingPUTUnauthorized with default headers values
func NewUpdateMemberGroupUsingPUTUnauthorized() *UpdateMemberGroupUsingPUTUnauthorized {
	return &UpdateMemberGroupUsingPUTUnauthorized{}
}

/*
UpdateMemberGroupUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateMemberGroupUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update member group using p u t unauthorized response has a 2xx status code
func (o *UpdateMemberGroupUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group using p u t unauthorized response has a 3xx status code
func (o *UpdateMemberGroupUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group using p u t unauthorized response has a 4xx status code
func (o *UpdateMemberGroupUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member group using p u t unauthorized response has a 5xx status code
func (o *UpdateMemberGroupUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group using p u t unauthorized response a status code equal to that given
func (o *UpdateMemberGroupUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update member group using p u t unauthorized response
func (o *UpdateMemberGroupUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateMemberGroupUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/memberGroup][%d] updateMemberGroupUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberGroupUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/memberGroup][%d] updateMemberGroupUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberGroupUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupUsingPUTForbidden creates a UpdateMemberGroupUsingPUTForbidden with default headers values
func NewUpdateMemberGroupUsingPUTForbidden() *UpdateMemberGroupUsingPUTForbidden {
	return &UpdateMemberGroupUsingPUTForbidden{}
}

/*
UpdateMemberGroupUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateMemberGroupUsingPUTForbidden struct {
}

// IsSuccess returns true when this update member group using p u t forbidden response has a 2xx status code
func (o *UpdateMemberGroupUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group using p u t forbidden response has a 3xx status code
func (o *UpdateMemberGroupUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group using p u t forbidden response has a 4xx status code
func (o *UpdateMemberGroupUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member group using p u t forbidden response has a 5xx status code
func (o *UpdateMemberGroupUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group using p u t forbidden response a status code equal to that given
func (o *UpdateMemberGroupUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update member group using p u t forbidden response
func (o *UpdateMemberGroupUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateMemberGroupUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/memberGroup][%d] updateMemberGroupUsingPUTForbidden", 403)
}

func (o *UpdateMemberGroupUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/memberGroup][%d] updateMemberGroupUsingPUTForbidden", 403)
}

func (o *UpdateMemberGroupUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupUsingPUTNotFound creates a UpdateMemberGroupUsingPUTNotFound with default headers values
func NewUpdateMemberGroupUsingPUTNotFound() *UpdateMemberGroupUsingPUTNotFound {
	return &UpdateMemberGroupUsingPUTNotFound{}
}

/*
UpdateMemberGroupUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateMemberGroupUsingPUTNotFound struct {
}

// IsSuccess returns true when this update member group using p u t not found response has a 2xx status code
func (o *UpdateMemberGroupUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group using p u t not found response has a 3xx status code
func (o *UpdateMemberGroupUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group using p u t not found response has a 4xx status code
func (o *UpdateMemberGroupUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member group using p u t not found response has a 5xx status code
func (o *UpdateMemberGroupUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group using p u t not found response a status code equal to that given
func (o *UpdateMemberGroupUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update member group using p u t not found response
func (o *UpdateMemberGroupUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateMemberGroupUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/memberGroup][%d] updateMemberGroupUsingPUTNotFound", 404)
}

func (o *UpdateMemberGroupUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/memberGroup][%d] updateMemberGroupUsingPUTNotFound", 404)
}

func (o *UpdateMemberGroupUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupUsingPUTInternalServerError creates a UpdateMemberGroupUsingPUTInternalServerError with default headers values
func NewUpdateMemberGroupUsingPUTInternalServerError() *UpdateMemberGroupUsingPUTInternalServerError {
	return &UpdateMemberGroupUsingPUTInternalServerError{}
}

/*
UpdateMemberGroupUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateMemberGroupUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update member group using p u t internal server error response has a 2xx status code
func (o *UpdateMemberGroupUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group using p u t internal server error response has a 3xx status code
func (o *UpdateMemberGroupUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group using p u t internal server error response has a 4xx status code
func (o *UpdateMemberGroupUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member group using p u t internal server error response has a 5xx status code
func (o *UpdateMemberGroupUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update member group using p u t internal server error response a status code equal to that given
func (o *UpdateMemberGroupUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update member group using p u t internal server error response
func (o *UpdateMemberGroupUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateMemberGroupUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/memberGroup][%d] updateMemberGroupUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberGroupUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/memberGroup][%d] updateMemberGroupUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberGroupUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
