// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetBillsListUsingGETReader is a Reader for the GetBillsListUsingGET structure.
type GetBillsListUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBillsListUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBillsListUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBillsListUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBillsListUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBillsListUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBillsListUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBillsListUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/policy/billsList] getBillsListUsingGET", response, response.Code())
	}
}

// NewGetBillsListUsingGETOK creates a GetBillsListUsingGETOK with default headers values
func NewGetBillsListUsingGETOK() *GetBillsListUsingGETOK {
	return &GetBillsListUsingGETOK{}
}

/*
GetBillsListUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetBillsListUsingGETOK struct {
	Payload *models.ResponseWrapperListBillDTO
}

// IsSuccess returns true when this get bills list using g e t o k response has a 2xx status code
func (o *GetBillsListUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get bills list using g e t o k response has a 3xx status code
func (o *GetBillsListUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bills list using g e t o k response has a 4xx status code
func (o *GetBillsListUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bills list using g e t o k response has a 5xx status code
func (o *GetBillsListUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get bills list using g e t o k response a status code equal to that given
func (o *GetBillsListUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get bills list using g e t o k response
func (o *GetBillsListUsingGETOK) Code() int {
	return 200
}

func (o *GetBillsListUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billsList][%d] getBillsListUsingGETOK %s", 200, payload)
}

func (o *GetBillsListUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billsList][%d] getBillsListUsingGETOK %s", 200, payload)
}

func (o *GetBillsListUsingGETOK) GetPayload() *models.ResponseWrapperListBillDTO {
	return o.Payload
}

func (o *GetBillsListUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperListBillDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBillsListUsingGETBadRequest creates a GetBillsListUsingGETBadRequest with default headers values
func NewGetBillsListUsingGETBadRequest() *GetBillsListUsingGETBadRequest {
	return &GetBillsListUsingGETBadRequest{}
}

/*
GetBillsListUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetBillsListUsingGETBadRequest struct {
}

// IsSuccess returns true when this get bills list using g e t bad request response has a 2xx status code
func (o *GetBillsListUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bills list using g e t bad request response has a 3xx status code
func (o *GetBillsListUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bills list using g e t bad request response has a 4xx status code
func (o *GetBillsListUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bills list using g e t bad request response has a 5xx status code
func (o *GetBillsListUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get bills list using g e t bad request response a status code equal to that given
func (o *GetBillsListUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get bills list using g e t bad request response
func (o *GetBillsListUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetBillsListUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billsList][%d] getBillsListUsingGETBadRequest", 400)
}

func (o *GetBillsListUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billsList][%d] getBillsListUsingGETBadRequest", 400)
}

func (o *GetBillsListUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBillsListUsingGETUnauthorized creates a GetBillsListUsingGETUnauthorized with default headers values
func NewGetBillsListUsingGETUnauthorized() *GetBillsListUsingGETUnauthorized {
	return &GetBillsListUsingGETUnauthorized{}
}

/*
GetBillsListUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetBillsListUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get bills list using g e t unauthorized response has a 2xx status code
func (o *GetBillsListUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bills list using g e t unauthorized response has a 3xx status code
func (o *GetBillsListUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bills list using g e t unauthorized response has a 4xx status code
func (o *GetBillsListUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bills list using g e t unauthorized response has a 5xx status code
func (o *GetBillsListUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get bills list using g e t unauthorized response a status code equal to that given
func (o *GetBillsListUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get bills list using g e t unauthorized response
func (o *GetBillsListUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetBillsListUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billsList][%d] getBillsListUsingGETUnauthorized", 401)
}

func (o *GetBillsListUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billsList][%d] getBillsListUsingGETUnauthorized", 401)
}

func (o *GetBillsListUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBillsListUsingGETForbidden creates a GetBillsListUsingGETForbidden with default headers values
func NewGetBillsListUsingGETForbidden() *GetBillsListUsingGETForbidden {
	return &GetBillsListUsingGETForbidden{}
}

/*
GetBillsListUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBillsListUsingGETForbidden struct {
}

// IsSuccess returns true when this get bills list using g e t forbidden response has a 2xx status code
func (o *GetBillsListUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bills list using g e t forbidden response has a 3xx status code
func (o *GetBillsListUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bills list using g e t forbidden response has a 4xx status code
func (o *GetBillsListUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bills list using g e t forbidden response has a 5xx status code
func (o *GetBillsListUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get bills list using g e t forbidden response a status code equal to that given
func (o *GetBillsListUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get bills list using g e t forbidden response
func (o *GetBillsListUsingGETForbidden) Code() int {
	return 403
}

func (o *GetBillsListUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billsList][%d] getBillsListUsingGETForbidden", 403)
}

func (o *GetBillsListUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billsList][%d] getBillsListUsingGETForbidden", 403)
}

func (o *GetBillsListUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBillsListUsingGETNotFound creates a GetBillsListUsingGETNotFound with default headers values
func NewGetBillsListUsingGETNotFound() *GetBillsListUsingGETNotFound {
	return &GetBillsListUsingGETNotFound{}
}

/*
GetBillsListUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetBillsListUsingGETNotFound struct {
}

// IsSuccess returns true when this get bills list using g e t not found response has a 2xx status code
func (o *GetBillsListUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bills list using g e t not found response has a 3xx status code
func (o *GetBillsListUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bills list using g e t not found response has a 4xx status code
func (o *GetBillsListUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bills list using g e t not found response has a 5xx status code
func (o *GetBillsListUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get bills list using g e t not found response a status code equal to that given
func (o *GetBillsListUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get bills list using g e t not found response
func (o *GetBillsListUsingGETNotFound) Code() int {
	return 404
}

func (o *GetBillsListUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billsList][%d] getBillsListUsingGETNotFound", 404)
}

func (o *GetBillsListUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billsList][%d] getBillsListUsingGETNotFound", 404)
}

func (o *GetBillsListUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBillsListUsingGETInternalServerError creates a GetBillsListUsingGETInternalServerError with default headers values
func NewGetBillsListUsingGETInternalServerError() *GetBillsListUsingGETInternalServerError {
	return &GetBillsListUsingGETInternalServerError{}
}

/*
GetBillsListUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetBillsListUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get bills list using g e t internal server error response has a 2xx status code
func (o *GetBillsListUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bills list using g e t internal server error response has a 3xx status code
func (o *GetBillsListUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bills list using g e t internal server error response has a 4xx status code
func (o *GetBillsListUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bills list using g e t internal server error response has a 5xx status code
func (o *GetBillsListUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get bills list using g e t internal server error response a status code equal to that given
func (o *GetBillsListUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get bills list using g e t internal server error response
func (o *GetBillsListUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetBillsListUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billsList][%d] getBillsListUsingGETInternalServerError", 500)
}

func (o *GetBillsListUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/billsList][%d] getBillsListUsingGETInternalServerError", 500)
}

func (o *GetBillsListUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
