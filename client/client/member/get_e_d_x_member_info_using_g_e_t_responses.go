// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetEDXMemberInfoUsingGETReader is a Reader for the GetEDXMemberInfoUsingGET structure.
type GetEDXMemberInfoUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEDXMemberInfoUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEDXMemberInfoUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetEDXMemberInfoUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetEDXMemberInfoUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEDXMemberInfoUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEDXMemberInfoUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEDXMemberInfoUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/member/edxMemberInfo] getEDXMemberInfoUsingGET", response, response.Code())
	}
}

// NewGetEDXMemberInfoUsingGETOK creates a GetEDXMemberInfoUsingGETOK with default headers values
func NewGetEDXMemberInfoUsingGETOK() *GetEDXMemberInfoUsingGETOK {
	return &GetEDXMemberInfoUsingGETOK{}
}

/*
GetEDXMemberInfoUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetEDXMemberInfoUsingGETOK struct {
	Payload *models.ResponseWrapperMemberDTO
}

// IsSuccess returns true when this get e d x member info using g e t o k response has a 2xx status code
func (o *GetEDXMemberInfoUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get e d x member info using g e t o k response has a 3xx status code
func (o *GetEDXMemberInfoUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x member info using g e t o k response has a 4xx status code
func (o *GetEDXMemberInfoUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get e d x member info using g e t o k response has a 5xx status code
func (o *GetEDXMemberInfoUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x member info using g e t o k response a status code equal to that given
func (o *GetEDXMemberInfoUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get e d x member info using g e t o k response
func (o *GetEDXMemberInfoUsingGETOK) Code() int {
	return 200
}

func (o *GetEDXMemberInfoUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberInfo][%d] getEDXMemberInfoUsingGETOK %s", 200, payload)
}

func (o *GetEDXMemberInfoUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberInfo][%d] getEDXMemberInfoUsingGETOK %s", 200, payload)
}

func (o *GetEDXMemberInfoUsingGETOK) GetPayload() *models.ResponseWrapperMemberDTO {
	return o.Payload
}

func (o *GetEDXMemberInfoUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperMemberDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEDXMemberInfoUsingGETBadRequest creates a GetEDXMemberInfoUsingGETBadRequest with default headers values
func NewGetEDXMemberInfoUsingGETBadRequest() *GetEDXMemberInfoUsingGETBadRequest {
	return &GetEDXMemberInfoUsingGETBadRequest{}
}

/*
GetEDXMemberInfoUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetEDXMemberInfoUsingGETBadRequest struct {
}

// IsSuccess returns true when this get e d x member info using g e t bad request response has a 2xx status code
func (o *GetEDXMemberInfoUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x member info using g e t bad request response has a 3xx status code
func (o *GetEDXMemberInfoUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x member info using g e t bad request response has a 4xx status code
func (o *GetEDXMemberInfoUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get e d x member info using g e t bad request response has a 5xx status code
func (o *GetEDXMemberInfoUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x member info using g e t bad request response a status code equal to that given
func (o *GetEDXMemberInfoUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get e d x member info using g e t bad request response
func (o *GetEDXMemberInfoUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetEDXMemberInfoUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberInfo][%d] getEDXMemberInfoUsingGETBadRequest", 400)
}

func (o *GetEDXMemberInfoUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberInfo][%d] getEDXMemberInfoUsingGETBadRequest", 400)
}

func (o *GetEDXMemberInfoUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEDXMemberInfoUsingGETUnauthorized creates a GetEDXMemberInfoUsingGETUnauthorized with default headers values
func NewGetEDXMemberInfoUsingGETUnauthorized() *GetEDXMemberInfoUsingGETUnauthorized {
	return &GetEDXMemberInfoUsingGETUnauthorized{}
}

/*
GetEDXMemberInfoUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetEDXMemberInfoUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get e d x member info using g e t unauthorized response has a 2xx status code
func (o *GetEDXMemberInfoUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x member info using g e t unauthorized response has a 3xx status code
func (o *GetEDXMemberInfoUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x member info using g e t unauthorized response has a 4xx status code
func (o *GetEDXMemberInfoUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get e d x member info using g e t unauthorized response has a 5xx status code
func (o *GetEDXMemberInfoUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x member info using g e t unauthorized response a status code equal to that given
func (o *GetEDXMemberInfoUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get e d x member info using g e t unauthorized response
func (o *GetEDXMemberInfoUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetEDXMemberInfoUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberInfo][%d] getEDXMemberInfoUsingGETUnauthorized", 401)
}

func (o *GetEDXMemberInfoUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberInfo][%d] getEDXMemberInfoUsingGETUnauthorized", 401)
}

func (o *GetEDXMemberInfoUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEDXMemberInfoUsingGETForbidden creates a GetEDXMemberInfoUsingGETForbidden with default headers values
func NewGetEDXMemberInfoUsingGETForbidden() *GetEDXMemberInfoUsingGETForbidden {
	return &GetEDXMemberInfoUsingGETForbidden{}
}

/*
GetEDXMemberInfoUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetEDXMemberInfoUsingGETForbidden struct {
}

// IsSuccess returns true when this get e d x member info using g e t forbidden response has a 2xx status code
func (o *GetEDXMemberInfoUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x member info using g e t forbidden response has a 3xx status code
func (o *GetEDXMemberInfoUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x member info using g e t forbidden response has a 4xx status code
func (o *GetEDXMemberInfoUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get e d x member info using g e t forbidden response has a 5xx status code
func (o *GetEDXMemberInfoUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x member info using g e t forbidden response a status code equal to that given
func (o *GetEDXMemberInfoUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get e d x member info using g e t forbidden response
func (o *GetEDXMemberInfoUsingGETForbidden) Code() int {
	return 403
}

func (o *GetEDXMemberInfoUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberInfo][%d] getEDXMemberInfoUsingGETForbidden", 403)
}

func (o *GetEDXMemberInfoUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberInfo][%d] getEDXMemberInfoUsingGETForbidden", 403)
}

func (o *GetEDXMemberInfoUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEDXMemberInfoUsingGETNotFound creates a GetEDXMemberInfoUsingGETNotFound with default headers values
func NewGetEDXMemberInfoUsingGETNotFound() *GetEDXMemberInfoUsingGETNotFound {
	return &GetEDXMemberInfoUsingGETNotFound{}
}

/*
GetEDXMemberInfoUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetEDXMemberInfoUsingGETNotFound struct {
}

// IsSuccess returns true when this get e d x member info using g e t not found response has a 2xx status code
func (o *GetEDXMemberInfoUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x member info using g e t not found response has a 3xx status code
func (o *GetEDXMemberInfoUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x member info using g e t not found response has a 4xx status code
func (o *GetEDXMemberInfoUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get e d x member info using g e t not found response has a 5xx status code
func (o *GetEDXMemberInfoUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x member info using g e t not found response a status code equal to that given
func (o *GetEDXMemberInfoUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get e d x member info using g e t not found response
func (o *GetEDXMemberInfoUsingGETNotFound) Code() int {
	return 404
}

func (o *GetEDXMemberInfoUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberInfo][%d] getEDXMemberInfoUsingGETNotFound", 404)
}

func (o *GetEDXMemberInfoUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberInfo][%d] getEDXMemberInfoUsingGETNotFound", 404)
}

func (o *GetEDXMemberInfoUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEDXMemberInfoUsingGETInternalServerError creates a GetEDXMemberInfoUsingGETInternalServerError with default headers values
func NewGetEDXMemberInfoUsingGETInternalServerError() *GetEDXMemberInfoUsingGETInternalServerError {
	return &GetEDXMemberInfoUsingGETInternalServerError{}
}

/*
GetEDXMemberInfoUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetEDXMemberInfoUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get e d x member info using g e t internal server error response has a 2xx status code
func (o *GetEDXMemberInfoUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x member info using g e t internal server error response has a 3xx status code
func (o *GetEDXMemberInfoUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x member info using g e t internal server error response has a 4xx status code
func (o *GetEDXMemberInfoUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get e d x member info using g e t internal server error response has a 5xx status code
func (o *GetEDXMemberInfoUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get e d x member info using g e t internal server error response a status code equal to that given
func (o *GetEDXMemberInfoUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get e d x member info using g e t internal server error response
func (o *GetEDXMemberInfoUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetEDXMemberInfoUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberInfo][%d] getEDXMemberInfoUsingGETInternalServerError", 500)
}

func (o *GetEDXMemberInfoUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberInfo][%d] getEDXMemberInfoUsingGETInternalServerError", 500)
}

func (o *GetEDXMemberInfoUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
