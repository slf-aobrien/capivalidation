// Code generated by go-swagger; DO NOT EDIT.

package dependent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateLastNameUsingPUTReader is a Reader for the UpdateLastNameUsingPUT structure.
type UpdateLastNameUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateLastNameUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateLastNameUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateLastNameUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateLastNameUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateLastNameUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateLastNameUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateLastNameUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateLastNameUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/dependent/update/lastName] updateLastNameUsingPUT", response, response.Code())
	}
}

// NewUpdateLastNameUsingPUTOK creates a UpdateLastNameUsingPUTOK with default headers values
func NewUpdateLastNameUsingPUTOK() *UpdateLastNameUsingPUTOK {
	return &UpdateLastNameUsingPUTOK{}
}

/*
UpdateLastNameUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateLastNameUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update last name using p u t o k response has a 2xx status code
func (o *UpdateLastNameUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update last name using p u t o k response has a 3xx status code
func (o *UpdateLastNameUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update last name using p u t o k response has a 4xx status code
func (o *UpdateLastNameUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update last name using p u t o k response has a 5xx status code
func (o *UpdateLastNameUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update last name using p u t o k response a status code equal to that given
func (o *UpdateLastNameUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update last name using p u t o k response
func (o *UpdateLastNameUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateLastNameUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/lastName][%d] updateLastNameUsingPUTOK %s", 200, payload)
}

func (o *UpdateLastNameUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/lastName][%d] updateLastNameUsingPUTOK %s", 200, payload)
}

func (o *UpdateLastNameUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateLastNameUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLastNameUsingPUTCreated creates a UpdateLastNameUsingPUTCreated with default headers values
func NewUpdateLastNameUsingPUTCreated() *UpdateLastNameUsingPUTCreated {
	return &UpdateLastNameUsingPUTCreated{}
}

/*
UpdateLastNameUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateLastNameUsingPUTCreated struct {
}

// IsSuccess returns true when this update last name using p u t created response has a 2xx status code
func (o *UpdateLastNameUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update last name using p u t created response has a 3xx status code
func (o *UpdateLastNameUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update last name using p u t created response has a 4xx status code
func (o *UpdateLastNameUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update last name using p u t created response has a 5xx status code
func (o *UpdateLastNameUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update last name using p u t created response a status code equal to that given
func (o *UpdateLastNameUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update last name using p u t created response
func (o *UpdateLastNameUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateLastNameUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/lastName][%d] updateLastNameUsingPUTCreated", 201)
}

func (o *UpdateLastNameUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/lastName][%d] updateLastNameUsingPUTCreated", 201)
}

func (o *UpdateLastNameUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLastNameUsingPUTBadRequest creates a UpdateLastNameUsingPUTBadRequest with default headers values
func NewUpdateLastNameUsingPUTBadRequest() *UpdateLastNameUsingPUTBadRequest {
	return &UpdateLastNameUsingPUTBadRequest{}
}

/*
UpdateLastNameUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateLastNameUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update last name using p u t bad request response has a 2xx status code
func (o *UpdateLastNameUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update last name using p u t bad request response has a 3xx status code
func (o *UpdateLastNameUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update last name using p u t bad request response has a 4xx status code
func (o *UpdateLastNameUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update last name using p u t bad request response has a 5xx status code
func (o *UpdateLastNameUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update last name using p u t bad request response a status code equal to that given
func (o *UpdateLastNameUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update last name using p u t bad request response
func (o *UpdateLastNameUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateLastNameUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/lastName][%d] updateLastNameUsingPUTBadRequest", 400)
}

func (o *UpdateLastNameUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/lastName][%d] updateLastNameUsingPUTBadRequest", 400)
}

func (o *UpdateLastNameUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLastNameUsingPUTUnauthorized creates a UpdateLastNameUsingPUTUnauthorized with default headers values
func NewUpdateLastNameUsingPUTUnauthorized() *UpdateLastNameUsingPUTUnauthorized {
	return &UpdateLastNameUsingPUTUnauthorized{}
}

/*
UpdateLastNameUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateLastNameUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update last name using p u t unauthorized response has a 2xx status code
func (o *UpdateLastNameUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update last name using p u t unauthorized response has a 3xx status code
func (o *UpdateLastNameUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update last name using p u t unauthorized response has a 4xx status code
func (o *UpdateLastNameUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update last name using p u t unauthorized response has a 5xx status code
func (o *UpdateLastNameUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update last name using p u t unauthorized response a status code equal to that given
func (o *UpdateLastNameUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update last name using p u t unauthorized response
func (o *UpdateLastNameUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateLastNameUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/lastName][%d] updateLastNameUsingPUTUnauthorized", 401)
}

func (o *UpdateLastNameUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/lastName][%d] updateLastNameUsingPUTUnauthorized", 401)
}

func (o *UpdateLastNameUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLastNameUsingPUTForbidden creates a UpdateLastNameUsingPUTForbidden with default headers values
func NewUpdateLastNameUsingPUTForbidden() *UpdateLastNameUsingPUTForbidden {
	return &UpdateLastNameUsingPUTForbidden{}
}

/*
UpdateLastNameUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateLastNameUsingPUTForbidden struct {
}

// IsSuccess returns true when this update last name using p u t forbidden response has a 2xx status code
func (o *UpdateLastNameUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update last name using p u t forbidden response has a 3xx status code
func (o *UpdateLastNameUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update last name using p u t forbidden response has a 4xx status code
func (o *UpdateLastNameUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update last name using p u t forbidden response has a 5xx status code
func (o *UpdateLastNameUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update last name using p u t forbidden response a status code equal to that given
func (o *UpdateLastNameUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update last name using p u t forbidden response
func (o *UpdateLastNameUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateLastNameUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/lastName][%d] updateLastNameUsingPUTForbidden", 403)
}

func (o *UpdateLastNameUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/lastName][%d] updateLastNameUsingPUTForbidden", 403)
}

func (o *UpdateLastNameUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLastNameUsingPUTNotFound creates a UpdateLastNameUsingPUTNotFound with default headers values
func NewUpdateLastNameUsingPUTNotFound() *UpdateLastNameUsingPUTNotFound {
	return &UpdateLastNameUsingPUTNotFound{}
}

/*
UpdateLastNameUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateLastNameUsingPUTNotFound struct {
}

// IsSuccess returns true when this update last name using p u t not found response has a 2xx status code
func (o *UpdateLastNameUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update last name using p u t not found response has a 3xx status code
func (o *UpdateLastNameUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update last name using p u t not found response has a 4xx status code
func (o *UpdateLastNameUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update last name using p u t not found response has a 5xx status code
func (o *UpdateLastNameUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update last name using p u t not found response a status code equal to that given
func (o *UpdateLastNameUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update last name using p u t not found response
func (o *UpdateLastNameUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateLastNameUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/lastName][%d] updateLastNameUsingPUTNotFound", 404)
}

func (o *UpdateLastNameUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/lastName][%d] updateLastNameUsingPUTNotFound", 404)
}

func (o *UpdateLastNameUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLastNameUsingPUTInternalServerError creates a UpdateLastNameUsingPUTInternalServerError with default headers values
func NewUpdateLastNameUsingPUTInternalServerError() *UpdateLastNameUsingPUTInternalServerError {
	return &UpdateLastNameUsingPUTInternalServerError{}
}

/*
UpdateLastNameUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateLastNameUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update last name using p u t internal server error response has a 2xx status code
func (o *UpdateLastNameUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update last name using p u t internal server error response has a 3xx status code
func (o *UpdateLastNameUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update last name using p u t internal server error response has a 4xx status code
func (o *UpdateLastNameUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update last name using p u t internal server error response has a 5xx status code
func (o *UpdateLastNameUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update last name using p u t internal server error response a status code equal to that given
func (o *UpdateLastNameUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update last name using p u t internal server error response
func (o *UpdateLastNameUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateLastNameUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/lastName][%d] updateLastNameUsingPUTInternalServerError", 500)
}

func (o *UpdateLastNameUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/lastName][%d] updateLastNameUsingPUTInternalServerError", 500)
}

func (o *UpdateLastNameUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
