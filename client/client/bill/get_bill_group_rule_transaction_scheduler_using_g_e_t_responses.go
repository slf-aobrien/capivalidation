// Code generated by go-swagger; DO NOT EDIT.

package bill

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetBillGroupRuleTransactionSchedulerUsingGETReader is a Reader for the GetBillGroupRuleTransactionSchedulerUsingGET structure.
type GetBillGroupRuleTransactionSchedulerUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBillGroupRuleTransactionSchedulerUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBillGroupRuleTransactionSchedulerUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBillGroupRuleTransactionSchedulerUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBillGroupRuleTransactionSchedulerUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBillGroupRuleTransactionSchedulerUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBillGroupRuleTransactionSchedulerUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBillGroupRuleTransactionSchedulerUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/bill/billGroupRuleTransactionScheduler] getBillGroupRuleTransactionSchedulerUsingGET", response, response.Code())
	}
}

// NewGetBillGroupRuleTransactionSchedulerUsingGETOK creates a GetBillGroupRuleTransactionSchedulerUsingGETOK with default headers values
func NewGetBillGroupRuleTransactionSchedulerUsingGETOK() *GetBillGroupRuleTransactionSchedulerUsingGETOK {
	return &GetBillGroupRuleTransactionSchedulerUsingGETOK{}
}

/*
GetBillGroupRuleTransactionSchedulerUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetBillGroupRuleTransactionSchedulerUsingGETOK struct {
	Payload *models.ResponseWrapperPolicyDTO
}

// IsSuccess returns true when this get bill group rule transaction scheduler using g e t o k response has a 2xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get bill group rule transaction scheduler using g e t o k response has a 3xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bill group rule transaction scheduler using g e t o k response has a 4xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bill group rule transaction scheduler using g e t o k response has a 5xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get bill group rule transaction scheduler using g e t o k response a status code equal to that given
func (o *GetBillGroupRuleTransactionSchedulerUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get bill group rule transaction scheduler using g e t o k response
func (o *GetBillGroupRuleTransactionSchedulerUsingGETOK) Code() int {
	return 200
}

func (o *GetBillGroupRuleTransactionSchedulerUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/bill/billGroupRuleTransactionScheduler][%d] getBillGroupRuleTransactionSchedulerUsingGETOK %s", 200, payload)
}

func (o *GetBillGroupRuleTransactionSchedulerUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/bill/billGroupRuleTransactionScheduler][%d] getBillGroupRuleTransactionSchedulerUsingGETOK %s", 200, payload)
}

func (o *GetBillGroupRuleTransactionSchedulerUsingGETOK) GetPayload() *models.ResponseWrapperPolicyDTO {
	return o.Payload
}

func (o *GetBillGroupRuleTransactionSchedulerUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperPolicyDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBillGroupRuleTransactionSchedulerUsingGETBadRequest creates a GetBillGroupRuleTransactionSchedulerUsingGETBadRequest with default headers values
func NewGetBillGroupRuleTransactionSchedulerUsingGETBadRequest() *GetBillGroupRuleTransactionSchedulerUsingGETBadRequest {
	return &GetBillGroupRuleTransactionSchedulerUsingGETBadRequest{}
}

/*
GetBillGroupRuleTransactionSchedulerUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetBillGroupRuleTransactionSchedulerUsingGETBadRequest struct {
}

// IsSuccess returns true when this get bill group rule transaction scheduler using g e t bad request response has a 2xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bill group rule transaction scheduler using g e t bad request response has a 3xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bill group rule transaction scheduler using g e t bad request response has a 4xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bill group rule transaction scheduler using g e t bad request response has a 5xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get bill group rule transaction scheduler using g e t bad request response a status code equal to that given
func (o *GetBillGroupRuleTransactionSchedulerUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get bill group rule transaction scheduler using g e t bad request response
func (o *GetBillGroupRuleTransactionSchedulerUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetBillGroupRuleTransactionSchedulerUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/billGroupRuleTransactionScheduler][%d] getBillGroupRuleTransactionSchedulerUsingGETBadRequest", 400)
}

func (o *GetBillGroupRuleTransactionSchedulerUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/billGroupRuleTransactionScheduler][%d] getBillGroupRuleTransactionSchedulerUsingGETBadRequest", 400)
}

func (o *GetBillGroupRuleTransactionSchedulerUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBillGroupRuleTransactionSchedulerUsingGETUnauthorized creates a GetBillGroupRuleTransactionSchedulerUsingGETUnauthorized with default headers values
func NewGetBillGroupRuleTransactionSchedulerUsingGETUnauthorized() *GetBillGroupRuleTransactionSchedulerUsingGETUnauthorized {
	return &GetBillGroupRuleTransactionSchedulerUsingGETUnauthorized{}
}

/*
GetBillGroupRuleTransactionSchedulerUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetBillGroupRuleTransactionSchedulerUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get bill group rule transaction scheduler using g e t unauthorized response has a 2xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bill group rule transaction scheduler using g e t unauthorized response has a 3xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bill group rule transaction scheduler using g e t unauthorized response has a 4xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bill group rule transaction scheduler using g e t unauthorized response has a 5xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get bill group rule transaction scheduler using g e t unauthorized response a status code equal to that given
func (o *GetBillGroupRuleTransactionSchedulerUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get bill group rule transaction scheduler using g e t unauthorized response
func (o *GetBillGroupRuleTransactionSchedulerUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetBillGroupRuleTransactionSchedulerUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/billGroupRuleTransactionScheduler][%d] getBillGroupRuleTransactionSchedulerUsingGETUnauthorized", 401)
}

func (o *GetBillGroupRuleTransactionSchedulerUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/billGroupRuleTransactionScheduler][%d] getBillGroupRuleTransactionSchedulerUsingGETUnauthorized", 401)
}

func (o *GetBillGroupRuleTransactionSchedulerUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBillGroupRuleTransactionSchedulerUsingGETForbidden creates a GetBillGroupRuleTransactionSchedulerUsingGETForbidden with default headers values
func NewGetBillGroupRuleTransactionSchedulerUsingGETForbidden() *GetBillGroupRuleTransactionSchedulerUsingGETForbidden {
	return &GetBillGroupRuleTransactionSchedulerUsingGETForbidden{}
}

/*
GetBillGroupRuleTransactionSchedulerUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBillGroupRuleTransactionSchedulerUsingGETForbidden struct {
}

// IsSuccess returns true when this get bill group rule transaction scheduler using g e t forbidden response has a 2xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bill group rule transaction scheduler using g e t forbidden response has a 3xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bill group rule transaction scheduler using g e t forbidden response has a 4xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bill group rule transaction scheduler using g e t forbidden response has a 5xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get bill group rule transaction scheduler using g e t forbidden response a status code equal to that given
func (o *GetBillGroupRuleTransactionSchedulerUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get bill group rule transaction scheduler using g e t forbidden response
func (o *GetBillGroupRuleTransactionSchedulerUsingGETForbidden) Code() int {
	return 403
}

func (o *GetBillGroupRuleTransactionSchedulerUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/billGroupRuleTransactionScheduler][%d] getBillGroupRuleTransactionSchedulerUsingGETForbidden", 403)
}

func (o *GetBillGroupRuleTransactionSchedulerUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/billGroupRuleTransactionScheduler][%d] getBillGroupRuleTransactionSchedulerUsingGETForbidden", 403)
}

func (o *GetBillGroupRuleTransactionSchedulerUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBillGroupRuleTransactionSchedulerUsingGETNotFound creates a GetBillGroupRuleTransactionSchedulerUsingGETNotFound with default headers values
func NewGetBillGroupRuleTransactionSchedulerUsingGETNotFound() *GetBillGroupRuleTransactionSchedulerUsingGETNotFound {
	return &GetBillGroupRuleTransactionSchedulerUsingGETNotFound{}
}

/*
GetBillGroupRuleTransactionSchedulerUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetBillGroupRuleTransactionSchedulerUsingGETNotFound struct {
}

// IsSuccess returns true when this get bill group rule transaction scheduler using g e t not found response has a 2xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bill group rule transaction scheduler using g e t not found response has a 3xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bill group rule transaction scheduler using g e t not found response has a 4xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bill group rule transaction scheduler using g e t not found response has a 5xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get bill group rule transaction scheduler using g e t not found response a status code equal to that given
func (o *GetBillGroupRuleTransactionSchedulerUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get bill group rule transaction scheduler using g e t not found response
func (o *GetBillGroupRuleTransactionSchedulerUsingGETNotFound) Code() int {
	return 404
}

func (o *GetBillGroupRuleTransactionSchedulerUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/billGroupRuleTransactionScheduler][%d] getBillGroupRuleTransactionSchedulerUsingGETNotFound", 404)
}

func (o *GetBillGroupRuleTransactionSchedulerUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/billGroupRuleTransactionScheduler][%d] getBillGroupRuleTransactionSchedulerUsingGETNotFound", 404)
}

func (o *GetBillGroupRuleTransactionSchedulerUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBillGroupRuleTransactionSchedulerUsingGETInternalServerError creates a GetBillGroupRuleTransactionSchedulerUsingGETInternalServerError with default headers values
func NewGetBillGroupRuleTransactionSchedulerUsingGETInternalServerError() *GetBillGroupRuleTransactionSchedulerUsingGETInternalServerError {
	return &GetBillGroupRuleTransactionSchedulerUsingGETInternalServerError{}
}

/*
GetBillGroupRuleTransactionSchedulerUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetBillGroupRuleTransactionSchedulerUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get bill group rule transaction scheduler using g e t internal server error response has a 2xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bill group rule transaction scheduler using g e t internal server error response has a 3xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bill group rule transaction scheduler using g e t internal server error response has a 4xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bill group rule transaction scheduler using g e t internal server error response has a 5xx status code
func (o *GetBillGroupRuleTransactionSchedulerUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get bill group rule transaction scheduler using g e t internal server error response a status code equal to that given
func (o *GetBillGroupRuleTransactionSchedulerUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get bill group rule transaction scheduler using g e t internal server error response
func (o *GetBillGroupRuleTransactionSchedulerUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetBillGroupRuleTransactionSchedulerUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/billGroupRuleTransactionScheduler][%d] getBillGroupRuleTransactionSchedulerUsingGETInternalServerError", 500)
}

func (o *GetBillGroupRuleTransactionSchedulerUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/billGroupRuleTransactionScheduler][%d] getBillGroupRuleTransactionSchedulerUsingGETInternalServerError", 500)
}

func (o *GetBillGroupRuleTransactionSchedulerUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
