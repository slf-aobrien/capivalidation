// Code generated by go-swagger; DO NOT EDIT.

package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateOrganizationUsingPUTReader is a Reader for the UpdateOrganizationUsingPUT structure.
type UpdateOrganizationUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateOrganizationUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateOrganizationUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateOrganizationUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateOrganizationUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateOrganizationUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateOrganizationUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateOrganizationUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateOrganizationUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/organization] updateOrganizationUsingPUT", response, response.Code())
	}
}

// NewUpdateOrganizationUsingPUTOK creates a UpdateOrganizationUsingPUTOK with default headers values
func NewUpdateOrganizationUsingPUTOK() *UpdateOrganizationUsingPUTOK {
	return &UpdateOrganizationUsingPUTOK{}
}

/*
UpdateOrganizationUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateOrganizationUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update organization using p u t o k response has a 2xx status code
func (o *UpdateOrganizationUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update organization using p u t o k response has a 3xx status code
func (o *UpdateOrganizationUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization using p u t o k response has a 4xx status code
func (o *UpdateOrganizationUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update organization using p u t o k response has a 5xx status code
func (o *UpdateOrganizationUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization using p u t o k response a status code equal to that given
func (o *UpdateOrganizationUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update organization using p u t o k response
func (o *UpdateOrganizationUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateOrganizationUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/organization][%d] updateOrganizationUsingPUTOK %s", 200, payload)
}

func (o *UpdateOrganizationUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/organization][%d] updateOrganizationUsingPUTOK %s", 200, payload)
}

func (o *UpdateOrganizationUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateOrganizationUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationUsingPUTCreated creates a UpdateOrganizationUsingPUTCreated with default headers values
func NewUpdateOrganizationUsingPUTCreated() *UpdateOrganizationUsingPUTCreated {
	return &UpdateOrganizationUsingPUTCreated{}
}

/*
UpdateOrganizationUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateOrganizationUsingPUTCreated struct {
}

// IsSuccess returns true when this update organization using p u t created response has a 2xx status code
func (o *UpdateOrganizationUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update organization using p u t created response has a 3xx status code
func (o *UpdateOrganizationUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization using p u t created response has a 4xx status code
func (o *UpdateOrganizationUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update organization using p u t created response has a 5xx status code
func (o *UpdateOrganizationUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization using p u t created response a status code equal to that given
func (o *UpdateOrganizationUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update organization using p u t created response
func (o *UpdateOrganizationUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateOrganizationUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/organization][%d] updateOrganizationUsingPUTCreated", 201)
}

func (o *UpdateOrganizationUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/organization][%d] updateOrganizationUsingPUTCreated", 201)
}

func (o *UpdateOrganizationUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateOrganizationUsingPUTBadRequest creates a UpdateOrganizationUsingPUTBadRequest with default headers values
func NewUpdateOrganizationUsingPUTBadRequest() *UpdateOrganizationUsingPUTBadRequest {
	return &UpdateOrganizationUsingPUTBadRequest{}
}

/*
UpdateOrganizationUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateOrganizationUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update organization using p u t bad request response has a 2xx status code
func (o *UpdateOrganizationUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization using p u t bad request response has a 3xx status code
func (o *UpdateOrganizationUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization using p u t bad request response has a 4xx status code
func (o *UpdateOrganizationUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization using p u t bad request response has a 5xx status code
func (o *UpdateOrganizationUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization using p u t bad request response a status code equal to that given
func (o *UpdateOrganizationUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update organization using p u t bad request response
func (o *UpdateOrganizationUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateOrganizationUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/organization][%d] updateOrganizationUsingPUTBadRequest", 400)
}

func (o *UpdateOrganizationUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/organization][%d] updateOrganizationUsingPUTBadRequest", 400)
}

func (o *UpdateOrganizationUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateOrganizationUsingPUTUnauthorized creates a UpdateOrganizationUsingPUTUnauthorized with default headers values
func NewUpdateOrganizationUsingPUTUnauthorized() *UpdateOrganizationUsingPUTUnauthorized {
	return &UpdateOrganizationUsingPUTUnauthorized{}
}

/*
UpdateOrganizationUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateOrganizationUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update organization using p u t unauthorized response has a 2xx status code
func (o *UpdateOrganizationUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization using p u t unauthorized response has a 3xx status code
func (o *UpdateOrganizationUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization using p u t unauthorized response has a 4xx status code
func (o *UpdateOrganizationUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization using p u t unauthorized response has a 5xx status code
func (o *UpdateOrganizationUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization using p u t unauthorized response a status code equal to that given
func (o *UpdateOrganizationUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update organization using p u t unauthorized response
func (o *UpdateOrganizationUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateOrganizationUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/organization][%d] updateOrganizationUsingPUTUnauthorized", 401)
}

func (o *UpdateOrganizationUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/organization][%d] updateOrganizationUsingPUTUnauthorized", 401)
}

func (o *UpdateOrganizationUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateOrganizationUsingPUTForbidden creates a UpdateOrganizationUsingPUTForbidden with default headers values
func NewUpdateOrganizationUsingPUTForbidden() *UpdateOrganizationUsingPUTForbidden {
	return &UpdateOrganizationUsingPUTForbidden{}
}

/*
UpdateOrganizationUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateOrganizationUsingPUTForbidden struct {
}

// IsSuccess returns true when this update organization using p u t forbidden response has a 2xx status code
func (o *UpdateOrganizationUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization using p u t forbidden response has a 3xx status code
func (o *UpdateOrganizationUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization using p u t forbidden response has a 4xx status code
func (o *UpdateOrganizationUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization using p u t forbidden response has a 5xx status code
func (o *UpdateOrganizationUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization using p u t forbidden response a status code equal to that given
func (o *UpdateOrganizationUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update organization using p u t forbidden response
func (o *UpdateOrganizationUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateOrganizationUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/organization][%d] updateOrganizationUsingPUTForbidden", 403)
}

func (o *UpdateOrganizationUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/organization][%d] updateOrganizationUsingPUTForbidden", 403)
}

func (o *UpdateOrganizationUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateOrganizationUsingPUTNotFound creates a UpdateOrganizationUsingPUTNotFound with default headers values
func NewUpdateOrganizationUsingPUTNotFound() *UpdateOrganizationUsingPUTNotFound {
	return &UpdateOrganizationUsingPUTNotFound{}
}

/*
UpdateOrganizationUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateOrganizationUsingPUTNotFound struct {
}

// IsSuccess returns true when this update organization using p u t not found response has a 2xx status code
func (o *UpdateOrganizationUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization using p u t not found response has a 3xx status code
func (o *UpdateOrganizationUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization using p u t not found response has a 4xx status code
func (o *UpdateOrganizationUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization using p u t not found response has a 5xx status code
func (o *UpdateOrganizationUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization using p u t not found response a status code equal to that given
func (o *UpdateOrganizationUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update organization using p u t not found response
func (o *UpdateOrganizationUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateOrganizationUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/organization][%d] updateOrganizationUsingPUTNotFound", 404)
}

func (o *UpdateOrganizationUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/organization][%d] updateOrganizationUsingPUTNotFound", 404)
}

func (o *UpdateOrganizationUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateOrganizationUsingPUTInternalServerError creates a UpdateOrganizationUsingPUTInternalServerError with default headers values
func NewUpdateOrganizationUsingPUTInternalServerError() *UpdateOrganizationUsingPUTInternalServerError {
	return &UpdateOrganizationUsingPUTInternalServerError{}
}

/*
UpdateOrganizationUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateOrganizationUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update organization using p u t internal server error response has a 2xx status code
func (o *UpdateOrganizationUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization using p u t internal server error response has a 3xx status code
func (o *UpdateOrganizationUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization using p u t internal server error response has a 4xx status code
func (o *UpdateOrganizationUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update organization using p u t internal server error response has a 5xx status code
func (o *UpdateOrganizationUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update organization using p u t internal server error response a status code equal to that given
func (o *UpdateOrganizationUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update organization using p u t internal server error response
func (o *UpdateOrganizationUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateOrganizationUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/organization][%d] updateOrganizationUsingPUTInternalServerError", 500)
}

func (o *UpdateOrganizationUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/organization][%d] updateOrganizationUsingPUTInternalServerError", 500)
}

func (o *UpdateOrganizationUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
