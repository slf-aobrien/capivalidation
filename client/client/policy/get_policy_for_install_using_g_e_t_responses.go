// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetPolicyForInstallUsingGETReader is a Reader for the GetPolicyForInstallUsingGET structure.
type GetPolicyForInstallUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPolicyForInstallUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPolicyForInstallUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPolicyForInstallUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPolicyForInstallUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPolicyForInstallUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPolicyForInstallUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPolicyForInstallUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/policy/policyForInstallInfo] getPolicyForInstallUsingGET", response, response.Code())
	}
}

// NewGetPolicyForInstallUsingGETOK creates a GetPolicyForInstallUsingGETOK with default headers values
func NewGetPolicyForInstallUsingGETOK() *GetPolicyForInstallUsingGETOK {
	return &GetPolicyForInstallUsingGETOK{}
}

/*
GetPolicyForInstallUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetPolicyForInstallUsingGETOK struct {
	Payload *models.ResponseWrapperPolicyDTO
}

// IsSuccess returns true when this get policy for install using g e t o k response has a 2xx status code
func (o *GetPolicyForInstallUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get policy for install using g e t o k response has a 3xx status code
func (o *GetPolicyForInstallUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policy for install using g e t o k response has a 4xx status code
func (o *GetPolicyForInstallUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get policy for install using g e t o k response has a 5xx status code
func (o *GetPolicyForInstallUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get policy for install using g e t o k response a status code equal to that given
func (o *GetPolicyForInstallUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get policy for install using g e t o k response
func (o *GetPolicyForInstallUsingGETOK) Code() int {
	return 200
}

func (o *GetPolicyForInstallUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyForInstallInfo][%d] getPolicyForInstallUsingGETOK %s", 200, payload)
}

func (o *GetPolicyForInstallUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyForInstallInfo][%d] getPolicyForInstallUsingGETOK %s", 200, payload)
}

func (o *GetPolicyForInstallUsingGETOK) GetPayload() *models.ResponseWrapperPolicyDTO {
	return o.Payload
}

func (o *GetPolicyForInstallUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperPolicyDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPolicyForInstallUsingGETBadRequest creates a GetPolicyForInstallUsingGETBadRequest with default headers values
func NewGetPolicyForInstallUsingGETBadRequest() *GetPolicyForInstallUsingGETBadRequest {
	return &GetPolicyForInstallUsingGETBadRequest{}
}

/*
GetPolicyForInstallUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetPolicyForInstallUsingGETBadRequest struct {
}

// IsSuccess returns true when this get policy for install using g e t bad request response has a 2xx status code
func (o *GetPolicyForInstallUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get policy for install using g e t bad request response has a 3xx status code
func (o *GetPolicyForInstallUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policy for install using g e t bad request response has a 4xx status code
func (o *GetPolicyForInstallUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get policy for install using g e t bad request response has a 5xx status code
func (o *GetPolicyForInstallUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get policy for install using g e t bad request response a status code equal to that given
func (o *GetPolicyForInstallUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get policy for install using g e t bad request response
func (o *GetPolicyForInstallUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetPolicyForInstallUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyForInstallInfo][%d] getPolicyForInstallUsingGETBadRequest", 400)
}

func (o *GetPolicyForInstallUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyForInstallInfo][%d] getPolicyForInstallUsingGETBadRequest", 400)
}

func (o *GetPolicyForInstallUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPolicyForInstallUsingGETUnauthorized creates a GetPolicyForInstallUsingGETUnauthorized with default headers values
func NewGetPolicyForInstallUsingGETUnauthorized() *GetPolicyForInstallUsingGETUnauthorized {
	return &GetPolicyForInstallUsingGETUnauthorized{}
}

/*
GetPolicyForInstallUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetPolicyForInstallUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get policy for install using g e t unauthorized response has a 2xx status code
func (o *GetPolicyForInstallUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get policy for install using g e t unauthorized response has a 3xx status code
func (o *GetPolicyForInstallUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policy for install using g e t unauthorized response has a 4xx status code
func (o *GetPolicyForInstallUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get policy for install using g e t unauthorized response has a 5xx status code
func (o *GetPolicyForInstallUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get policy for install using g e t unauthorized response a status code equal to that given
func (o *GetPolicyForInstallUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get policy for install using g e t unauthorized response
func (o *GetPolicyForInstallUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetPolicyForInstallUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyForInstallInfo][%d] getPolicyForInstallUsingGETUnauthorized", 401)
}

func (o *GetPolicyForInstallUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyForInstallInfo][%d] getPolicyForInstallUsingGETUnauthorized", 401)
}

func (o *GetPolicyForInstallUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPolicyForInstallUsingGETForbidden creates a GetPolicyForInstallUsingGETForbidden with default headers values
func NewGetPolicyForInstallUsingGETForbidden() *GetPolicyForInstallUsingGETForbidden {
	return &GetPolicyForInstallUsingGETForbidden{}
}

/*
GetPolicyForInstallUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetPolicyForInstallUsingGETForbidden struct {
}

// IsSuccess returns true when this get policy for install using g e t forbidden response has a 2xx status code
func (o *GetPolicyForInstallUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get policy for install using g e t forbidden response has a 3xx status code
func (o *GetPolicyForInstallUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policy for install using g e t forbidden response has a 4xx status code
func (o *GetPolicyForInstallUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get policy for install using g e t forbidden response has a 5xx status code
func (o *GetPolicyForInstallUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get policy for install using g e t forbidden response a status code equal to that given
func (o *GetPolicyForInstallUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get policy for install using g e t forbidden response
func (o *GetPolicyForInstallUsingGETForbidden) Code() int {
	return 403
}

func (o *GetPolicyForInstallUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyForInstallInfo][%d] getPolicyForInstallUsingGETForbidden", 403)
}

func (o *GetPolicyForInstallUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyForInstallInfo][%d] getPolicyForInstallUsingGETForbidden", 403)
}

func (o *GetPolicyForInstallUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPolicyForInstallUsingGETNotFound creates a GetPolicyForInstallUsingGETNotFound with default headers values
func NewGetPolicyForInstallUsingGETNotFound() *GetPolicyForInstallUsingGETNotFound {
	return &GetPolicyForInstallUsingGETNotFound{}
}

/*
GetPolicyForInstallUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetPolicyForInstallUsingGETNotFound struct {
}

// IsSuccess returns true when this get policy for install using g e t not found response has a 2xx status code
func (o *GetPolicyForInstallUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get policy for install using g e t not found response has a 3xx status code
func (o *GetPolicyForInstallUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policy for install using g e t not found response has a 4xx status code
func (o *GetPolicyForInstallUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get policy for install using g e t not found response has a 5xx status code
func (o *GetPolicyForInstallUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get policy for install using g e t not found response a status code equal to that given
func (o *GetPolicyForInstallUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get policy for install using g e t not found response
func (o *GetPolicyForInstallUsingGETNotFound) Code() int {
	return 404
}

func (o *GetPolicyForInstallUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyForInstallInfo][%d] getPolicyForInstallUsingGETNotFound", 404)
}

func (o *GetPolicyForInstallUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyForInstallInfo][%d] getPolicyForInstallUsingGETNotFound", 404)
}

func (o *GetPolicyForInstallUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPolicyForInstallUsingGETInternalServerError creates a GetPolicyForInstallUsingGETInternalServerError with default headers values
func NewGetPolicyForInstallUsingGETInternalServerError() *GetPolicyForInstallUsingGETInternalServerError {
	return &GetPolicyForInstallUsingGETInternalServerError{}
}

/*
GetPolicyForInstallUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetPolicyForInstallUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get policy for install using g e t internal server error response has a 2xx status code
func (o *GetPolicyForInstallUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get policy for install using g e t internal server error response has a 3xx status code
func (o *GetPolicyForInstallUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policy for install using g e t internal server error response has a 4xx status code
func (o *GetPolicyForInstallUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get policy for install using g e t internal server error response has a 5xx status code
func (o *GetPolicyForInstallUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get policy for install using g e t internal server error response a status code equal to that given
func (o *GetPolicyForInstallUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get policy for install using g e t internal server error response
func (o *GetPolicyForInstallUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetPolicyForInstallUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyForInstallInfo][%d] getPolicyForInstallUsingGETInternalServerError", 500)
}

func (o *GetPolicyForInstallUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/policyForInstallInfo][%d] getPolicyForInstallUsingGETInternalServerError", 500)
}

func (o *GetPolicyForInstallUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
