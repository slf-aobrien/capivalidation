// Code generated by go-swagger; DO NOT EDIT.

package dependent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// RemoveDependentUsingPOSTReader is a Reader for the RemoveDependentUsingPOST structure.
type RemoveDependentUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveDependentUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRemoveDependentUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewRemoveDependentUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRemoveDependentUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRemoveDependentUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRemoveDependentUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRemoveDependentUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRemoveDependentUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/dependent/remove] removeDependentUsingPOST", response, response.Code())
	}
}

// NewRemoveDependentUsingPOSTOK creates a RemoveDependentUsingPOSTOK with default headers values
func NewRemoveDependentUsingPOSTOK() *RemoveDependentUsingPOSTOK {
	return &RemoveDependentUsingPOSTOK{}
}

/*
RemoveDependentUsingPOSTOK describes a response with status code 200, with default header values.

Success
*/
type RemoveDependentUsingPOSTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this remove dependent using p o s t o k response has a 2xx status code
func (o *RemoveDependentUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this remove dependent using p o s t o k response has a 3xx status code
func (o *RemoveDependentUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove dependent using p o s t o k response has a 4xx status code
func (o *RemoveDependentUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove dependent using p o s t o k response has a 5xx status code
func (o *RemoveDependentUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this remove dependent using p o s t o k response a status code equal to that given
func (o *RemoveDependentUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the remove dependent using p o s t o k response
func (o *RemoveDependentUsingPOSTOK) Code() int {
	return 200
}

func (o *RemoveDependentUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/remove][%d] removeDependentUsingPOSTOK %s", 200, payload)
}

func (o *RemoveDependentUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/remove][%d] removeDependentUsingPOSTOK %s", 200, payload)
}

func (o *RemoveDependentUsingPOSTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *RemoveDependentUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveDependentUsingPOSTCreated creates a RemoveDependentUsingPOSTCreated with default headers values
func NewRemoveDependentUsingPOSTCreated() *RemoveDependentUsingPOSTCreated {
	return &RemoveDependentUsingPOSTCreated{}
}

/*
RemoveDependentUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type RemoveDependentUsingPOSTCreated struct {
}

// IsSuccess returns true when this remove dependent using p o s t created response has a 2xx status code
func (o *RemoveDependentUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this remove dependent using p o s t created response has a 3xx status code
func (o *RemoveDependentUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove dependent using p o s t created response has a 4xx status code
func (o *RemoveDependentUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove dependent using p o s t created response has a 5xx status code
func (o *RemoveDependentUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this remove dependent using p o s t created response a status code equal to that given
func (o *RemoveDependentUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the remove dependent using p o s t created response
func (o *RemoveDependentUsingPOSTCreated) Code() int {
	return 201
}

func (o *RemoveDependentUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/remove][%d] removeDependentUsingPOSTCreated", 201)
}

func (o *RemoveDependentUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/remove][%d] removeDependentUsingPOSTCreated", 201)
}

func (o *RemoveDependentUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveDependentUsingPOSTBadRequest creates a RemoveDependentUsingPOSTBadRequest with default headers values
func NewRemoveDependentUsingPOSTBadRequest() *RemoveDependentUsingPOSTBadRequest {
	return &RemoveDependentUsingPOSTBadRequest{}
}

/*
RemoveDependentUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RemoveDependentUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this remove dependent using p o s t bad request response has a 2xx status code
func (o *RemoveDependentUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove dependent using p o s t bad request response has a 3xx status code
func (o *RemoveDependentUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove dependent using p o s t bad request response has a 4xx status code
func (o *RemoveDependentUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove dependent using p o s t bad request response has a 5xx status code
func (o *RemoveDependentUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this remove dependent using p o s t bad request response a status code equal to that given
func (o *RemoveDependentUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the remove dependent using p o s t bad request response
func (o *RemoveDependentUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *RemoveDependentUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/remove][%d] removeDependentUsingPOSTBadRequest", 400)
}

func (o *RemoveDependentUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/remove][%d] removeDependentUsingPOSTBadRequest", 400)
}

func (o *RemoveDependentUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveDependentUsingPOSTUnauthorized creates a RemoveDependentUsingPOSTUnauthorized with default headers values
func NewRemoveDependentUsingPOSTUnauthorized() *RemoveDependentUsingPOSTUnauthorized {
	return &RemoveDependentUsingPOSTUnauthorized{}
}

/*
RemoveDependentUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RemoveDependentUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this remove dependent using p o s t unauthorized response has a 2xx status code
func (o *RemoveDependentUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove dependent using p o s t unauthorized response has a 3xx status code
func (o *RemoveDependentUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove dependent using p o s t unauthorized response has a 4xx status code
func (o *RemoveDependentUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove dependent using p o s t unauthorized response has a 5xx status code
func (o *RemoveDependentUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this remove dependent using p o s t unauthorized response a status code equal to that given
func (o *RemoveDependentUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the remove dependent using p o s t unauthorized response
func (o *RemoveDependentUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *RemoveDependentUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/remove][%d] removeDependentUsingPOSTUnauthorized", 401)
}

func (o *RemoveDependentUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/remove][%d] removeDependentUsingPOSTUnauthorized", 401)
}

func (o *RemoveDependentUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveDependentUsingPOSTForbidden creates a RemoveDependentUsingPOSTForbidden with default headers values
func NewRemoveDependentUsingPOSTForbidden() *RemoveDependentUsingPOSTForbidden {
	return &RemoveDependentUsingPOSTForbidden{}
}

/*
RemoveDependentUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RemoveDependentUsingPOSTForbidden struct {
}

// IsSuccess returns true when this remove dependent using p o s t forbidden response has a 2xx status code
func (o *RemoveDependentUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove dependent using p o s t forbidden response has a 3xx status code
func (o *RemoveDependentUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove dependent using p o s t forbidden response has a 4xx status code
func (o *RemoveDependentUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove dependent using p o s t forbidden response has a 5xx status code
func (o *RemoveDependentUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this remove dependent using p o s t forbidden response a status code equal to that given
func (o *RemoveDependentUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the remove dependent using p o s t forbidden response
func (o *RemoveDependentUsingPOSTForbidden) Code() int {
	return 403
}

func (o *RemoveDependentUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/remove][%d] removeDependentUsingPOSTForbidden", 403)
}

func (o *RemoveDependentUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/remove][%d] removeDependentUsingPOSTForbidden", 403)
}

func (o *RemoveDependentUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveDependentUsingPOSTNotFound creates a RemoveDependentUsingPOSTNotFound with default headers values
func NewRemoveDependentUsingPOSTNotFound() *RemoveDependentUsingPOSTNotFound {
	return &RemoveDependentUsingPOSTNotFound{}
}

/*
RemoveDependentUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RemoveDependentUsingPOSTNotFound struct {
}

// IsSuccess returns true when this remove dependent using p o s t not found response has a 2xx status code
func (o *RemoveDependentUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove dependent using p o s t not found response has a 3xx status code
func (o *RemoveDependentUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove dependent using p o s t not found response has a 4xx status code
func (o *RemoveDependentUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove dependent using p o s t not found response has a 5xx status code
func (o *RemoveDependentUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this remove dependent using p o s t not found response a status code equal to that given
func (o *RemoveDependentUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the remove dependent using p o s t not found response
func (o *RemoveDependentUsingPOSTNotFound) Code() int {
	return 404
}

func (o *RemoveDependentUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/remove][%d] removeDependentUsingPOSTNotFound", 404)
}

func (o *RemoveDependentUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/remove][%d] removeDependentUsingPOSTNotFound", 404)
}

func (o *RemoveDependentUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveDependentUsingPOSTInternalServerError creates a RemoveDependentUsingPOSTInternalServerError with default headers values
func NewRemoveDependentUsingPOSTInternalServerError() *RemoveDependentUsingPOSTInternalServerError {
	return &RemoveDependentUsingPOSTInternalServerError{}
}

/*
RemoveDependentUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type RemoveDependentUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this remove dependent using p o s t internal server error response has a 2xx status code
func (o *RemoveDependentUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove dependent using p o s t internal server error response has a 3xx status code
func (o *RemoveDependentUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove dependent using p o s t internal server error response has a 4xx status code
func (o *RemoveDependentUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove dependent using p o s t internal server error response has a 5xx status code
func (o *RemoveDependentUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this remove dependent using p o s t internal server error response a status code equal to that given
func (o *RemoveDependentUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the remove dependent using p o s t internal server error response
func (o *RemoveDependentUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *RemoveDependentUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/remove][%d] removeDependentUsingPOSTInternalServerError", 500)
}

func (o *RemoveDependentUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/dependent/remove][%d] removeDependentUsingPOSTInternalServerError", 500)
}

func (o *RemoveDependentUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
