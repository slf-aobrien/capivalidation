// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateMemberLanguageUsingPUTReader is a Reader for the UpdateMemberLanguageUsingPUT structure.
type UpdateMemberLanguageUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMemberLanguageUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateMemberLanguageUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateMemberLanguageUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateMemberLanguageUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateMemberLanguageUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateMemberLanguageUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateMemberLanguageUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateMemberLanguageUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/member/update/language] updateMemberLanguageUsingPUT", response, response.Code())
	}
}

// NewUpdateMemberLanguageUsingPUTOK creates a UpdateMemberLanguageUsingPUTOK with default headers values
func NewUpdateMemberLanguageUsingPUTOK() *UpdateMemberLanguageUsingPUTOK {
	return &UpdateMemberLanguageUsingPUTOK{}
}

/*
UpdateMemberLanguageUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateMemberLanguageUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update member language using p u t o k response has a 2xx status code
func (o *UpdateMemberLanguageUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member language using p u t o k response has a 3xx status code
func (o *UpdateMemberLanguageUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member language using p u t o k response has a 4xx status code
func (o *UpdateMemberLanguageUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member language using p u t o k response has a 5xx status code
func (o *UpdateMemberLanguageUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update member language using p u t o k response a status code equal to that given
func (o *UpdateMemberLanguageUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update member language using p u t o k response
func (o *UpdateMemberLanguageUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateMemberLanguageUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/language][%d] updateMemberLanguageUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberLanguageUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/language][%d] updateMemberLanguageUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberLanguageUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateMemberLanguageUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMemberLanguageUsingPUTCreated creates a UpdateMemberLanguageUsingPUTCreated with default headers values
func NewUpdateMemberLanguageUsingPUTCreated() *UpdateMemberLanguageUsingPUTCreated {
	return &UpdateMemberLanguageUsingPUTCreated{}
}

/*
UpdateMemberLanguageUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateMemberLanguageUsingPUTCreated struct {
}

// IsSuccess returns true when this update member language using p u t created response has a 2xx status code
func (o *UpdateMemberLanguageUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member language using p u t created response has a 3xx status code
func (o *UpdateMemberLanguageUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member language using p u t created response has a 4xx status code
func (o *UpdateMemberLanguageUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member language using p u t created response has a 5xx status code
func (o *UpdateMemberLanguageUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update member language using p u t created response a status code equal to that given
func (o *UpdateMemberLanguageUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update member language using p u t created response
func (o *UpdateMemberLanguageUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateMemberLanguageUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/language][%d] updateMemberLanguageUsingPUTCreated", 201)
}

func (o *UpdateMemberLanguageUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/language][%d] updateMemberLanguageUsingPUTCreated", 201)
}

func (o *UpdateMemberLanguageUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberLanguageUsingPUTBadRequest creates a UpdateMemberLanguageUsingPUTBadRequest with default headers values
func NewUpdateMemberLanguageUsingPUTBadRequest() *UpdateMemberLanguageUsingPUTBadRequest {
	return &UpdateMemberLanguageUsingPUTBadRequest{}
}

/*
UpdateMemberLanguageUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateMemberLanguageUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update member language using p u t bad request response has a 2xx status code
func (o *UpdateMemberLanguageUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member language using p u t bad request response has a 3xx status code
func (o *UpdateMemberLanguageUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member language using p u t bad request response has a 4xx status code
func (o *UpdateMemberLanguageUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member language using p u t bad request response has a 5xx status code
func (o *UpdateMemberLanguageUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update member language using p u t bad request response a status code equal to that given
func (o *UpdateMemberLanguageUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update member language using p u t bad request response
func (o *UpdateMemberLanguageUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateMemberLanguageUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/language][%d] updateMemberLanguageUsingPUTBadRequest", 400)
}

func (o *UpdateMemberLanguageUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/language][%d] updateMemberLanguageUsingPUTBadRequest", 400)
}

func (o *UpdateMemberLanguageUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberLanguageUsingPUTUnauthorized creates a UpdateMemberLanguageUsingPUTUnauthorized with default headers values
func NewUpdateMemberLanguageUsingPUTUnauthorized() *UpdateMemberLanguageUsingPUTUnauthorized {
	return &UpdateMemberLanguageUsingPUTUnauthorized{}
}

/*
UpdateMemberLanguageUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateMemberLanguageUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update member language using p u t unauthorized response has a 2xx status code
func (o *UpdateMemberLanguageUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member language using p u t unauthorized response has a 3xx status code
func (o *UpdateMemberLanguageUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member language using p u t unauthorized response has a 4xx status code
func (o *UpdateMemberLanguageUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member language using p u t unauthorized response has a 5xx status code
func (o *UpdateMemberLanguageUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update member language using p u t unauthorized response a status code equal to that given
func (o *UpdateMemberLanguageUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update member language using p u t unauthorized response
func (o *UpdateMemberLanguageUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateMemberLanguageUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/language][%d] updateMemberLanguageUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberLanguageUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/language][%d] updateMemberLanguageUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberLanguageUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberLanguageUsingPUTForbidden creates a UpdateMemberLanguageUsingPUTForbidden with default headers values
func NewUpdateMemberLanguageUsingPUTForbidden() *UpdateMemberLanguageUsingPUTForbidden {
	return &UpdateMemberLanguageUsingPUTForbidden{}
}

/*
UpdateMemberLanguageUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateMemberLanguageUsingPUTForbidden struct {
}

// IsSuccess returns true when this update member language using p u t forbidden response has a 2xx status code
func (o *UpdateMemberLanguageUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member language using p u t forbidden response has a 3xx status code
func (o *UpdateMemberLanguageUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member language using p u t forbidden response has a 4xx status code
func (o *UpdateMemberLanguageUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member language using p u t forbidden response has a 5xx status code
func (o *UpdateMemberLanguageUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update member language using p u t forbidden response a status code equal to that given
func (o *UpdateMemberLanguageUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update member language using p u t forbidden response
func (o *UpdateMemberLanguageUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateMemberLanguageUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/language][%d] updateMemberLanguageUsingPUTForbidden", 403)
}

func (o *UpdateMemberLanguageUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/language][%d] updateMemberLanguageUsingPUTForbidden", 403)
}

func (o *UpdateMemberLanguageUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberLanguageUsingPUTNotFound creates a UpdateMemberLanguageUsingPUTNotFound with default headers values
func NewUpdateMemberLanguageUsingPUTNotFound() *UpdateMemberLanguageUsingPUTNotFound {
	return &UpdateMemberLanguageUsingPUTNotFound{}
}

/*
UpdateMemberLanguageUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateMemberLanguageUsingPUTNotFound struct {
}

// IsSuccess returns true when this update member language using p u t not found response has a 2xx status code
func (o *UpdateMemberLanguageUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member language using p u t not found response has a 3xx status code
func (o *UpdateMemberLanguageUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member language using p u t not found response has a 4xx status code
func (o *UpdateMemberLanguageUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member language using p u t not found response has a 5xx status code
func (o *UpdateMemberLanguageUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update member language using p u t not found response a status code equal to that given
func (o *UpdateMemberLanguageUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update member language using p u t not found response
func (o *UpdateMemberLanguageUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateMemberLanguageUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/language][%d] updateMemberLanguageUsingPUTNotFound", 404)
}

func (o *UpdateMemberLanguageUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/language][%d] updateMemberLanguageUsingPUTNotFound", 404)
}

func (o *UpdateMemberLanguageUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberLanguageUsingPUTInternalServerError creates a UpdateMemberLanguageUsingPUTInternalServerError with default headers values
func NewUpdateMemberLanguageUsingPUTInternalServerError() *UpdateMemberLanguageUsingPUTInternalServerError {
	return &UpdateMemberLanguageUsingPUTInternalServerError{}
}

/*
UpdateMemberLanguageUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateMemberLanguageUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update member language using p u t internal server error response has a 2xx status code
func (o *UpdateMemberLanguageUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member language using p u t internal server error response has a 3xx status code
func (o *UpdateMemberLanguageUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member language using p u t internal server error response has a 4xx status code
func (o *UpdateMemberLanguageUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member language using p u t internal server error response has a 5xx status code
func (o *UpdateMemberLanguageUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update member language using p u t internal server error response a status code equal to that given
func (o *UpdateMemberLanguageUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update member language using p u t internal server error response
func (o *UpdateMemberLanguageUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateMemberLanguageUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/language][%d] updateMemberLanguageUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberLanguageUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/language][%d] updateMemberLanguageUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberLanguageUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
