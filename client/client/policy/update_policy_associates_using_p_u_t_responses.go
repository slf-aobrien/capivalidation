// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdatePolicyAssociatesUsingPUTReader is a Reader for the UpdatePolicyAssociatesUsingPUT structure.
type UpdatePolicyAssociatesUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePolicyAssociatesUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdatePolicyAssociatesUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdatePolicyAssociatesUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdatePolicyAssociatesUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdatePolicyAssociatesUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdatePolicyAssociatesUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdatePolicyAssociatesUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdatePolicyAssociatesUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/policy/updatePolicyAssociates] updatePolicyAssociatesUsingPUT", response, response.Code())
	}
}

// NewUpdatePolicyAssociatesUsingPUTOK creates a UpdatePolicyAssociatesUsingPUTOK with default headers values
func NewUpdatePolicyAssociatesUsingPUTOK() *UpdatePolicyAssociatesUsingPUTOK {
	return &UpdatePolicyAssociatesUsingPUTOK{}
}

/*
UpdatePolicyAssociatesUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdatePolicyAssociatesUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update policy associates using p u t o k response has a 2xx status code
func (o *UpdatePolicyAssociatesUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update policy associates using p u t o k response has a 3xx status code
func (o *UpdatePolicyAssociatesUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy associates using p u t o k response has a 4xx status code
func (o *UpdatePolicyAssociatesUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update policy associates using p u t o k response has a 5xx status code
func (o *UpdatePolicyAssociatesUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy associates using p u t o k response a status code equal to that given
func (o *UpdatePolicyAssociatesUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update policy associates using p u t o k response
func (o *UpdatePolicyAssociatesUsingPUTOK) Code() int {
	return 200
}

func (o *UpdatePolicyAssociatesUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyAssociates][%d] updatePolicyAssociatesUsingPUTOK %s", 200, payload)
}

func (o *UpdatePolicyAssociatesUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyAssociates][%d] updatePolicyAssociatesUsingPUTOK %s", 200, payload)
}

func (o *UpdatePolicyAssociatesUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdatePolicyAssociatesUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePolicyAssociatesUsingPUTCreated creates a UpdatePolicyAssociatesUsingPUTCreated with default headers values
func NewUpdatePolicyAssociatesUsingPUTCreated() *UpdatePolicyAssociatesUsingPUTCreated {
	return &UpdatePolicyAssociatesUsingPUTCreated{}
}

/*
UpdatePolicyAssociatesUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdatePolicyAssociatesUsingPUTCreated struct {
}

// IsSuccess returns true when this update policy associates using p u t created response has a 2xx status code
func (o *UpdatePolicyAssociatesUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update policy associates using p u t created response has a 3xx status code
func (o *UpdatePolicyAssociatesUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy associates using p u t created response has a 4xx status code
func (o *UpdatePolicyAssociatesUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update policy associates using p u t created response has a 5xx status code
func (o *UpdatePolicyAssociatesUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy associates using p u t created response a status code equal to that given
func (o *UpdatePolicyAssociatesUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update policy associates using p u t created response
func (o *UpdatePolicyAssociatesUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdatePolicyAssociatesUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyAssociates][%d] updatePolicyAssociatesUsingPUTCreated", 201)
}

func (o *UpdatePolicyAssociatesUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyAssociates][%d] updatePolicyAssociatesUsingPUTCreated", 201)
}

func (o *UpdatePolicyAssociatesUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyAssociatesUsingPUTBadRequest creates a UpdatePolicyAssociatesUsingPUTBadRequest with default headers values
func NewUpdatePolicyAssociatesUsingPUTBadRequest() *UpdatePolicyAssociatesUsingPUTBadRequest {
	return &UpdatePolicyAssociatesUsingPUTBadRequest{}
}

/*
UpdatePolicyAssociatesUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdatePolicyAssociatesUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update policy associates using p u t bad request response has a 2xx status code
func (o *UpdatePolicyAssociatesUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy associates using p u t bad request response has a 3xx status code
func (o *UpdatePolicyAssociatesUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy associates using p u t bad request response has a 4xx status code
func (o *UpdatePolicyAssociatesUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy associates using p u t bad request response has a 5xx status code
func (o *UpdatePolicyAssociatesUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy associates using p u t bad request response a status code equal to that given
func (o *UpdatePolicyAssociatesUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update policy associates using p u t bad request response
func (o *UpdatePolicyAssociatesUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdatePolicyAssociatesUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyAssociates][%d] updatePolicyAssociatesUsingPUTBadRequest", 400)
}

func (o *UpdatePolicyAssociatesUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyAssociates][%d] updatePolicyAssociatesUsingPUTBadRequest", 400)
}

func (o *UpdatePolicyAssociatesUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyAssociatesUsingPUTUnauthorized creates a UpdatePolicyAssociatesUsingPUTUnauthorized with default headers values
func NewUpdatePolicyAssociatesUsingPUTUnauthorized() *UpdatePolicyAssociatesUsingPUTUnauthorized {
	return &UpdatePolicyAssociatesUsingPUTUnauthorized{}
}

/*
UpdatePolicyAssociatesUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdatePolicyAssociatesUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update policy associates using p u t unauthorized response has a 2xx status code
func (o *UpdatePolicyAssociatesUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy associates using p u t unauthorized response has a 3xx status code
func (o *UpdatePolicyAssociatesUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy associates using p u t unauthorized response has a 4xx status code
func (o *UpdatePolicyAssociatesUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy associates using p u t unauthorized response has a 5xx status code
func (o *UpdatePolicyAssociatesUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy associates using p u t unauthorized response a status code equal to that given
func (o *UpdatePolicyAssociatesUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update policy associates using p u t unauthorized response
func (o *UpdatePolicyAssociatesUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdatePolicyAssociatesUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyAssociates][%d] updatePolicyAssociatesUsingPUTUnauthorized", 401)
}

func (o *UpdatePolicyAssociatesUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyAssociates][%d] updatePolicyAssociatesUsingPUTUnauthorized", 401)
}

func (o *UpdatePolicyAssociatesUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyAssociatesUsingPUTForbidden creates a UpdatePolicyAssociatesUsingPUTForbidden with default headers values
func NewUpdatePolicyAssociatesUsingPUTForbidden() *UpdatePolicyAssociatesUsingPUTForbidden {
	return &UpdatePolicyAssociatesUsingPUTForbidden{}
}

/*
UpdatePolicyAssociatesUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdatePolicyAssociatesUsingPUTForbidden struct {
}

// IsSuccess returns true when this update policy associates using p u t forbidden response has a 2xx status code
func (o *UpdatePolicyAssociatesUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy associates using p u t forbidden response has a 3xx status code
func (o *UpdatePolicyAssociatesUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy associates using p u t forbidden response has a 4xx status code
func (o *UpdatePolicyAssociatesUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy associates using p u t forbidden response has a 5xx status code
func (o *UpdatePolicyAssociatesUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy associates using p u t forbidden response a status code equal to that given
func (o *UpdatePolicyAssociatesUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update policy associates using p u t forbidden response
func (o *UpdatePolicyAssociatesUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdatePolicyAssociatesUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyAssociates][%d] updatePolicyAssociatesUsingPUTForbidden", 403)
}

func (o *UpdatePolicyAssociatesUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyAssociates][%d] updatePolicyAssociatesUsingPUTForbidden", 403)
}

func (o *UpdatePolicyAssociatesUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyAssociatesUsingPUTNotFound creates a UpdatePolicyAssociatesUsingPUTNotFound with default headers values
func NewUpdatePolicyAssociatesUsingPUTNotFound() *UpdatePolicyAssociatesUsingPUTNotFound {
	return &UpdatePolicyAssociatesUsingPUTNotFound{}
}

/*
UpdatePolicyAssociatesUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdatePolicyAssociatesUsingPUTNotFound struct {
}

// IsSuccess returns true when this update policy associates using p u t not found response has a 2xx status code
func (o *UpdatePolicyAssociatesUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy associates using p u t not found response has a 3xx status code
func (o *UpdatePolicyAssociatesUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy associates using p u t not found response has a 4xx status code
func (o *UpdatePolicyAssociatesUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy associates using p u t not found response has a 5xx status code
func (o *UpdatePolicyAssociatesUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy associates using p u t not found response a status code equal to that given
func (o *UpdatePolicyAssociatesUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update policy associates using p u t not found response
func (o *UpdatePolicyAssociatesUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdatePolicyAssociatesUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyAssociates][%d] updatePolicyAssociatesUsingPUTNotFound", 404)
}

func (o *UpdatePolicyAssociatesUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyAssociates][%d] updatePolicyAssociatesUsingPUTNotFound", 404)
}

func (o *UpdatePolicyAssociatesUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyAssociatesUsingPUTInternalServerError creates a UpdatePolicyAssociatesUsingPUTInternalServerError with default headers values
func NewUpdatePolicyAssociatesUsingPUTInternalServerError() *UpdatePolicyAssociatesUsingPUTInternalServerError {
	return &UpdatePolicyAssociatesUsingPUTInternalServerError{}
}

/*
UpdatePolicyAssociatesUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdatePolicyAssociatesUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update policy associates using p u t internal server error response has a 2xx status code
func (o *UpdatePolicyAssociatesUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy associates using p u t internal server error response has a 3xx status code
func (o *UpdatePolicyAssociatesUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy associates using p u t internal server error response has a 4xx status code
func (o *UpdatePolicyAssociatesUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update policy associates using p u t internal server error response has a 5xx status code
func (o *UpdatePolicyAssociatesUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update policy associates using p u t internal server error response a status code equal to that given
func (o *UpdatePolicyAssociatesUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update policy associates using p u t internal server error response
func (o *UpdatePolicyAssociatesUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdatePolicyAssociatesUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyAssociates][%d] updatePolicyAssociatesUsingPUTInternalServerError", 500)
}

func (o *UpdatePolicyAssociatesUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyAssociates][%d] updatePolicyAssociatesUsingPUTInternalServerError", 500)
}

func (o *UpdatePolicyAssociatesUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
