// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateDeleteBenefitRuleUsingPUTReader is a Reader for the UpdateDeleteBenefitRuleUsingPUT structure.
type UpdateDeleteBenefitRuleUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateDeleteBenefitRuleUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateDeleteBenefitRuleUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateDeleteBenefitRuleUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateDeleteBenefitRuleUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateDeleteBenefitRuleUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateDeleteBenefitRuleUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateDeleteBenefitRuleUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateDeleteBenefitRuleUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/policy/policyServiceRule/updateDeleteBenefitRule] updateDeleteBenefitRuleUsingPUT", response, response.Code())
	}
}

// NewUpdateDeleteBenefitRuleUsingPUTOK creates a UpdateDeleteBenefitRuleUsingPUTOK with default headers values
func NewUpdateDeleteBenefitRuleUsingPUTOK() *UpdateDeleteBenefitRuleUsingPUTOK {
	return &UpdateDeleteBenefitRuleUsingPUTOK{}
}

/*
UpdateDeleteBenefitRuleUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateDeleteBenefitRuleUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update delete benefit rule using p u t o k response has a 2xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update delete benefit rule using p u t o k response has a 3xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update delete benefit rule using p u t o k response has a 4xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update delete benefit rule using p u t o k response has a 5xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update delete benefit rule using p u t o k response a status code equal to that given
func (o *UpdateDeleteBenefitRuleUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update delete benefit rule using p u t o k response
func (o *UpdateDeleteBenefitRuleUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateDeleteBenefitRuleUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateDeleteBenefitRule][%d] updateDeleteBenefitRuleUsingPUTOK %s", 200, payload)
}

func (o *UpdateDeleteBenefitRuleUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateDeleteBenefitRule][%d] updateDeleteBenefitRuleUsingPUTOK %s", 200, payload)
}

func (o *UpdateDeleteBenefitRuleUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateDeleteBenefitRuleUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDeleteBenefitRuleUsingPUTCreated creates a UpdateDeleteBenefitRuleUsingPUTCreated with default headers values
func NewUpdateDeleteBenefitRuleUsingPUTCreated() *UpdateDeleteBenefitRuleUsingPUTCreated {
	return &UpdateDeleteBenefitRuleUsingPUTCreated{}
}

/*
UpdateDeleteBenefitRuleUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateDeleteBenefitRuleUsingPUTCreated struct {
}

// IsSuccess returns true when this update delete benefit rule using p u t created response has a 2xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update delete benefit rule using p u t created response has a 3xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update delete benefit rule using p u t created response has a 4xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update delete benefit rule using p u t created response has a 5xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update delete benefit rule using p u t created response a status code equal to that given
func (o *UpdateDeleteBenefitRuleUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update delete benefit rule using p u t created response
func (o *UpdateDeleteBenefitRuleUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateDeleteBenefitRuleUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateDeleteBenefitRule][%d] updateDeleteBenefitRuleUsingPUTCreated", 201)
}

func (o *UpdateDeleteBenefitRuleUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateDeleteBenefitRule][%d] updateDeleteBenefitRuleUsingPUTCreated", 201)
}

func (o *UpdateDeleteBenefitRuleUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDeleteBenefitRuleUsingPUTBadRequest creates a UpdateDeleteBenefitRuleUsingPUTBadRequest with default headers values
func NewUpdateDeleteBenefitRuleUsingPUTBadRequest() *UpdateDeleteBenefitRuleUsingPUTBadRequest {
	return &UpdateDeleteBenefitRuleUsingPUTBadRequest{}
}

/*
UpdateDeleteBenefitRuleUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateDeleteBenefitRuleUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update delete benefit rule using p u t bad request response has a 2xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update delete benefit rule using p u t bad request response has a 3xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update delete benefit rule using p u t bad request response has a 4xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update delete benefit rule using p u t bad request response has a 5xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update delete benefit rule using p u t bad request response a status code equal to that given
func (o *UpdateDeleteBenefitRuleUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update delete benefit rule using p u t bad request response
func (o *UpdateDeleteBenefitRuleUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateDeleteBenefitRuleUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateDeleteBenefitRule][%d] updateDeleteBenefitRuleUsingPUTBadRequest", 400)
}

func (o *UpdateDeleteBenefitRuleUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateDeleteBenefitRule][%d] updateDeleteBenefitRuleUsingPUTBadRequest", 400)
}

func (o *UpdateDeleteBenefitRuleUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDeleteBenefitRuleUsingPUTUnauthorized creates a UpdateDeleteBenefitRuleUsingPUTUnauthorized with default headers values
func NewUpdateDeleteBenefitRuleUsingPUTUnauthorized() *UpdateDeleteBenefitRuleUsingPUTUnauthorized {
	return &UpdateDeleteBenefitRuleUsingPUTUnauthorized{}
}

/*
UpdateDeleteBenefitRuleUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateDeleteBenefitRuleUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update delete benefit rule using p u t unauthorized response has a 2xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update delete benefit rule using p u t unauthorized response has a 3xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update delete benefit rule using p u t unauthorized response has a 4xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update delete benefit rule using p u t unauthorized response has a 5xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update delete benefit rule using p u t unauthorized response a status code equal to that given
func (o *UpdateDeleteBenefitRuleUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update delete benefit rule using p u t unauthorized response
func (o *UpdateDeleteBenefitRuleUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateDeleteBenefitRuleUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateDeleteBenefitRule][%d] updateDeleteBenefitRuleUsingPUTUnauthorized", 401)
}

func (o *UpdateDeleteBenefitRuleUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateDeleteBenefitRule][%d] updateDeleteBenefitRuleUsingPUTUnauthorized", 401)
}

func (o *UpdateDeleteBenefitRuleUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDeleteBenefitRuleUsingPUTForbidden creates a UpdateDeleteBenefitRuleUsingPUTForbidden with default headers values
func NewUpdateDeleteBenefitRuleUsingPUTForbidden() *UpdateDeleteBenefitRuleUsingPUTForbidden {
	return &UpdateDeleteBenefitRuleUsingPUTForbidden{}
}

/*
UpdateDeleteBenefitRuleUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateDeleteBenefitRuleUsingPUTForbidden struct {
}

// IsSuccess returns true when this update delete benefit rule using p u t forbidden response has a 2xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update delete benefit rule using p u t forbidden response has a 3xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update delete benefit rule using p u t forbidden response has a 4xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update delete benefit rule using p u t forbidden response has a 5xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update delete benefit rule using p u t forbidden response a status code equal to that given
func (o *UpdateDeleteBenefitRuleUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update delete benefit rule using p u t forbidden response
func (o *UpdateDeleteBenefitRuleUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateDeleteBenefitRuleUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateDeleteBenefitRule][%d] updateDeleteBenefitRuleUsingPUTForbidden", 403)
}

func (o *UpdateDeleteBenefitRuleUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateDeleteBenefitRule][%d] updateDeleteBenefitRuleUsingPUTForbidden", 403)
}

func (o *UpdateDeleteBenefitRuleUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDeleteBenefitRuleUsingPUTNotFound creates a UpdateDeleteBenefitRuleUsingPUTNotFound with default headers values
func NewUpdateDeleteBenefitRuleUsingPUTNotFound() *UpdateDeleteBenefitRuleUsingPUTNotFound {
	return &UpdateDeleteBenefitRuleUsingPUTNotFound{}
}

/*
UpdateDeleteBenefitRuleUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateDeleteBenefitRuleUsingPUTNotFound struct {
}

// IsSuccess returns true when this update delete benefit rule using p u t not found response has a 2xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update delete benefit rule using p u t not found response has a 3xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update delete benefit rule using p u t not found response has a 4xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update delete benefit rule using p u t not found response has a 5xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update delete benefit rule using p u t not found response a status code equal to that given
func (o *UpdateDeleteBenefitRuleUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update delete benefit rule using p u t not found response
func (o *UpdateDeleteBenefitRuleUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateDeleteBenefitRuleUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateDeleteBenefitRule][%d] updateDeleteBenefitRuleUsingPUTNotFound", 404)
}

func (o *UpdateDeleteBenefitRuleUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateDeleteBenefitRule][%d] updateDeleteBenefitRuleUsingPUTNotFound", 404)
}

func (o *UpdateDeleteBenefitRuleUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDeleteBenefitRuleUsingPUTInternalServerError creates a UpdateDeleteBenefitRuleUsingPUTInternalServerError with default headers values
func NewUpdateDeleteBenefitRuleUsingPUTInternalServerError() *UpdateDeleteBenefitRuleUsingPUTInternalServerError {
	return &UpdateDeleteBenefitRuleUsingPUTInternalServerError{}
}

/*
UpdateDeleteBenefitRuleUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateDeleteBenefitRuleUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update delete benefit rule using p u t internal server error response has a 2xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update delete benefit rule using p u t internal server error response has a 3xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update delete benefit rule using p u t internal server error response has a 4xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update delete benefit rule using p u t internal server error response has a 5xx status code
func (o *UpdateDeleteBenefitRuleUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update delete benefit rule using p u t internal server error response a status code equal to that given
func (o *UpdateDeleteBenefitRuleUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update delete benefit rule using p u t internal server error response
func (o *UpdateDeleteBenefitRuleUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateDeleteBenefitRuleUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateDeleteBenefitRule][%d] updateDeleteBenefitRuleUsingPUTInternalServerError", 500)
}

func (o *UpdateDeleteBenefitRuleUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updateDeleteBenefitRule][%d] updateDeleteBenefitRuleUsingPUTInternalServerError", 500)
}

func (o *UpdateDeleteBenefitRuleUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
