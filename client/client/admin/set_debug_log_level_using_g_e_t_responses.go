// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// SetDebugLogLevelUsingGETReader is a Reader for the SetDebugLogLevelUsingGET structure.
type SetDebugLogLevelUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetDebugLogLevelUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetDebugLogLevelUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSetDebugLogLevelUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSetDebugLogLevelUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSetDebugLogLevelUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSetDebugLogLevelUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/admin/debugLogLevel] setDebugLogLevelUsingGET", response, response.Code())
	}
}

// NewSetDebugLogLevelUsingGETOK creates a SetDebugLogLevelUsingGETOK with default headers values
func NewSetDebugLogLevelUsingGETOK() *SetDebugLogLevelUsingGETOK {
	return &SetDebugLogLevelUsingGETOK{}
}

/*
SetDebugLogLevelUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type SetDebugLogLevelUsingGETOK struct {
	Payload string
}

// IsSuccess returns true when this set debug log level using g e t o k response has a 2xx status code
func (o *SetDebugLogLevelUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this set debug log level using g e t o k response has a 3xx status code
func (o *SetDebugLogLevelUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set debug log level using g e t o k response has a 4xx status code
func (o *SetDebugLogLevelUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this set debug log level using g e t o k response has a 5xx status code
func (o *SetDebugLogLevelUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this set debug log level using g e t o k response a status code equal to that given
func (o *SetDebugLogLevelUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the set debug log level using g e t o k response
func (o *SetDebugLogLevelUsingGETOK) Code() int {
	return 200
}

func (o *SetDebugLogLevelUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/admin/debugLogLevel][%d] setDebugLogLevelUsingGETOK %s", 200, payload)
}

func (o *SetDebugLogLevelUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/admin/debugLogLevel][%d] setDebugLogLevelUsingGETOK %s", 200, payload)
}

func (o *SetDebugLogLevelUsingGETOK) GetPayload() string {
	return o.Payload
}

func (o *SetDebugLogLevelUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetDebugLogLevelUsingGETUnauthorized creates a SetDebugLogLevelUsingGETUnauthorized with default headers values
func NewSetDebugLogLevelUsingGETUnauthorized() *SetDebugLogLevelUsingGETUnauthorized {
	return &SetDebugLogLevelUsingGETUnauthorized{}
}

/*
SetDebugLogLevelUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SetDebugLogLevelUsingGETUnauthorized struct {
}

// IsSuccess returns true when this set debug log level using g e t unauthorized response has a 2xx status code
func (o *SetDebugLogLevelUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set debug log level using g e t unauthorized response has a 3xx status code
func (o *SetDebugLogLevelUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set debug log level using g e t unauthorized response has a 4xx status code
func (o *SetDebugLogLevelUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this set debug log level using g e t unauthorized response has a 5xx status code
func (o *SetDebugLogLevelUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this set debug log level using g e t unauthorized response a status code equal to that given
func (o *SetDebugLogLevelUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the set debug log level using g e t unauthorized response
func (o *SetDebugLogLevelUsingGETUnauthorized) Code() int {
	return 401
}

func (o *SetDebugLogLevelUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/admin/debugLogLevel][%d] setDebugLogLevelUsingGETUnauthorized", 401)
}

func (o *SetDebugLogLevelUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/admin/debugLogLevel][%d] setDebugLogLevelUsingGETUnauthorized", 401)
}

func (o *SetDebugLogLevelUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetDebugLogLevelUsingGETForbidden creates a SetDebugLogLevelUsingGETForbidden with default headers values
func NewSetDebugLogLevelUsingGETForbidden() *SetDebugLogLevelUsingGETForbidden {
	return &SetDebugLogLevelUsingGETForbidden{}
}

/*
SetDebugLogLevelUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SetDebugLogLevelUsingGETForbidden struct {
}

// IsSuccess returns true when this set debug log level using g e t forbidden response has a 2xx status code
func (o *SetDebugLogLevelUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set debug log level using g e t forbidden response has a 3xx status code
func (o *SetDebugLogLevelUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set debug log level using g e t forbidden response has a 4xx status code
func (o *SetDebugLogLevelUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this set debug log level using g e t forbidden response has a 5xx status code
func (o *SetDebugLogLevelUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this set debug log level using g e t forbidden response a status code equal to that given
func (o *SetDebugLogLevelUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the set debug log level using g e t forbidden response
func (o *SetDebugLogLevelUsingGETForbidden) Code() int {
	return 403
}

func (o *SetDebugLogLevelUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/admin/debugLogLevel][%d] setDebugLogLevelUsingGETForbidden", 403)
}

func (o *SetDebugLogLevelUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/admin/debugLogLevel][%d] setDebugLogLevelUsingGETForbidden", 403)
}

func (o *SetDebugLogLevelUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetDebugLogLevelUsingGETNotFound creates a SetDebugLogLevelUsingGETNotFound with default headers values
func NewSetDebugLogLevelUsingGETNotFound() *SetDebugLogLevelUsingGETNotFound {
	return &SetDebugLogLevelUsingGETNotFound{}
}

/*
SetDebugLogLevelUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SetDebugLogLevelUsingGETNotFound struct {
}

// IsSuccess returns true when this set debug log level using g e t not found response has a 2xx status code
func (o *SetDebugLogLevelUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set debug log level using g e t not found response has a 3xx status code
func (o *SetDebugLogLevelUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set debug log level using g e t not found response has a 4xx status code
func (o *SetDebugLogLevelUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this set debug log level using g e t not found response has a 5xx status code
func (o *SetDebugLogLevelUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this set debug log level using g e t not found response a status code equal to that given
func (o *SetDebugLogLevelUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the set debug log level using g e t not found response
func (o *SetDebugLogLevelUsingGETNotFound) Code() int {
	return 404
}

func (o *SetDebugLogLevelUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/admin/debugLogLevel][%d] setDebugLogLevelUsingGETNotFound", 404)
}

func (o *SetDebugLogLevelUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/admin/debugLogLevel][%d] setDebugLogLevelUsingGETNotFound", 404)
}

func (o *SetDebugLogLevelUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetDebugLogLevelUsingGETInternalServerError creates a SetDebugLogLevelUsingGETInternalServerError with default headers values
func NewSetDebugLogLevelUsingGETInternalServerError() *SetDebugLogLevelUsingGETInternalServerError {
	return &SetDebugLogLevelUsingGETInternalServerError{}
}

/*
SetDebugLogLevelUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type SetDebugLogLevelUsingGETInternalServerError struct {
}

// IsSuccess returns true when this set debug log level using g e t internal server error response has a 2xx status code
func (o *SetDebugLogLevelUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set debug log level using g e t internal server error response has a 3xx status code
func (o *SetDebugLogLevelUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set debug log level using g e t internal server error response has a 4xx status code
func (o *SetDebugLogLevelUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this set debug log level using g e t internal server error response has a 5xx status code
func (o *SetDebugLogLevelUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this set debug log level using g e t internal server error response a status code equal to that given
func (o *SetDebugLogLevelUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the set debug log level using g e t internal server error response
func (o *SetDebugLogLevelUsingGETInternalServerError) Code() int {
	return 500
}

func (o *SetDebugLogLevelUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/admin/debugLogLevel][%d] setDebugLogLevelUsingGETInternalServerError", 500)
}

func (o *SetDebugLogLevelUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/admin/debugLogLevel][%d] setDebugLogLevelUsingGETInternalServerError", 500)
}

func (o *SetDebugLogLevelUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
