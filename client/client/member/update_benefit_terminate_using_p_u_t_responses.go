// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateBenefitTerminateUsingPUTReader is a Reader for the UpdateBenefitTerminateUsingPUT structure.
type UpdateBenefitTerminateUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBenefitTerminateUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateBenefitTerminateUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateBenefitTerminateUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateBenefitTerminateUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateBenefitTerminateUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateBenefitTerminateUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateBenefitTerminateUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateBenefitTerminateUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/member/update/benefit/terminate] updateBenefitTerminateUsingPUT", response, response.Code())
	}
}

// NewUpdateBenefitTerminateUsingPUTOK creates a UpdateBenefitTerminateUsingPUTOK with default headers values
func NewUpdateBenefitTerminateUsingPUTOK() *UpdateBenefitTerminateUsingPUTOK {
	return &UpdateBenefitTerminateUsingPUTOK{}
}

/*
UpdateBenefitTerminateUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateBenefitTerminateUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update benefit terminate using p u t o k response has a 2xx status code
func (o *UpdateBenefitTerminateUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update benefit terminate using p u t o k response has a 3xx status code
func (o *UpdateBenefitTerminateUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update benefit terminate using p u t o k response has a 4xx status code
func (o *UpdateBenefitTerminateUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update benefit terminate using p u t o k response has a 5xx status code
func (o *UpdateBenefitTerminateUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update benefit terminate using p u t o k response a status code equal to that given
func (o *UpdateBenefitTerminateUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update benefit terminate using p u t o k response
func (o *UpdateBenefitTerminateUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateBenefitTerminateUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/benefit/terminate][%d] updateBenefitTerminateUsingPUTOK %s", 200, payload)
}

func (o *UpdateBenefitTerminateUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/benefit/terminate][%d] updateBenefitTerminateUsingPUTOK %s", 200, payload)
}

func (o *UpdateBenefitTerminateUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateBenefitTerminateUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBenefitTerminateUsingPUTCreated creates a UpdateBenefitTerminateUsingPUTCreated with default headers values
func NewUpdateBenefitTerminateUsingPUTCreated() *UpdateBenefitTerminateUsingPUTCreated {
	return &UpdateBenefitTerminateUsingPUTCreated{}
}

/*
UpdateBenefitTerminateUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateBenefitTerminateUsingPUTCreated struct {
}

// IsSuccess returns true when this update benefit terminate using p u t created response has a 2xx status code
func (o *UpdateBenefitTerminateUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update benefit terminate using p u t created response has a 3xx status code
func (o *UpdateBenefitTerminateUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update benefit terminate using p u t created response has a 4xx status code
func (o *UpdateBenefitTerminateUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update benefit terminate using p u t created response has a 5xx status code
func (o *UpdateBenefitTerminateUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update benefit terminate using p u t created response a status code equal to that given
func (o *UpdateBenefitTerminateUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update benefit terminate using p u t created response
func (o *UpdateBenefitTerminateUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateBenefitTerminateUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/benefit/terminate][%d] updateBenefitTerminateUsingPUTCreated", 201)
}

func (o *UpdateBenefitTerminateUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/benefit/terminate][%d] updateBenefitTerminateUsingPUTCreated", 201)
}

func (o *UpdateBenefitTerminateUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBenefitTerminateUsingPUTBadRequest creates a UpdateBenefitTerminateUsingPUTBadRequest with default headers values
func NewUpdateBenefitTerminateUsingPUTBadRequest() *UpdateBenefitTerminateUsingPUTBadRequest {
	return &UpdateBenefitTerminateUsingPUTBadRequest{}
}

/*
UpdateBenefitTerminateUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateBenefitTerminateUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update benefit terminate using p u t bad request response has a 2xx status code
func (o *UpdateBenefitTerminateUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update benefit terminate using p u t bad request response has a 3xx status code
func (o *UpdateBenefitTerminateUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update benefit terminate using p u t bad request response has a 4xx status code
func (o *UpdateBenefitTerminateUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update benefit terminate using p u t bad request response has a 5xx status code
func (o *UpdateBenefitTerminateUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update benefit terminate using p u t bad request response a status code equal to that given
func (o *UpdateBenefitTerminateUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update benefit terminate using p u t bad request response
func (o *UpdateBenefitTerminateUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateBenefitTerminateUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/benefit/terminate][%d] updateBenefitTerminateUsingPUTBadRequest", 400)
}

func (o *UpdateBenefitTerminateUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/benefit/terminate][%d] updateBenefitTerminateUsingPUTBadRequest", 400)
}

func (o *UpdateBenefitTerminateUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBenefitTerminateUsingPUTUnauthorized creates a UpdateBenefitTerminateUsingPUTUnauthorized with default headers values
func NewUpdateBenefitTerminateUsingPUTUnauthorized() *UpdateBenefitTerminateUsingPUTUnauthorized {
	return &UpdateBenefitTerminateUsingPUTUnauthorized{}
}

/*
UpdateBenefitTerminateUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateBenefitTerminateUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update benefit terminate using p u t unauthorized response has a 2xx status code
func (o *UpdateBenefitTerminateUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update benefit terminate using p u t unauthorized response has a 3xx status code
func (o *UpdateBenefitTerminateUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update benefit terminate using p u t unauthorized response has a 4xx status code
func (o *UpdateBenefitTerminateUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update benefit terminate using p u t unauthorized response has a 5xx status code
func (o *UpdateBenefitTerminateUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update benefit terminate using p u t unauthorized response a status code equal to that given
func (o *UpdateBenefitTerminateUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update benefit terminate using p u t unauthorized response
func (o *UpdateBenefitTerminateUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateBenefitTerminateUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/benefit/terminate][%d] updateBenefitTerminateUsingPUTUnauthorized", 401)
}

func (o *UpdateBenefitTerminateUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/benefit/terminate][%d] updateBenefitTerminateUsingPUTUnauthorized", 401)
}

func (o *UpdateBenefitTerminateUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBenefitTerminateUsingPUTForbidden creates a UpdateBenefitTerminateUsingPUTForbidden with default headers values
func NewUpdateBenefitTerminateUsingPUTForbidden() *UpdateBenefitTerminateUsingPUTForbidden {
	return &UpdateBenefitTerminateUsingPUTForbidden{}
}

/*
UpdateBenefitTerminateUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateBenefitTerminateUsingPUTForbidden struct {
}

// IsSuccess returns true when this update benefit terminate using p u t forbidden response has a 2xx status code
func (o *UpdateBenefitTerminateUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update benefit terminate using p u t forbidden response has a 3xx status code
func (o *UpdateBenefitTerminateUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update benefit terminate using p u t forbidden response has a 4xx status code
func (o *UpdateBenefitTerminateUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update benefit terminate using p u t forbidden response has a 5xx status code
func (o *UpdateBenefitTerminateUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update benefit terminate using p u t forbidden response a status code equal to that given
func (o *UpdateBenefitTerminateUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update benefit terminate using p u t forbidden response
func (o *UpdateBenefitTerminateUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateBenefitTerminateUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/benefit/terminate][%d] updateBenefitTerminateUsingPUTForbidden", 403)
}

func (o *UpdateBenefitTerminateUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/benefit/terminate][%d] updateBenefitTerminateUsingPUTForbidden", 403)
}

func (o *UpdateBenefitTerminateUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBenefitTerminateUsingPUTNotFound creates a UpdateBenefitTerminateUsingPUTNotFound with default headers values
func NewUpdateBenefitTerminateUsingPUTNotFound() *UpdateBenefitTerminateUsingPUTNotFound {
	return &UpdateBenefitTerminateUsingPUTNotFound{}
}

/*
UpdateBenefitTerminateUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateBenefitTerminateUsingPUTNotFound struct {
}

// IsSuccess returns true when this update benefit terminate using p u t not found response has a 2xx status code
func (o *UpdateBenefitTerminateUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update benefit terminate using p u t not found response has a 3xx status code
func (o *UpdateBenefitTerminateUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update benefit terminate using p u t not found response has a 4xx status code
func (o *UpdateBenefitTerminateUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update benefit terminate using p u t not found response has a 5xx status code
func (o *UpdateBenefitTerminateUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update benefit terminate using p u t not found response a status code equal to that given
func (o *UpdateBenefitTerminateUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update benefit terminate using p u t not found response
func (o *UpdateBenefitTerminateUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateBenefitTerminateUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/benefit/terminate][%d] updateBenefitTerminateUsingPUTNotFound", 404)
}

func (o *UpdateBenefitTerminateUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/benefit/terminate][%d] updateBenefitTerminateUsingPUTNotFound", 404)
}

func (o *UpdateBenefitTerminateUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBenefitTerminateUsingPUTInternalServerError creates a UpdateBenefitTerminateUsingPUTInternalServerError with default headers values
func NewUpdateBenefitTerminateUsingPUTInternalServerError() *UpdateBenefitTerminateUsingPUTInternalServerError {
	return &UpdateBenefitTerminateUsingPUTInternalServerError{}
}

/*
UpdateBenefitTerminateUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateBenefitTerminateUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update benefit terminate using p u t internal server error response has a 2xx status code
func (o *UpdateBenefitTerminateUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update benefit terminate using p u t internal server error response has a 3xx status code
func (o *UpdateBenefitTerminateUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update benefit terminate using p u t internal server error response has a 4xx status code
func (o *UpdateBenefitTerminateUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update benefit terminate using p u t internal server error response has a 5xx status code
func (o *UpdateBenefitTerminateUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update benefit terminate using p u t internal server error response a status code equal to that given
func (o *UpdateBenefitTerminateUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update benefit terminate using p u t internal server error response
func (o *UpdateBenefitTerminateUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateBenefitTerminateUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/benefit/terminate][%d] updateBenefitTerminateUsingPUTInternalServerError", 500)
}

func (o *UpdateBenefitTerminateUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/benefit/terminate][%d] updateBenefitTerminateUsingPUTInternalServerError", 500)
}

func (o *UpdateBenefitTerminateUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
