// Code generated by go-swagger; DO NOT EDIT.

package sunbeam

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetMemberEligibilityUsingGETReader is a Reader for the GetMemberEligibilityUsingGET structure.
type GetMemberEligibilityUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMemberEligibilityUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMemberEligibilityUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetMemberEligibilityUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetMemberEligibilityUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMemberEligibilityUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMemberEligibilityUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetMemberEligibilityUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/sunbeam/memberElig] getMemberEligibilityUsingGET", response, response.Code())
	}
}

// NewGetMemberEligibilityUsingGETOK creates a GetMemberEligibilityUsingGETOK with default headers values
func NewGetMemberEligibilityUsingGETOK() *GetMemberEligibilityUsingGETOK {
	return &GetMemberEligibilityUsingGETOK{}
}

/*
GetMemberEligibilityUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetMemberEligibilityUsingGETOK struct {
	Payload *models.ResponseWrapperListMbrEligDataDTO
}

// IsSuccess returns true when this get member eligibility using g e t o k response has a 2xx status code
func (o *GetMemberEligibilityUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get member eligibility using g e t o k response has a 3xx status code
func (o *GetMemberEligibilityUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member eligibility using g e t o k response has a 4xx status code
func (o *GetMemberEligibilityUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get member eligibility using g e t o k response has a 5xx status code
func (o *GetMemberEligibilityUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get member eligibility using g e t o k response a status code equal to that given
func (o *GetMemberEligibilityUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get member eligibility using g e t o k response
func (o *GetMemberEligibilityUsingGETOK) Code() int {
	return 200
}

func (o *GetMemberEligibilityUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/memberElig][%d] getMemberEligibilityUsingGETOK %s", 200, payload)
}

func (o *GetMemberEligibilityUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/memberElig][%d] getMemberEligibilityUsingGETOK %s", 200, payload)
}

func (o *GetMemberEligibilityUsingGETOK) GetPayload() *models.ResponseWrapperListMbrEligDataDTO {
	return o.Payload
}

func (o *GetMemberEligibilityUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperListMbrEligDataDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMemberEligibilityUsingGETBadRequest creates a GetMemberEligibilityUsingGETBadRequest with default headers values
func NewGetMemberEligibilityUsingGETBadRequest() *GetMemberEligibilityUsingGETBadRequest {
	return &GetMemberEligibilityUsingGETBadRequest{}
}

/*
GetMemberEligibilityUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetMemberEligibilityUsingGETBadRequest struct {
}

// IsSuccess returns true when this get member eligibility using g e t bad request response has a 2xx status code
func (o *GetMemberEligibilityUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member eligibility using g e t bad request response has a 3xx status code
func (o *GetMemberEligibilityUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member eligibility using g e t bad request response has a 4xx status code
func (o *GetMemberEligibilityUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member eligibility using g e t bad request response has a 5xx status code
func (o *GetMemberEligibilityUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get member eligibility using g e t bad request response a status code equal to that given
func (o *GetMemberEligibilityUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get member eligibility using g e t bad request response
func (o *GetMemberEligibilityUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetMemberEligibilityUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/memberElig][%d] getMemberEligibilityUsingGETBadRequest", 400)
}

func (o *GetMemberEligibilityUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/memberElig][%d] getMemberEligibilityUsingGETBadRequest", 400)
}

func (o *GetMemberEligibilityUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberEligibilityUsingGETUnauthorized creates a GetMemberEligibilityUsingGETUnauthorized with default headers values
func NewGetMemberEligibilityUsingGETUnauthorized() *GetMemberEligibilityUsingGETUnauthorized {
	return &GetMemberEligibilityUsingGETUnauthorized{}
}

/*
GetMemberEligibilityUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetMemberEligibilityUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get member eligibility using g e t unauthorized response has a 2xx status code
func (o *GetMemberEligibilityUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member eligibility using g e t unauthorized response has a 3xx status code
func (o *GetMemberEligibilityUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member eligibility using g e t unauthorized response has a 4xx status code
func (o *GetMemberEligibilityUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member eligibility using g e t unauthorized response has a 5xx status code
func (o *GetMemberEligibilityUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get member eligibility using g e t unauthorized response a status code equal to that given
func (o *GetMemberEligibilityUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get member eligibility using g e t unauthorized response
func (o *GetMemberEligibilityUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetMemberEligibilityUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/memberElig][%d] getMemberEligibilityUsingGETUnauthorized", 401)
}

func (o *GetMemberEligibilityUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/memberElig][%d] getMemberEligibilityUsingGETUnauthorized", 401)
}

func (o *GetMemberEligibilityUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberEligibilityUsingGETForbidden creates a GetMemberEligibilityUsingGETForbidden with default headers values
func NewGetMemberEligibilityUsingGETForbidden() *GetMemberEligibilityUsingGETForbidden {
	return &GetMemberEligibilityUsingGETForbidden{}
}

/*
GetMemberEligibilityUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetMemberEligibilityUsingGETForbidden struct {
}

// IsSuccess returns true when this get member eligibility using g e t forbidden response has a 2xx status code
func (o *GetMemberEligibilityUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member eligibility using g e t forbidden response has a 3xx status code
func (o *GetMemberEligibilityUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member eligibility using g e t forbidden response has a 4xx status code
func (o *GetMemberEligibilityUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member eligibility using g e t forbidden response has a 5xx status code
func (o *GetMemberEligibilityUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get member eligibility using g e t forbidden response a status code equal to that given
func (o *GetMemberEligibilityUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get member eligibility using g e t forbidden response
func (o *GetMemberEligibilityUsingGETForbidden) Code() int {
	return 403
}

func (o *GetMemberEligibilityUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/memberElig][%d] getMemberEligibilityUsingGETForbidden", 403)
}

func (o *GetMemberEligibilityUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/memberElig][%d] getMemberEligibilityUsingGETForbidden", 403)
}

func (o *GetMemberEligibilityUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberEligibilityUsingGETNotFound creates a GetMemberEligibilityUsingGETNotFound with default headers values
func NewGetMemberEligibilityUsingGETNotFound() *GetMemberEligibilityUsingGETNotFound {
	return &GetMemberEligibilityUsingGETNotFound{}
}

/*
GetMemberEligibilityUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetMemberEligibilityUsingGETNotFound struct {
}

// IsSuccess returns true when this get member eligibility using g e t not found response has a 2xx status code
func (o *GetMemberEligibilityUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member eligibility using g e t not found response has a 3xx status code
func (o *GetMemberEligibilityUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member eligibility using g e t not found response has a 4xx status code
func (o *GetMemberEligibilityUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member eligibility using g e t not found response has a 5xx status code
func (o *GetMemberEligibilityUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get member eligibility using g e t not found response a status code equal to that given
func (o *GetMemberEligibilityUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get member eligibility using g e t not found response
func (o *GetMemberEligibilityUsingGETNotFound) Code() int {
	return 404
}

func (o *GetMemberEligibilityUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/memberElig][%d] getMemberEligibilityUsingGETNotFound", 404)
}

func (o *GetMemberEligibilityUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/memberElig][%d] getMemberEligibilityUsingGETNotFound", 404)
}

func (o *GetMemberEligibilityUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberEligibilityUsingGETInternalServerError creates a GetMemberEligibilityUsingGETInternalServerError with default headers values
func NewGetMemberEligibilityUsingGETInternalServerError() *GetMemberEligibilityUsingGETInternalServerError {
	return &GetMemberEligibilityUsingGETInternalServerError{}
}

/*
GetMemberEligibilityUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetMemberEligibilityUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get member eligibility using g e t internal server error response has a 2xx status code
func (o *GetMemberEligibilityUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member eligibility using g e t internal server error response has a 3xx status code
func (o *GetMemberEligibilityUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member eligibility using g e t internal server error response has a 4xx status code
func (o *GetMemberEligibilityUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get member eligibility using g e t internal server error response has a 5xx status code
func (o *GetMemberEligibilityUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get member eligibility using g e t internal server error response a status code equal to that given
func (o *GetMemberEligibilityUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get member eligibility using g e t internal server error response
func (o *GetMemberEligibilityUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetMemberEligibilityUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/memberElig][%d] getMemberEligibilityUsingGETInternalServerError", 500)
}

func (o *GetMemberEligibilityUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/memberElig][%d] getMemberEligibilityUsingGETInternalServerError", 500)
}

func (o *GetMemberEligibilityUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
