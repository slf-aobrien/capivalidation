// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// EnrollMemberUsingPOSTReader is a Reader for the EnrollMemberUsingPOST structure.
type EnrollMemberUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EnrollMemberUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEnrollMemberUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewEnrollMemberUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEnrollMemberUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewEnrollMemberUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEnrollMemberUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEnrollMemberUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEnrollMemberUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/member/enrollMember] enrollMemberUsingPOST", response, response.Code())
	}
}

// NewEnrollMemberUsingPOSTOK creates a EnrollMemberUsingPOSTOK with default headers values
func NewEnrollMemberUsingPOSTOK() *EnrollMemberUsingPOSTOK {
	return &EnrollMemberUsingPOSTOK{}
}

/*
EnrollMemberUsingPOSTOK describes a response with status code 200, with default header values.

Success
*/
type EnrollMemberUsingPOSTOK struct {
	Payload *models.ResponseWrapperMemberDTO
}

// IsSuccess returns true when this enroll member using p o s t o k response has a 2xx status code
func (o *EnrollMemberUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this enroll member using p o s t o k response has a 3xx status code
func (o *EnrollMemberUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this enroll member using p o s t o k response has a 4xx status code
func (o *EnrollMemberUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this enroll member using p o s t o k response has a 5xx status code
func (o *EnrollMemberUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this enroll member using p o s t o k response a status code equal to that given
func (o *EnrollMemberUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the enroll member using p o s t o k response
func (o *EnrollMemberUsingPOSTOK) Code() int {
	return 200
}

func (o *EnrollMemberUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/member/enrollMember][%d] enrollMemberUsingPOSTOK %s", 200, payload)
}

func (o *EnrollMemberUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/member/enrollMember][%d] enrollMemberUsingPOSTOK %s", 200, payload)
}

func (o *EnrollMemberUsingPOSTOK) GetPayload() *models.ResponseWrapperMemberDTO {
	return o.Payload
}

func (o *EnrollMemberUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperMemberDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEnrollMemberUsingPOSTCreated creates a EnrollMemberUsingPOSTCreated with default headers values
func NewEnrollMemberUsingPOSTCreated() *EnrollMemberUsingPOSTCreated {
	return &EnrollMemberUsingPOSTCreated{}
}

/*
EnrollMemberUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type EnrollMemberUsingPOSTCreated struct {
}

// IsSuccess returns true when this enroll member using p o s t created response has a 2xx status code
func (o *EnrollMemberUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this enroll member using p o s t created response has a 3xx status code
func (o *EnrollMemberUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this enroll member using p o s t created response has a 4xx status code
func (o *EnrollMemberUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this enroll member using p o s t created response has a 5xx status code
func (o *EnrollMemberUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this enroll member using p o s t created response a status code equal to that given
func (o *EnrollMemberUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the enroll member using p o s t created response
func (o *EnrollMemberUsingPOSTCreated) Code() int {
	return 201
}

func (o *EnrollMemberUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/enrollMember][%d] enrollMemberUsingPOSTCreated", 201)
}

func (o *EnrollMemberUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/enrollMember][%d] enrollMemberUsingPOSTCreated", 201)
}

func (o *EnrollMemberUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEnrollMemberUsingPOSTBadRequest creates a EnrollMemberUsingPOSTBadRequest with default headers values
func NewEnrollMemberUsingPOSTBadRequest() *EnrollMemberUsingPOSTBadRequest {
	return &EnrollMemberUsingPOSTBadRequest{}
}

/*
EnrollMemberUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type EnrollMemberUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this enroll member using p o s t bad request response has a 2xx status code
func (o *EnrollMemberUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this enroll member using p o s t bad request response has a 3xx status code
func (o *EnrollMemberUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this enroll member using p o s t bad request response has a 4xx status code
func (o *EnrollMemberUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this enroll member using p o s t bad request response has a 5xx status code
func (o *EnrollMemberUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this enroll member using p o s t bad request response a status code equal to that given
func (o *EnrollMemberUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the enroll member using p o s t bad request response
func (o *EnrollMemberUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *EnrollMemberUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/enrollMember][%d] enrollMemberUsingPOSTBadRequest", 400)
}

func (o *EnrollMemberUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/enrollMember][%d] enrollMemberUsingPOSTBadRequest", 400)
}

func (o *EnrollMemberUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEnrollMemberUsingPOSTUnauthorized creates a EnrollMemberUsingPOSTUnauthorized with default headers values
func NewEnrollMemberUsingPOSTUnauthorized() *EnrollMemberUsingPOSTUnauthorized {
	return &EnrollMemberUsingPOSTUnauthorized{}
}

/*
EnrollMemberUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type EnrollMemberUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this enroll member using p o s t unauthorized response has a 2xx status code
func (o *EnrollMemberUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this enroll member using p o s t unauthorized response has a 3xx status code
func (o *EnrollMemberUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this enroll member using p o s t unauthorized response has a 4xx status code
func (o *EnrollMemberUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this enroll member using p o s t unauthorized response has a 5xx status code
func (o *EnrollMemberUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this enroll member using p o s t unauthorized response a status code equal to that given
func (o *EnrollMemberUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the enroll member using p o s t unauthorized response
func (o *EnrollMemberUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *EnrollMemberUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/enrollMember][%d] enrollMemberUsingPOSTUnauthorized", 401)
}

func (o *EnrollMemberUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/enrollMember][%d] enrollMemberUsingPOSTUnauthorized", 401)
}

func (o *EnrollMemberUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEnrollMemberUsingPOSTForbidden creates a EnrollMemberUsingPOSTForbidden with default headers values
func NewEnrollMemberUsingPOSTForbidden() *EnrollMemberUsingPOSTForbidden {
	return &EnrollMemberUsingPOSTForbidden{}
}

/*
EnrollMemberUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type EnrollMemberUsingPOSTForbidden struct {
}

// IsSuccess returns true when this enroll member using p o s t forbidden response has a 2xx status code
func (o *EnrollMemberUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this enroll member using p o s t forbidden response has a 3xx status code
func (o *EnrollMemberUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this enroll member using p o s t forbidden response has a 4xx status code
func (o *EnrollMemberUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this enroll member using p o s t forbidden response has a 5xx status code
func (o *EnrollMemberUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this enroll member using p o s t forbidden response a status code equal to that given
func (o *EnrollMemberUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the enroll member using p o s t forbidden response
func (o *EnrollMemberUsingPOSTForbidden) Code() int {
	return 403
}

func (o *EnrollMemberUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/enrollMember][%d] enrollMemberUsingPOSTForbidden", 403)
}

func (o *EnrollMemberUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/enrollMember][%d] enrollMemberUsingPOSTForbidden", 403)
}

func (o *EnrollMemberUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEnrollMemberUsingPOSTNotFound creates a EnrollMemberUsingPOSTNotFound with default headers values
func NewEnrollMemberUsingPOSTNotFound() *EnrollMemberUsingPOSTNotFound {
	return &EnrollMemberUsingPOSTNotFound{}
}

/*
EnrollMemberUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type EnrollMemberUsingPOSTNotFound struct {
}

// IsSuccess returns true when this enroll member using p o s t not found response has a 2xx status code
func (o *EnrollMemberUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this enroll member using p o s t not found response has a 3xx status code
func (o *EnrollMemberUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this enroll member using p o s t not found response has a 4xx status code
func (o *EnrollMemberUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this enroll member using p o s t not found response has a 5xx status code
func (o *EnrollMemberUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this enroll member using p o s t not found response a status code equal to that given
func (o *EnrollMemberUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the enroll member using p o s t not found response
func (o *EnrollMemberUsingPOSTNotFound) Code() int {
	return 404
}

func (o *EnrollMemberUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/enrollMember][%d] enrollMemberUsingPOSTNotFound", 404)
}

func (o *EnrollMemberUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/enrollMember][%d] enrollMemberUsingPOSTNotFound", 404)
}

func (o *EnrollMemberUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEnrollMemberUsingPOSTInternalServerError creates a EnrollMemberUsingPOSTInternalServerError with default headers values
func NewEnrollMemberUsingPOSTInternalServerError() *EnrollMemberUsingPOSTInternalServerError {
	return &EnrollMemberUsingPOSTInternalServerError{}
}

/*
EnrollMemberUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type EnrollMemberUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this enroll member using p o s t internal server error response has a 2xx status code
func (o *EnrollMemberUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this enroll member using p o s t internal server error response has a 3xx status code
func (o *EnrollMemberUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this enroll member using p o s t internal server error response has a 4xx status code
func (o *EnrollMemberUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this enroll member using p o s t internal server error response has a 5xx status code
func (o *EnrollMemberUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this enroll member using p o s t internal server error response a status code equal to that given
func (o *EnrollMemberUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the enroll member using p o s t internal server error response
func (o *EnrollMemberUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *EnrollMemberUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/enrollMember][%d] enrollMemberUsingPOSTInternalServerError", 500)
}

func (o *EnrollMemberUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/member/enrollMember][%d] enrollMemberUsingPOSTInternalServerError", 500)
}

func (o *EnrollMemberUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
