// Code generated by go-swagger; DO NOT EDIT.

package dependent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateNameSuffixUsingPUTReader is a Reader for the UpdateNameSuffixUsingPUT structure.
type UpdateNameSuffixUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateNameSuffixUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateNameSuffixUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateNameSuffixUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateNameSuffixUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateNameSuffixUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateNameSuffixUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateNameSuffixUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateNameSuffixUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/dependent/update/nameSuffix] updateNameSuffixUsingPUT", response, response.Code())
	}
}

// NewUpdateNameSuffixUsingPUTOK creates a UpdateNameSuffixUsingPUTOK with default headers values
func NewUpdateNameSuffixUsingPUTOK() *UpdateNameSuffixUsingPUTOK {
	return &UpdateNameSuffixUsingPUTOK{}
}

/*
UpdateNameSuffixUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateNameSuffixUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update name suffix using p u t o k response has a 2xx status code
func (o *UpdateNameSuffixUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update name suffix using p u t o k response has a 3xx status code
func (o *UpdateNameSuffixUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update name suffix using p u t o k response has a 4xx status code
func (o *UpdateNameSuffixUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update name suffix using p u t o k response has a 5xx status code
func (o *UpdateNameSuffixUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update name suffix using p u t o k response a status code equal to that given
func (o *UpdateNameSuffixUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update name suffix using p u t o k response
func (o *UpdateNameSuffixUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateNameSuffixUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/nameSuffix][%d] updateNameSuffixUsingPUTOK %s", 200, payload)
}

func (o *UpdateNameSuffixUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/nameSuffix][%d] updateNameSuffixUsingPUTOK %s", 200, payload)
}

func (o *UpdateNameSuffixUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateNameSuffixUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateNameSuffixUsingPUTCreated creates a UpdateNameSuffixUsingPUTCreated with default headers values
func NewUpdateNameSuffixUsingPUTCreated() *UpdateNameSuffixUsingPUTCreated {
	return &UpdateNameSuffixUsingPUTCreated{}
}

/*
UpdateNameSuffixUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateNameSuffixUsingPUTCreated struct {
}

// IsSuccess returns true when this update name suffix using p u t created response has a 2xx status code
func (o *UpdateNameSuffixUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update name suffix using p u t created response has a 3xx status code
func (o *UpdateNameSuffixUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update name suffix using p u t created response has a 4xx status code
func (o *UpdateNameSuffixUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update name suffix using p u t created response has a 5xx status code
func (o *UpdateNameSuffixUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update name suffix using p u t created response a status code equal to that given
func (o *UpdateNameSuffixUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update name suffix using p u t created response
func (o *UpdateNameSuffixUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateNameSuffixUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/nameSuffix][%d] updateNameSuffixUsingPUTCreated", 201)
}

func (o *UpdateNameSuffixUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/nameSuffix][%d] updateNameSuffixUsingPUTCreated", 201)
}

func (o *UpdateNameSuffixUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNameSuffixUsingPUTBadRequest creates a UpdateNameSuffixUsingPUTBadRequest with default headers values
func NewUpdateNameSuffixUsingPUTBadRequest() *UpdateNameSuffixUsingPUTBadRequest {
	return &UpdateNameSuffixUsingPUTBadRequest{}
}

/*
UpdateNameSuffixUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateNameSuffixUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update name suffix using p u t bad request response has a 2xx status code
func (o *UpdateNameSuffixUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update name suffix using p u t bad request response has a 3xx status code
func (o *UpdateNameSuffixUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update name suffix using p u t bad request response has a 4xx status code
func (o *UpdateNameSuffixUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update name suffix using p u t bad request response has a 5xx status code
func (o *UpdateNameSuffixUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update name suffix using p u t bad request response a status code equal to that given
func (o *UpdateNameSuffixUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update name suffix using p u t bad request response
func (o *UpdateNameSuffixUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateNameSuffixUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/nameSuffix][%d] updateNameSuffixUsingPUTBadRequest", 400)
}

func (o *UpdateNameSuffixUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/nameSuffix][%d] updateNameSuffixUsingPUTBadRequest", 400)
}

func (o *UpdateNameSuffixUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNameSuffixUsingPUTUnauthorized creates a UpdateNameSuffixUsingPUTUnauthorized with default headers values
func NewUpdateNameSuffixUsingPUTUnauthorized() *UpdateNameSuffixUsingPUTUnauthorized {
	return &UpdateNameSuffixUsingPUTUnauthorized{}
}

/*
UpdateNameSuffixUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateNameSuffixUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update name suffix using p u t unauthorized response has a 2xx status code
func (o *UpdateNameSuffixUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update name suffix using p u t unauthorized response has a 3xx status code
func (o *UpdateNameSuffixUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update name suffix using p u t unauthorized response has a 4xx status code
func (o *UpdateNameSuffixUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update name suffix using p u t unauthorized response has a 5xx status code
func (o *UpdateNameSuffixUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update name suffix using p u t unauthorized response a status code equal to that given
func (o *UpdateNameSuffixUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update name suffix using p u t unauthorized response
func (o *UpdateNameSuffixUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateNameSuffixUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/nameSuffix][%d] updateNameSuffixUsingPUTUnauthorized", 401)
}

func (o *UpdateNameSuffixUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/nameSuffix][%d] updateNameSuffixUsingPUTUnauthorized", 401)
}

func (o *UpdateNameSuffixUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNameSuffixUsingPUTForbidden creates a UpdateNameSuffixUsingPUTForbidden with default headers values
func NewUpdateNameSuffixUsingPUTForbidden() *UpdateNameSuffixUsingPUTForbidden {
	return &UpdateNameSuffixUsingPUTForbidden{}
}

/*
UpdateNameSuffixUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateNameSuffixUsingPUTForbidden struct {
}

// IsSuccess returns true when this update name suffix using p u t forbidden response has a 2xx status code
func (o *UpdateNameSuffixUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update name suffix using p u t forbidden response has a 3xx status code
func (o *UpdateNameSuffixUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update name suffix using p u t forbidden response has a 4xx status code
func (o *UpdateNameSuffixUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update name suffix using p u t forbidden response has a 5xx status code
func (o *UpdateNameSuffixUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update name suffix using p u t forbidden response a status code equal to that given
func (o *UpdateNameSuffixUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update name suffix using p u t forbidden response
func (o *UpdateNameSuffixUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateNameSuffixUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/nameSuffix][%d] updateNameSuffixUsingPUTForbidden", 403)
}

func (o *UpdateNameSuffixUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/nameSuffix][%d] updateNameSuffixUsingPUTForbidden", 403)
}

func (o *UpdateNameSuffixUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNameSuffixUsingPUTNotFound creates a UpdateNameSuffixUsingPUTNotFound with default headers values
func NewUpdateNameSuffixUsingPUTNotFound() *UpdateNameSuffixUsingPUTNotFound {
	return &UpdateNameSuffixUsingPUTNotFound{}
}

/*
UpdateNameSuffixUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateNameSuffixUsingPUTNotFound struct {
}

// IsSuccess returns true when this update name suffix using p u t not found response has a 2xx status code
func (o *UpdateNameSuffixUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update name suffix using p u t not found response has a 3xx status code
func (o *UpdateNameSuffixUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update name suffix using p u t not found response has a 4xx status code
func (o *UpdateNameSuffixUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update name suffix using p u t not found response has a 5xx status code
func (o *UpdateNameSuffixUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update name suffix using p u t not found response a status code equal to that given
func (o *UpdateNameSuffixUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update name suffix using p u t not found response
func (o *UpdateNameSuffixUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateNameSuffixUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/nameSuffix][%d] updateNameSuffixUsingPUTNotFound", 404)
}

func (o *UpdateNameSuffixUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/nameSuffix][%d] updateNameSuffixUsingPUTNotFound", 404)
}

func (o *UpdateNameSuffixUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNameSuffixUsingPUTInternalServerError creates a UpdateNameSuffixUsingPUTInternalServerError with default headers values
func NewUpdateNameSuffixUsingPUTInternalServerError() *UpdateNameSuffixUsingPUTInternalServerError {
	return &UpdateNameSuffixUsingPUTInternalServerError{}
}

/*
UpdateNameSuffixUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateNameSuffixUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update name suffix using p u t internal server error response has a 2xx status code
func (o *UpdateNameSuffixUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update name suffix using p u t internal server error response has a 3xx status code
func (o *UpdateNameSuffixUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update name suffix using p u t internal server error response has a 4xx status code
func (o *UpdateNameSuffixUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update name suffix using p u t internal server error response has a 5xx status code
func (o *UpdateNameSuffixUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update name suffix using p u t internal server error response a status code equal to that given
func (o *UpdateNameSuffixUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update name suffix using p u t internal server error response
func (o *UpdateNameSuffixUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateNameSuffixUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/nameSuffix][%d] updateNameSuffixUsingPUTInternalServerError", 500)
}

func (o *UpdateNameSuffixUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/nameSuffix][%d] updateNameSuffixUsingPUTInternalServerError", 500)
}

func (o *UpdateNameSuffixUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
