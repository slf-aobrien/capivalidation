// Code generated by go-swagger; DO NOT EDIT.

package focus

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetMemberAddressesUsingGETReader is a Reader for the GetMemberAddressesUsingGET structure.
type GetMemberAddressesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMemberAddressesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMemberAddressesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetMemberAddressesUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetMemberAddressesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMemberAddressesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMemberAddressesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetMemberAddressesUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/focus/member/addresses] getMemberAddressesUsingGET", response, response.Code())
	}
}

// NewGetMemberAddressesUsingGETOK creates a GetMemberAddressesUsingGETOK with default headers values
func NewGetMemberAddressesUsingGETOK() *GetMemberAddressesUsingGETOK {
	return &GetMemberAddressesUsingGETOK{}
}

/*
GetMemberAddressesUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetMemberAddressesUsingGETOK struct {
	Payload *models.ResponseWrapperPersonContactDTO
}

// IsSuccess returns true when this get member addresses using g e t o k response has a 2xx status code
func (o *GetMemberAddressesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get member addresses using g e t o k response has a 3xx status code
func (o *GetMemberAddressesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member addresses using g e t o k response has a 4xx status code
func (o *GetMemberAddressesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get member addresses using g e t o k response has a 5xx status code
func (o *GetMemberAddressesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get member addresses using g e t o k response a status code equal to that given
func (o *GetMemberAddressesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get member addresses using g e t o k response
func (o *GetMemberAddressesUsingGETOK) Code() int {
	return 200
}

func (o *GetMemberAddressesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/focus/member/addresses][%d] getMemberAddressesUsingGETOK %s", 200, payload)
}

func (o *GetMemberAddressesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/focus/member/addresses][%d] getMemberAddressesUsingGETOK %s", 200, payload)
}

func (o *GetMemberAddressesUsingGETOK) GetPayload() *models.ResponseWrapperPersonContactDTO {
	return o.Payload
}

func (o *GetMemberAddressesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperPersonContactDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMemberAddressesUsingGETBadRequest creates a GetMemberAddressesUsingGETBadRequest with default headers values
func NewGetMemberAddressesUsingGETBadRequest() *GetMemberAddressesUsingGETBadRequest {
	return &GetMemberAddressesUsingGETBadRequest{}
}

/*
GetMemberAddressesUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetMemberAddressesUsingGETBadRequest struct {
}

// IsSuccess returns true when this get member addresses using g e t bad request response has a 2xx status code
func (o *GetMemberAddressesUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member addresses using g e t bad request response has a 3xx status code
func (o *GetMemberAddressesUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member addresses using g e t bad request response has a 4xx status code
func (o *GetMemberAddressesUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member addresses using g e t bad request response has a 5xx status code
func (o *GetMemberAddressesUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get member addresses using g e t bad request response a status code equal to that given
func (o *GetMemberAddressesUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get member addresses using g e t bad request response
func (o *GetMemberAddressesUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetMemberAddressesUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/focus/member/addresses][%d] getMemberAddressesUsingGETBadRequest", 400)
}

func (o *GetMemberAddressesUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/focus/member/addresses][%d] getMemberAddressesUsingGETBadRequest", 400)
}

func (o *GetMemberAddressesUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberAddressesUsingGETUnauthorized creates a GetMemberAddressesUsingGETUnauthorized with default headers values
func NewGetMemberAddressesUsingGETUnauthorized() *GetMemberAddressesUsingGETUnauthorized {
	return &GetMemberAddressesUsingGETUnauthorized{}
}

/*
GetMemberAddressesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetMemberAddressesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get member addresses using g e t unauthorized response has a 2xx status code
func (o *GetMemberAddressesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member addresses using g e t unauthorized response has a 3xx status code
func (o *GetMemberAddressesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member addresses using g e t unauthorized response has a 4xx status code
func (o *GetMemberAddressesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member addresses using g e t unauthorized response has a 5xx status code
func (o *GetMemberAddressesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get member addresses using g e t unauthorized response a status code equal to that given
func (o *GetMemberAddressesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get member addresses using g e t unauthorized response
func (o *GetMemberAddressesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetMemberAddressesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/focus/member/addresses][%d] getMemberAddressesUsingGETUnauthorized", 401)
}

func (o *GetMemberAddressesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/focus/member/addresses][%d] getMemberAddressesUsingGETUnauthorized", 401)
}

func (o *GetMemberAddressesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberAddressesUsingGETForbidden creates a GetMemberAddressesUsingGETForbidden with default headers values
func NewGetMemberAddressesUsingGETForbidden() *GetMemberAddressesUsingGETForbidden {
	return &GetMemberAddressesUsingGETForbidden{}
}

/*
GetMemberAddressesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetMemberAddressesUsingGETForbidden struct {
}

// IsSuccess returns true when this get member addresses using g e t forbidden response has a 2xx status code
func (o *GetMemberAddressesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member addresses using g e t forbidden response has a 3xx status code
func (o *GetMemberAddressesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member addresses using g e t forbidden response has a 4xx status code
func (o *GetMemberAddressesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member addresses using g e t forbidden response has a 5xx status code
func (o *GetMemberAddressesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get member addresses using g e t forbidden response a status code equal to that given
func (o *GetMemberAddressesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get member addresses using g e t forbidden response
func (o *GetMemberAddressesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetMemberAddressesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/focus/member/addresses][%d] getMemberAddressesUsingGETForbidden", 403)
}

func (o *GetMemberAddressesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/focus/member/addresses][%d] getMemberAddressesUsingGETForbidden", 403)
}

func (o *GetMemberAddressesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberAddressesUsingGETNotFound creates a GetMemberAddressesUsingGETNotFound with default headers values
func NewGetMemberAddressesUsingGETNotFound() *GetMemberAddressesUsingGETNotFound {
	return &GetMemberAddressesUsingGETNotFound{}
}

/*
GetMemberAddressesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetMemberAddressesUsingGETNotFound struct {
}

// IsSuccess returns true when this get member addresses using g e t not found response has a 2xx status code
func (o *GetMemberAddressesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member addresses using g e t not found response has a 3xx status code
func (o *GetMemberAddressesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member addresses using g e t not found response has a 4xx status code
func (o *GetMemberAddressesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member addresses using g e t not found response has a 5xx status code
func (o *GetMemberAddressesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get member addresses using g e t not found response a status code equal to that given
func (o *GetMemberAddressesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get member addresses using g e t not found response
func (o *GetMemberAddressesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetMemberAddressesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/focus/member/addresses][%d] getMemberAddressesUsingGETNotFound", 404)
}

func (o *GetMemberAddressesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/focus/member/addresses][%d] getMemberAddressesUsingGETNotFound", 404)
}

func (o *GetMemberAddressesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberAddressesUsingGETInternalServerError creates a GetMemberAddressesUsingGETInternalServerError with default headers values
func NewGetMemberAddressesUsingGETInternalServerError() *GetMemberAddressesUsingGETInternalServerError {
	return &GetMemberAddressesUsingGETInternalServerError{}
}

/*
GetMemberAddressesUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetMemberAddressesUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get member addresses using g e t internal server error response has a 2xx status code
func (o *GetMemberAddressesUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member addresses using g e t internal server error response has a 3xx status code
func (o *GetMemberAddressesUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member addresses using g e t internal server error response has a 4xx status code
func (o *GetMemberAddressesUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get member addresses using g e t internal server error response has a 5xx status code
func (o *GetMemberAddressesUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get member addresses using g e t internal server error response a status code equal to that given
func (o *GetMemberAddressesUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get member addresses using g e t internal server error response
func (o *GetMemberAddressesUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetMemberAddressesUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/focus/member/addresses][%d] getMemberAddressesUsingGETInternalServerError", 500)
}

func (o *GetMemberAddressesUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/focus/member/addresses][%d] getMemberAddressesUsingGETInternalServerError", 500)
}

func (o *GetMemberAddressesUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
