// Code generated by go-swagger; DO NOT EDIT.

package agent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateAgentUsingPUTReader is a Reader for the UpdateAgentUsingPUT structure.
type UpdateAgentUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAgentUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateAgentUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateAgentUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateAgentUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateAgentUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateAgentUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateAgentUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateAgentUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/agent] updateAgentUsingPUT", response, response.Code())
	}
}

// NewUpdateAgentUsingPUTOK creates a UpdateAgentUsingPUTOK with default headers values
func NewUpdateAgentUsingPUTOK() *UpdateAgentUsingPUTOK {
	return &UpdateAgentUsingPUTOK{}
}

/*
UpdateAgentUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateAgentUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update agent using p u t o k response has a 2xx status code
func (o *UpdateAgentUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update agent using p u t o k response has a 3xx status code
func (o *UpdateAgentUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update agent using p u t o k response has a 4xx status code
func (o *UpdateAgentUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update agent using p u t o k response has a 5xx status code
func (o *UpdateAgentUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update agent using p u t o k response a status code equal to that given
func (o *UpdateAgentUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update agent using p u t o k response
func (o *UpdateAgentUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateAgentUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/agent][%d] updateAgentUsingPUTOK %s", 200, payload)
}

func (o *UpdateAgentUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/agent][%d] updateAgentUsingPUTOK %s", 200, payload)
}

func (o *UpdateAgentUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateAgentUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAgentUsingPUTCreated creates a UpdateAgentUsingPUTCreated with default headers values
func NewUpdateAgentUsingPUTCreated() *UpdateAgentUsingPUTCreated {
	return &UpdateAgentUsingPUTCreated{}
}

/*
UpdateAgentUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateAgentUsingPUTCreated struct {
}

// IsSuccess returns true when this update agent using p u t created response has a 2xx status code
func (o *UpdateAgentUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update agent using p u t created response has a 3xx status code
func (o *UpdateAgentUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update agent using p u t created response has a 4xx status code
func (o *UpdateAgentUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update agent using p u t created response has a 5xx status code
func (o *UpdateAgentUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update agent using p u t created response a status code equal to that given
func (o *UpdateAgentUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update agent using p u t created response
func (o *UpdateAgentUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateAgentUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/agent][%d] updateAgentUsingPUTCreated", 201)
}

func (o *UpdateAgentUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/agent][%d] updateAgentUsingPUTCreated", 201)
}

func (o *UpdateAgentUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAgentUsingPUTBadRequest creates a UpdateAgentUsingPUTBadRequest with default headers values
func NewUpdateAgentUsingPUTBadRequest() *UpdateAgentUsingPUTBadRequest {
	return &UpdateAgentUsingPUTBadRequest{}
}

/*
UpdateAgentUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateAgentUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update agent using p u t bad request response has a 2xx status code
func (o *UpdateAgentUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update agent using p u t bad request response has a 3xx status code
func (o *UpdateAgentUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update agent using p u t bad request response has a 4xx status code
func (o *UpdateAgentUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update agent using p u t bad request response has a 5xx status code
func (o *UpdateAgentUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update agent using p u t bad request response a status code equal to that given
func (o *UpdateAgentUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update agent using p u t bad request response
func (o *UpdateAgentUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateAgentUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/agent][%d] updateAgentUsingPUTBadRequest", 400)
}

func (o *UpdateAgentUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/agent][%d] updateAgentUsingPUTBadRequest", 400)
}

func (o *UpdateAgentUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAgentUsingPUTUnauthorized creates a UpdateAgentUsingPUTUnauthorized with default headers values
func NewUpdateAgentUsingPUTUnauthorized() *UpdateAgentUsingPUTUnauthorized {
	return &UpdateAgentUsingPUTUnauthorized{}
}

/*
UpdateAgentUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateAgentUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update agent using p u t unauthorized response has a 2xx status code
func (o *UpdateAgentUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update agent using p u t unauthorized response has a 3xx status code
func (o *UpdateAgentUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update agent using p u t unauthorized response has a 4xx status code
func (o *UpdateAgentUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update agent using p u t unauthorized response has a 5xx status code
func (o *UpdateAgentUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update agent using p u t unauthorized response a status code equal to that given
func (o *UpdateAgentUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update agent using p u t unauthorized response
func (o *UpdateAgentUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateAgentUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/agent][%d] updateAgentUsingPUTUnauthorized", 401)
}

func (o *UpdateAgentUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/agent][%d] updateAgentUsingPUTUnauthorized", 401)
}

func (o *UpdateAgentUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAgentUsingPUTForbidden creates a UpdateAgentUsingPUTForbidden with default headers values
func NewUpdateAgentUsingPUTForbidden() *UpdateAgentUsingPUTForbidden {
	return &UpdateAgentUsingPUTForbidden{}
}

/*
UpdateAgentUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateAgentUsingPUTForbidden struct {
}

// IsSuccess returns true when this update agent using p u t forbidden response has a 2xx status code
func (o *UpdateAgentUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update agent using p u t forbidden response has a 3xx status code
func (o *UpdateAgentUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update agent using p u t forbidden response has a 4xx status code
func (o *UpdateAgentUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update agent using p u t forbidden response has a 5xx status code
func (o *UpdateAgentUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update agent using p u t forbidden response a status code equal to that given
func (o *UpdateAgentUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update agent using p u t forbidden response
func (o *UpdateAgentUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateAgentUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/agent][%d] updateAgentUsingPUTForbidden", 403)
}

func (o *UpdateAgentUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/agent][%d] updateAgentUsingPUTForbidden", 403)
}

func (o *UpdateAgentUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAgentUsingPUTNotFound creates a UpdateAgentUsingPUTNotFound with default headers values
func NewUpdateAgentUsingPUTNotFound() *UpdateAgentUsingPUTNotFound {
	return &UpdateAgentUsingPUTNotFound{}
}

/*
UpdateAgentUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateAgentUsingPUTNotFound struct {
}

// IsSuccess returns true when this update agent using p u t not found response has a 2xx status code
func (o *UpdateAgentUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update agent using p u t not found response has a 3xx status code
func (o *UpdateAgentUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update agent using p u t not found response has a 4xx status code
func (o *UpdateAgentUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update agent using p u t not found response has a 5xx status code
func (o *UpdateAgentUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update agent using p u t not found response a status code equal to that given
func (o *UpdateAgentUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update agent using p u t not found response
func (o *UpdateAgentUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateAgentUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/agent][%d] updateAgentUsingPUTNotFound", 404)
}

func (o *UpdateAgentUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/agent][%d] updateAgentUsingPUTNotFound", 404)
}

func (o *UpdateAgentUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAgentUsingPUTInternalServerError creates a UpdateAgentUsingPUTInternalServerError with default headers values
func NewUpdateAgentUsingPUTInternalServerError() *UpdateAgentUsingPUTInternalServerError {
	return &UpdateAgentUsingPUTInternalServerError{}
}

/*
UpdateAgentUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateAgentUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update agent using p u t internal server error response has a 2xx status code
func (o *UpdateAgentUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update agent using p u t internal server error response has a 3xx status code
func (o *UpdateAgentUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update agent using p u t internal server error response has a 4xx status code
func (o *UpdateAgentUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update agent using p u t internal server error response has a 5xx status code
func (o *UpdateAgentUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update agent using p u t internal server error response a status code equal to that given
func (o *UpdateAgentUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update agent using p u t internal server error response
func (o *UpdateAgentUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateAgentUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/agent][%d] updateAgentUsingPUTInternalServerError", 500)
}

func (o *UpdateAgentUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/agent][%d] updateAgentUsingPUTInternalServerError", 500)
}

func (o *UpdateAgentUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
