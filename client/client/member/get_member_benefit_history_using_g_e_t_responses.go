// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetMemberBenefitHistoryUsingGETReader is a Reader for the GetMemberBenefitHistoryUsingGET structure.
type GetMemberBenefitHistoryUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMemberBenefitHistoryUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMemberBenefitHistoryUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetMemberBenefitHistoryUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetMemberBenefitHistoryUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMemberBenefitHistoryUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMemberBenefitHistoryUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetMemberBenefitHistoryUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/member/benefitHistory] getMemberBenefitHistoryUsingGET", response, response.Code())
	}
}

// NewGetMemberBenefitHistoryUsingGETOK creates a GetMemberBenefitHistoryUsingGETOK with default headers values
func NewGetMemberBenefitHistoryUsingGETOK() *GetMemberBenefitHistoryUsingGETOK {
	return &GetMemberBenefitHistoryUsingGETOK{}
}

/*
GetMemberBenefitHistoryUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetMemberBenefitHistoryUsingGETOK struct {
	Payload *models.ResponseWrapperMemberDTO
}

// IsSuccess returns true when this get member benefit history using g e t o k response has a 2xx status code
func (o *GetMemberBenefitHistoryUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get member benefit history using g e t o k response has a 3xx status code
func (o *GetMemberBenefitHistoryUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member benefit history using g e t o k response has a 4xx status code
func (o *GetMemberBenefitHistoryUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get member benefit history using g e t o k response has a 5xx status code
func (o *GetMemberBenefitHistoryUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get member benefit history using g e t o k response a status code equal to that given
func (o *GetMemberBenefitHistoryUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get member benefit history using g e t o k response
func (o *GetMemberBenefitHistoryUsingGETOK) Code() int {
	return 200
}

func (o *GetMemberBenefitHistoryUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/benefitHistory][%d] getMemberBenefitHistoryUsingGETOK %s", 200, payload)
}

func (o *GetMemberBenefitHistoryUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/benefitHistory][%d] getMemberBenefitHistoryUsingGETOK %s", 200, payload)
}

func (o *GetMemberBenefitHistoryUsingGETOK) GetPayload() *models.ResponseWrapperMemberDTO {
	return o.Payload
}

func (o *GetMemberBenefitHistoryUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperMemberDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMemberBenefitHistoryUsingGETBadRequest creates a GetMemberBenefitHistoryUsingGETBadRequest with default headers values
func NewGetMemberBenefitHistoryUsingGETBadRequest() *GetMemberBenefitHistoryUsingGETBadRequest {
	return &GetMemberBenefitHistoryUsingGETBadRequest{}
}

/*
GetMemberBenefitHistoryUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetMemberBenefitHistoryUsingGETBadRequest struct {
}

// IsSuccess returns true when this get member benefit history using g e t bad request response has a 2xx status code
func (o *GetMemberBenefitHistoryUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member benefit history using g e t bad request response has a 3xx status code
func (o *GetMemberBenefitHistoryUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member benefit history using g e t bad request response has a 4xx status code
func (o *GetMemberBenefitHistoryUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member benefit history using g e t bad request response has a 5xx status code
func (o *GetMemberBenefitHistoryUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get member benefit history using g e t bad request response a status code equal to that given
func (o *GetMemberBenefitHistoryUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get member benefit history using g e t bad request response
func (o *GetMemberBenefitHistoryUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetMemberBenefitHistoryUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/benefitHistory][%d] getMemberBenefitHistoryUsingGETBadRequest", 400)
}

func (o *GetMemberBenefitHistoryUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/benefitHistory][%d] getMemberBenefitHistoryUsingGETBadRequest", 400)
}

func (o *GetMemberBenefitHistoryUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberBenefitHistoryUsingGETUnauthorized creates a GetMemberBenefitHistoryUsingGETUnauthorized with default headers values
func NewGetMemberBenefitHistoryUsingGETUnauthorized() *GetMemberBenefitHistoryUsingGETUnauthorized {
	return &GetMemberBenefitHistoryUsingGETUnauthorized{}
}

/*
GetMemberBenefitHistoryUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetMemberBenefitHistoryUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get member benefit history using g e t unauthorized response has a 2xx status code
func (o *GetMemberBenefitHistoryUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member benefit history using g e t unauthorized response has a 3xx status code
func (o *GetMemberBenefitHistoryUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member benefit history using g e t unauthorized response has a 4xx status code
func (o *GetMemberBenefitHistoryUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member benefit history using g e t unauthorized response has a 5xx status code
func (o *GetMemberBenefitHistoryUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get member benefit history using g e t unauthorized response a status code equal to that given
func (o *GetMemberBenefitHistoryUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get member benefit history using g e t unauthorized response
func (o *GetMemberBenefitHistoryUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetMemberBenefitHistoryUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/benefitHistory][%d] getMemberBenefitHistoryUsingGETUnauthorized", 401)
}

func (o *GetMemberBenefitHistoryUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/benefitHistory][%d] getMemberBenefitHistoryUsingGETUnauthorized", 401)
}

func (o *GetMemberBenefitHistoryUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberBenefitHistoryUsingGETForbidden creates a GetMemberBenefitHistoryUsingGETForbidden with default headers values
func NewGetMemberBenefitHistoryUsingGETForbidden() *GetMemberBenefitHistoryUsingGETForbidden {
	return &GetMemberBenefitHistoryUsingGETForbidden{}
}

/*
GetMemberBenefitHistoryUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetMemberBenefitHistoryUsingGETForbidden struct {
}

// IsSuccess returns true when this get member benefit history using g e t forbidden response has a 2xx status code
func (o *GetMemberBenefitHistoryUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member benefit history using g e t forbidden response has a 3xx status code
func (o *GetMemberBenefitHistoryUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member benefit history using g e t forbidden response has a 4xx status code
func (o *GetMemberBenefitHistoryUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member benefit history using g e t forbidden response has a 5xx status code
func (o *GetMemberBenefitHistoryUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get member benefit history using g e t forbidden response a status code equal to that given
func (o *GetMemberBenefitHistoryUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get member benefit history using g e t forbidden response
func (o *GetMemberBenefitHistoryUsingGETForbidden) Code() int {
	return 403
}

func (o *GetMemberBenefitHistoryUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/benefitHistory][%d] getMemberBenefitHistoryUsingGETForbidden", 403)
}

func (o *GetMemberBenefitHistoryUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/benefitHistory][%d] getMemberBenefitHistoryUsingGETForbidden", 403)
}

func (o *GetMemberBenefitHistoryUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberBenefitHistoryUsingGETNotFound creates a GetMemberBenefitHistoryUsingGETNotFound with default headers values
func NewGetMemberBenefitHistoryUsingGETNotFound() *GetMemberBenefitHistoryUsingGETNotFound {
	return &GetMemberBenefitHistoryUsingGETNotFound{}
}

/*
GetMemberBenefitHistoryUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetMemberBenefitHistoryUsingGETNotFound struct {
}

// IsSuccess returns true when this get member benefit history using g e t not found response has a 2xx status code
func (o *GetMemberBenefitHistoryUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member benefit history using g e t not found response has a 3xx status code
func (o *GetMemberBenefitHistoryUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member benefit history using g e t not found response has a 4xx status code
func (o *GetMemberBenefitHistoryUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member benefit history using g e t not found response has a 5xx status code
func (o *GetMemberBenefitHistoryUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get member benefit history using g e t not found response a status code equal to that given
func (o *GetMemberBenefitHistoryUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get member benefit history using g e t not found response
func (o *GetMemberBenefitHistoryUsingGETNotFound) Code() int {
	return 404
}

func (o *GetMemberBenefitHistoryUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/benefitHistory][%d] getMemberBenefitHistoryUsingGETNotFound", 404)
}

func (o *GetMemberBenefitHistoryUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/benefitHistory][%d] getMemberBenefitHistoryUsingGETNotFound", 404)
}

func (o *GetMemberBenefitHistoryUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberBenefitHistoryUsingGETInternalServerError creates a GetMemberBenefitHistoryUsingGETInternalServerError with default headers values
func NewGetMemberBenefitHistoryUsingGETInternalServerError() *GetMemberBenefitHistoryUsingGETInternalServerError {
	return &GetMemberBenefitHistoryUsingGETInternalServerError{}
}

/*
GetMemberBenefitHistoryUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetMemberBenefitHistoryUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get member benefit history using g e t internal server error response has a 2xx status code
func (o *GetMemberBenefitHistoryUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member benefit history using g e t internal server error response has a 3xx status code
func (o *GetMemberBenefitHistoryUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member benefit history using g e t internal server error response has a 4xx status code
func (o *GetMemberBenefitHistoryUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get member benefit history using g e t internal server error response has a 5xx status code
func (o *GetMemberBenefitHistoryUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get member benefit history using g e t internal server error response a status code equal to that given
func (o *GetMemberBenefitHistoryUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get member benefit history using g e t internal server error response
func (o *GetMemberBenefitHistoryUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetMemberBenefitHistoryUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/benefitHistory][%d] getMemberBenefitHistoryUsingGETInternalServerError", 500)
}

func (o *GetMemberBenefitHistoryUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/benefitHistory][%d] getMemberBenefitHistoryUsingGETInternalServerError", 500)
}

func (o *GetMemberBenefitHistoryUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
