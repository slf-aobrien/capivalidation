// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// ExpireServicersUsingPUTReader is a Reader for the ExpireServicersUsingPUT structure.
type ExpireServicersUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExpireServicersUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExpireServicersUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewExpireServicersUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewExpireServicersUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewExpireServicersUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewExpireServicersUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewExpireServicersUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewExpireServicersUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/policy/servicer] expireServicersUsingPUT", response, response.Code())
	}
}

// NewExpireServicersUsingPUTOK creates a ExpireServicersUsingPUTOK with default headers values
func NewExpireServicersUsingPUTOK() *ExpireServicersUsingPUTOK {
	return &ExpireServicersUsingPUTOK{}
}

/*
ExpireServicersUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type ExpireServicersUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this expire servicers using p u t o k response has a 2xx status code
func (o *ExpireServicersUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this expire servicers using p u t o k response has a 3xx status code
func (o *ExpireServicersUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this expire servicers using p u t o k response has a 4xx status code
func (o *ExpireServicersUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this expire servicers using p u t o k response has a 5xx status code
func (o *ExpireServicersUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this expire servicers using p u t o k response a status code equal to that given
func (o *ExpireServicersUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the expire servicers using p u t o k response
func (o *ExpireServicersUsingPUTOK) Code() int {
	return 200
}

func (o *ExpireServicersUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/servicer][%d] expireServicersUsingPUTOK %s", 200, payload)
}

func (o *ExpireServicersUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/servicer][%d] expireServicersUsingPUTOK %s", 200, payload)
}

func (o *ExpireServicersUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *ExpireServicersUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExpireServicersUsingPUTCreated creates a ExpireServicersUsingPUTCreated with default headers values
func NewExpireServicersUsingPUTCreated() *ExpireServicersUsingPUTCreated {
	return &ExpireServicersUsingPUTCreated{}
}

/*
ExpireServicersUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type ExpireServicersUsingPUTCreated struct {
}

// IsSuccess returns true when this expire servicers using p u t created response has a 2xx status code
func (o *ExpireServicersUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this expire servicers using p u t created response has a 3xx status code
func (o *ExpireServicersUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this expire servicers using p u t created response has a 4xx status code
func (o *ExpireServicersUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this expire servicers using p u t created response has a 5xx status code
func (o *ExpireServicersUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this expire servicers using p u t created response a status code equal to that given
func (o *ExpireServicersUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the expire servicers using p u t created response
func (o *ExpireServicersUsingPUTCreated) Code() int {
	return 201
}

func (o *ExpireServicersUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/servicer][%d] expireServicersUsingPUTCreated", 201)
}

func (o *ExpireServicersUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/servicer][%d] expireServicersUsingPUTCreated", 201)
}

func (o *ExpireServicersUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExpireServicersUsingPUTBadRequest creates a ExpireServicersUsingPUTBadRequest with default headers values
func NewExpireServicersUsingPUTBadRequest() *ExpireServicersUsingPUTBadRequest {
	return &ExpireServicersUsingPUTBadRequest{}
}

/*
ExpireServicersUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ExpireServicersUsingPUTBadRequest struct {
}

// IsSuccess returns true when this expire servicers using p u t bad request response has a 2xx status code
func (o *ExpireServicersUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this expire servicers using p u t bad request response has a 3xx status code
func (o *ExpireServicersUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this expire servicers using p u t bad request response has a 4xx status code
func (o *ExpireServicersUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this expire servicers using p u t bad request response has a 5xx status code
func (o *ExpireServicersUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this expire servicers using p u t bad request response a status code equal to that given
func (o *ExpireServicersUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the expire servicers using p u t bad request response
func (o *ExpireServicersUsingPUTBadRequest) Code() int {
	return 400
}

func (o *ExpireServicersUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/servicer][%d] expireServicersUsingPUTBadRequest", 400)
}

func (o *ExpireServicersUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/servicer][%d] expireServicersUsingPUTBadRequest", 400)
}

func (o *ExpireServicersUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExpireServicersUsingPUTUnauthorized creates a ExpireServicersUsingPUTUnauthorized with default headers values
func NewExpireServicersUsingPUTUnauthorized() *ExpireServicersUsingPUTUnauthorized {
	return &ExpireServicersUsingPUTUnauthorized{}
}

/*
ExpireServicersUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ExpireServicersUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this expire servicers using p u t unauthorized response has a 2xx status code
func (o *ExpireServicersUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this expire servicers using p u t unauthorized response has a 3xx status code
func (o *ExpireServicersUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this expire servicers using p u t unauthorized response has a 4xx status code
func (o *ExpireServicersUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this expire servicers using p u t unauthorized response has a 5xx status code
func (o *ExpireServicersUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this expire servicers using p u t unauthorized response a status code equal to that given
func (o *ExpireServicersUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the expire servicers using p u t unauthorized response
func (o *ExpireServicersUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *ExpireServicersUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/servicer][%d] expireServicersUsingPUTUnauthorized", 401)
}

func (o *ExpireServicersUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/servicer][%d] expireServicersUsingPUTUnauthorized", 401)
}

func (o *ExpireServicersUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExpireServicersUsingPUTForbidden creates a ExpireServicersUsingPUTForbidden with default headers values
func NewExpireServicersUsingPUTForbidden() *ExpireServicersUsingPUTForbidden {
	return &ExpireServicersUsingPUTForbidden{}
}

/*
ExpireServicersUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ExpireServicersUsingPUTForbidden struct {
}

// IsSuccess returns true when this expire servicers using p u t forbidden response has a 2xx status code
func (o *ExpireServicersUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this expire servicers using p u t forbidden response has a 3xx status code
func (o *ExpireServicersUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this expire servicers using p u t forbidden response has a 4xx status code
func (o *ExpireServicersUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this expire servicers using p u t forbidden response has a 5xx status code
func (o *ExpireServicersUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this expire servicers using p u t forbidden response a status code equal to that given
func (o *ExpireServicersUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the expire servicers using p u t forbidden response
func (o *ExpireServicersUsingPUTForbidden) Code() int {
	return 403
}

func (o *ExpireServicersUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/servicer][%d] expireServicersUsingPUTForbidden", 403)
}

func (o *ExpireServicersUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/servicer][%d] expireServicersUsingPUTForbidden", 403)
}

func (o *ExpireServicersUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExpireServicersUsingPUTNotFound creates a ExpireServicersUsingPUTNotFound with default headers values
func NewExpireServicersUsingPUTNotFound() *ExpireServicersUsingPUTNotFound {
	return &ExpireServicersUsingPUTNotFound{}
}

/*
ExpireServicersUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ExpireServicersUsingPUTNotFound struct {
}

// IsSuccess returns true when this expire servicers using p u t not found response has a 2xx status code
func (o *ExpireServicersUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this expire servicers using p u t not found response has a 3xx status code
func (o *ExpireServicersUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this expire servicers using p u t not found response has a 4xx status code
func (o *ExpireServicersUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this expire servicers using p u t not found response has a 5xx status code
func (o *ExpireServicersUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this expire servicers using p u t not found response a status code equal to that given
func (o *ExpireServicersUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the expire servicers using p u t not found response
func (o *ExpireServicersUsingPUTNotFound) Code() int {
	return 404
}

func (o *ExpireServicersUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/servicer][%d] expireServicersUsingPUTNotFound", 404)
}

func (o *ExpireServicersUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/servicer][%d] expireServicersUsingPUTNotFound", 404)
}

func (o *ExpireServicersUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExpireServicersUsingPUTInternalServerError creates a ExpireServicersUsingPUTInternalServerError with default headers values
func NewExpireServicersUsingPUTInternalServerError() *ExpireServicersUsingPUTInternalServerError {
	return &ExpireServicersUsingPUTInternalServerError{}
}

/*
ExpireServicersUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ExpireServicersUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this expire servicers using p u t internal server error response has a 2xx status code
func (o *ExpireServicersUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this expire servicers using p u t internal server error response has a 3xx status code
func (o *ExpireServicersUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this expire servicers using p u t internal server error response has a 4xx status code
func (o *ExpireServicersUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this expire servicers using p u t internal server error response has a 5xx status code
func (o *ExpireServicersUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this expire servicers using p u t internal server error response a status code equal to that given
func (o *ExpireServicersUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the expire servicers using p u t internal server error response
func (o *ExpireServicersUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *ExpireServicersUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/servicer][%d] expireServicersUsingPUTInternalServerError", 500)
}

func (o *ExpireServicersUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/servicer][%d] expireServicersUsingPUTInternalServerError", 500)
}

func (o *ExpireServicersUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
