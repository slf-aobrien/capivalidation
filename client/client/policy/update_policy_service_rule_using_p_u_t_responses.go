// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdatePolicyServiceRuleUsingPUTReader is a Reader for the UpdatePolicyServiceRuleUsingPUT structure.
type UpdatePolicyServiceRuleUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePolicyServiceRuleUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdatePolicyServiceRuleUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdatePolicyServiceRuleUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdatePolicyServiceRuleUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdatePolicyServiceRuleUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdatePolicyServiceRuleUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdatePolicyServiceRuleUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdatePolicyServiceRuleUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/policy/policyServiceRule/updatePolicyServiceRule] updatePolicyServiceRuleUsingPUT", response, response.Code())
	}
}

// NewUpdatePolicyServiceRuleUsingPUTOK creates a UpdatePolicyServiceRuleUsingPUTOK with default headers values
func NewUpdatePolicyServiceRuleUsingPUTOK() *UpdatePolicyServiceRuleUsingPUTOK {
	return &UpdatePolicyServiceRuleUsingPUTOK{}
}

/*
UpdatePolicyServiceRuleUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdatePolicyServiceRuleUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update policy service rule using p u t o k response has a 2xx status code
func (o *UpdatePolicyServiceRuleUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update policy service rule using p u t o k response has a 3xx status code
func (o *UpdatePolicyServiceRuleUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy service rule using p u t o k response has a 4xx status code
func (o *UpdatePolicyServiceRuleUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update policy service rule using p u t o k response has a 5xx status code
func (o *UpdatePolicyServiceRuleUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy service rule using p u t o k response a status code equal to that given
func (o *UpdatePolicyServiceRuleUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update policy service rule using p u t o k response
func (o *UpdatePolicyServiceRuleUsingPUTOK) Code() int {
	return 200
}

func (o *UpdatePolicyServiceRuleUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updatePolicyServiceRule][%d] updatePolicyServiceRuleUsingPUTOK %s", 200, payload)
}

func (o *UpdatePolicyServiceRuleUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updatePolicyServiceRule][%d] updatePolicyServiceRuleUsingPUTOK %s", 200, payload)
}

func (o *UpdatePolicyServiceRuleUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdatePolicyServiceRuleUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePolicyServiceRuleUsingPUTCreated creates a UpdatePolicyServiceRuleUsingPUTCreated with default headers values
func NewUpdatePolicyServiceRuleUsingPUTCreated() *UpdatePolicyServiceRuleUsingPUTCreated {
	return &UpdatePolicyServiceRuleUsingPUTCreated{}
}

/*
UpdatePolicyServiceRuleUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdatePolicyServiceRuleUsingPUTCreated struct {
}

// IsSuccess returns true when this update policy service rule using p u t created response has a 2xx status code
func (o *UpdatePolicyServiceRuleUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update policy service rule using p u t created response has a 3xx status code
func (o *UpdatePolicyServiceRuleUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy service rule using p u t created response has a 4xx status code
func (o *UpdatePolicyServiceRuleUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update policy service rule using p u t created response has a 5xx status code
func (o *UpdatePolicyServiceRuleUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy service rule using p u t created response a status code equal to that given
func (o *UpdatePolicyServiceRuleUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update policy service rule using p u t created response
func (o *UpdatePolicyServiceRuleUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdatePolicyServiceRuleUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updatePolicyServiceRule][%d] updatePolicyServiceRuleUsingPUTCreated", 201)
}

func (o *UpdatePolicyServiceRuleUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updatePolicyServiceRule][%d] updatePolicyServiceRuleUsingPUTCreated", 201)
}

func (o *UpdatePolicyServiceRuleUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyServiceRuleUsingPUTBadRequest creates a UpdatePolicyServiceRuleUsingPUTBadRequest with default headers values
func NewUpdatePolicyServiceRuleUsingPUTBadRequest() *UpdatePolicyServiceRuleUsingPUTBadRequest {
	return &UpdatePolicyServiceRuleUsingPUTBadRequest{}
}

/*
UpdatePolicyServiceRuleUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdatePolicyServiceRuleUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update policy service rule using p u t bad request response has a 2xx status code
func (o *UpdatePolicyServiceRuleUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy service rule using p u t bad request response has a 3xx status code
func (o *UpdatePolicyServiceRuleUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy service rule using p u t bad request response has a 4xx status code
func (o *UpdatePolicyServiceRuleUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy service rule using p u t bad request response has a 5xx status code
func (o *UpdatePolicyServiceRuleUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy service rule using p u t bad request response a status code equal to that given
func (o *UpdatePolicyServiceRuleUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update policy service rule using p u t bad request response
func (o *UpdatePolicyServiceRuleUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdatePolicyServiceRuleUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updatePolicyServiceRule][%d] updatePolicyServiceRuleUsingPUTBadRequest", 400)
}

func (o *UpdatePolicyServiceRuleUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updatePolicyServiceRule][%d] updatePolicyServiceRuleUsingPUTBadRequest", 400)
}

func (o *UpdatePolicyServiceRuleUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyServiceRuleUsingPUTUnauthorized creates a UpdatePolicyServiceRuleUsingPUTUnauthorized with default headers values
func NewUpdatePolicyServiceRuleUsingPUTUnauthorized() *UpdatePolicyServiceRuleUsingPUTUnauthorized {
	return &UpdatePolicyServiceRuleUsingPUTUnauthorized{}
}

/*
UpdatePolicyServiceRuleUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdatePolicyServiceRuleUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update policy service rule using p u t unauthorized response has a 2xx status code
func (o *UpdatePolicyServiceRuleUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy service rule using p u t unauthorized response has a 3xx status code
func (o *UpdatePolicyServiceRuleUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy service rule using p u t unauthorized response has a 4xx status code
func (o *UpdatePolicyServiceRuleUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy service rule using p u t unauthorized response has a 5xx status code
func (o *UpdatePolicyServiceRuleUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy service rule using p u t unauthorized response a status code equal to that given
func (o *UpdatePolicyServiceRuleUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update policy service rule using p u t unauthorized response
func (o *UpdatePolicyServiceRuleUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdatePolicyServiceRuleUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updatePolicyServiceRule][%d] updatePolicyServiceRuleUsingPUTUnauthorized", 401)
}

func (o *UpdatePolicyServiceRuleUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updatePolicyServiceRule][%d] updatePolicyServiceRuleUsingPUTUnauthorized", 401)
}

func (o *UpdatePolicyServiceRuleUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyServiceRuleUsingPUTForbidden creates a UpdatePolicyServiceRuleUsingPUTForbidden with default headers values
func NewUpdatePolicyServiceRuleUsingPUTForbidden() *UpdatePolicyServiceRuleUsingPUTForbidden {
	return &UpdatePolicyServiceRuleUsingPUTForbidden{}
}

/*
UpdatePolicyServiceRuleUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdatePolicyServiceRuleUsingPUTForbidden struct {
}

// IsSuccess returns true when this update policy service rule using p u t forbidden response has a 2xx status code
func (o *UpdatePolicyServiceRuleUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy service rule using p u t forbidden response has a 3xx status code
func (o *UpdatePolicyServiceRuleUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy service rule using p u t forbidden response has a 4xx status code
func (o *UpdatePolicyServiceRuleUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy service rule using p u t forbidden response has a 5xx status code
func (o *UpdatePolicyServiceRuleUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy service rule using p u t forbidden response a status code equal to that given
func (o *UpdatePolicyServiceRuleUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update policy service rule using p u t forbidden response
func (o *UpdatePolicyServiceRuleUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdatePolicyServiceRuleUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updatePolicyServiceRule][%d] updatePolicyServiceRuleUsingPUTForbidden", 403)
}

func (o *UpdatePolicyServiceRuleUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updatePolicyServiceRule][%d] updatePolicyServiceRuleUsingPUTForbidden", 403)
}

func (o *UpdatePolicyServiceRuleUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyServiceRuleUsingPUTNotFound creates a UpdatePolicyServiceRuleUsingPUTNotFound with default headers values
func NewUpdatePolicyServiceRuleUsingPUTNotFound() *UpdatePolicyServiceRuleUsingPUTNotFound {
	return &UpdatePolicyServiceRuleUsingPUTNotFound{}
}

/*
UpdatePolicyServiceRuleUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdatePolicyServiceRuleUsingPUTNotFound struct {
}

// IsSuccess returns true when this update policy service rule using p u t not found response has a 2xx status code
func (o *UpdatePolicyServiceRuleUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy service rule using p u t not found response has a 3xx status code
func (o *UpdatePolicyServiceRuleUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy service rule using p u t not found response has a 4xx status code
func (o *UpdatePolicyServiceRuleUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy service rule using p u t not found response has a 5xx status code
func (o *UpdatePolicyServiceRuleUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy service rule using p u t not found response a status code equal to that given
func (o *UpdatePolicyServiceRuleUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update policy service rule using p u t not found response
func (o *UpdatePolicyServiceRuleUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdatePolicyServiceRuleUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updatePolicyServiceRule][%d] updatePolicyServiceRuleUsingPUTNotFound", 404)
}

func (o *UpdatePolicyServiceRuleUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updatePolicyServiceRule][%d] updatePolicyServiceRuleUsingPUTNotFound", 404)
}

func (o *UpdatePolicyServiceRuleUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyServiceRuleUsingPUTInternalServerError creates a UpdatePolicyServiceRuleUsingPUTInternalServerError with default headers values
func NewUpdatePolicyServiceRuleUsingPUTInternalServerError() *UpdatePolicyServiceRuleUsingPUTInternalServerError {
	return &UpdatePolicyServiceRuleUsingPUTInternalServerError{}
}

/*
UpdatePolicyServiceRuleUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdatePolicyServiceRuleUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update policy service rule using p u t internal server error response has a 2xx status code
func (o *UpdatePolicyServiceRuleUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy service rule using p u t internal server error response has a 3xx status code
func (o *UpdatePolicyServiceRuleUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy service rule using p u t internal server error response has a 4xx status code
func (o *UpdatePolicyServiceRuleUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update policy service rule using p u t internal server error response has a 5xx status code
func (o *UpdatePolicyServiceRuleUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update policy service rule using p u t internal server error response a status code equal to that given
func (o *UpdatePolicyServiceRuleUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update policy service rule using p u t internal server error response
func (o *UpdatePolicyServiceRuleUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdatePolicyServiceRuleUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updatePolicyServiceRule][%d] updatePolicyServiceRuleUsingPUTInternalServerError", 500)
}

func (o *UpdatePolicyServiceRuleUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/policyServiceRule/updatePolicyServiceRule][%d] updatePolicyServiceRuleUsingPUTInternalServerError", 500)
}

func (o *UpdatePolicyServiceRuleUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
