// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetEDXMembersWithPagingUsingGETReader is a Reader for the GetEDXMembersWithPagingUsingGET structure.
type GetEDXMembersWithPagingUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEDXMembersWithPagingUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEDXMembersWithPagingUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetEDXMembersWithPagingUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetEDXMembersWithPagingUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEDXMembersWithPagingUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEDXMembersWithPagingUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEDXMembersWithPagingUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/member/edxMemberMatchListWithPaging] getEDXMembersWithPagingUsingGET", response, response.Code())
	}
}

// NewGetEDXMembersWithPagingUsingGETOK creates a GetEDXMembersWithPagingUsingGETOK with default headers values
func NewGetEDXMembersWithPagingUsingGETOK() *GetEDXMembersWithPagingUsingGETOK {
	return &GetEDXMembersWithPagingUsingGETOK{}
}

/*
GetEDXMembersWithPagingUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetEDXMembersWithPagingUsingGETOK struct {
	Payload *models.ResponseWrapperMemberListDTO
}

// IsSuccess returns true when this get e d x members with paging using g e t o k response has a 2xx status code
func (o *GetEDXMembersWithPagingUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get e d x members with paging using g e t o k response has a 3xx status code
func (o *GetEDXMembersWithPagingUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x members with paging using g e t o k response has a 4xx status code
func (o *GetEDXMembersWithPagingUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get e d x members with paging using g e t o k response has a 5xx status code
func (o *GetEDXMembersWithPagingUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x members with paging using g e t o k response a status code equal to that given
func (o *GetEDXMembersWithPagingUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get e d x members with paging using g e t o k response
func (o *GetEDXMembersWithPagingUsingGETOK) Code() int {
	return 200
}

func (o *GetEDXMembersWithPagingUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchListWithPaging][%d] getEDXMembersWithPagingUsingGETOK %s", 200, payload)
}

func (o *GetEDXMembersWithPagingUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchListWithPaging][%d] getEDXMembersWithPagingUsingGETOK %s", 200, payload)
}

func (o *GetEDXMembersWithPagingUsingGETOK) GetPayload() *models.ResponseWrapperMemberListDTO {
	return o.Payload
}

func (o *GetEDXMembersWithPagingUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperMemberListDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEDXMembersWithPagingUsingGETBadRequest creates a GetEDXMembersWithPagingUsingGETBadRequest with default headers values
func NewGetEDXMembersWithPagingUsingGETBadRequest() *GetEDXMembersWithPagingUsingGETBadRequest {
	return &GetEDXMembersWithPagingUsingGETBadRequest{}
}

/*
GetEDXMembersWithPagingUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetEDXMembersWithPagingUsingGETBadRequest struct {
}

// IsSuccess returns true when this get e d x members with paging using g e t bad request response has a 2xx status code
func (o *GetEDXMembersWithPagingUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x members with paging using g e t bad request response has a 3xx status code
func (o *GetEDXMembersWithPagingUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x members with paging using g e t bad request response has a 4xx status code
func (o *GetEDXMembersWithPagingUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get e d x members with paging using g e t bad request response has a 5xx status code
func (o *GetEDXMembersWithPagingUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x members with paging using g e t bad request response a status code equal to that given
func (o *GetEDXMembersWithPagingUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get e d x members with paging using g e t bad request response
func (o *GetEDXMembersWithPagingUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetEDXMembersWithPagingUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchListWithPaging][%d] getEDXMembersWithPagingUsingGETBadRequest", 400)
}

func (o *GetEDXMembersWithPagingUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchListWithPaging][%d] getEDXMembersWithPagingUsingGETBadRequest", 400)
}

func (o *GetEDXMembersWithPagingUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEDXMembersWithPagingUsingGETUnauthorized creates a GetEDXMembersWithPagingUsingGETUnauthorized with default headers values
func NewGetEDXMembersWithPagingUsingGETUnauthorized() *GetEDXMembersWithPagingUsingGETUnauthorized {
	return &GetEDXMembersWithPagingUsingGETUnauthorized{}
}

/*
GetEDXMembersWithPagingUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetEDXMembersWithPagingUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get e d x members with paging using g e t unauthorized response has a 2xx status code
func (o *GetEDXMembersWithPagingUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x members with paging using g e t unauthorized response has a 3xx status code
func (o *GetEDXMembersWithPagingUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x members with paging using g e t unauthorized response has a 4xx status code
func (o *GetEDXMembersWithPagingUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get e d x members with paging using g e t unauthorized response has a 5xx status code
func (o *GetEDXMembersWithPagingUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x members with paging using g e t unauthorized response a status code equal to that given
func (o *GetEDXMembersWithPagingUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get e d x members with paging using g e t unauthorized response
func (o *GetEDXMembersWithPagingUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetEDXMembersWithPagingUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchListWithPaging][%d] getEDXMembersWithPagingUsingGETUnauthorized", 401)
}

func (o *GetEDXMembersWithPagingUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchListWithPaging][%d] getEDXMembersWithPagingUsingGETUnauthorized", 401)
}

func (o *GetEDXMembersWithPagingUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEDXMembersWithPagingUsingGETForbidden creates a GetEDXMembersWithPagingUsingGETForbidden with default headers values
func NewGetEDXMembersWithPagingUsingGETForbidden() *GetEDXMembersWithPagingUsingGETForbidden {
	return &GetEDXMembersWithPagingUsingGETForbidden{}
}

/*
GetEDXMembersWithPagingUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetEDXMembersWithPagingUsingGETForbidden struct {
}

// IsSuccess returns true when this get e d x members with paging using g e t forbidden response has a 2xx status code
func (o *GetEDXMembersWithPagingUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x members with paging using g e t forbidden response has a 3xx status code
func (o *GetEDXMembersWithPagingUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x members with paging using g e t forbidden response has a 4xx status code
func (o *GetEDXMembersWithPagingUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get e d x members with paging using g e t forbidden response has a 5xx status code
func (o *GetEDXMembersWithPagingUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x members with paging using g e t forbidden response a status code equal to that given
func (o *GetEDXMembersWithPagingUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get e d x members with paging using g e t forbidden response
func (o *GetEDXMembersWithPagingUsingGETForbidden) Code() int {
	return 403
}

func (o *GetEDXMembersWithPagingUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchListWithPaging][%d] getEDXMembersWithPagingUsingGETForbidden", 403)
}

func (o *GetEDXMembersWithPagingUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchListWithPaging][%d] getEDXMembersWithPagingUsingGETForbidden", 403)
}

func (o *GetEDXMembersWithPagingUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEDXMembersWithPagingUsingGETNotFound creates a GetEDXMembersWithPagingUsingGETNotFound with default headers values
func NewGetEDXMembersWithPagingUsingGETNotFound() *GetEDXMembersWithPagingUsingGETNotFound {
	return &GetEDXMembersWithPagingUsingGETNotFound{}
}

/*
GetEDXMembersWithPagingUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetEDXMembersWithPagingUsingGETNotFound struct {
}

// IsSuccess returns true when this get e d x members with paging using g e t not found response has a 2xx status code
func (o *GetEDXMembersWithPagingUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x members with paging using g e t not found response has a 3xx status code
func (o *GetEDXMembersWithPagingUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x members with paging using g e t not found response has a 4xx status code
func (o *GetEDXMembersWithPagingUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get e d x members with paging using g e t not found response has a 5xx status code
func (o *GetEDXMembersWithPagingUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x members with paging using g e t not found response a status code equal to that given
func (o *GetEDXMembersWithPagingUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get e d x members with paging using g e t not found response
func (o *GetEDXMembersWithPagingUsingGETNotFound) Code() int {
	return 404
}

func (o *GetEDXMembersWithPagingUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchListWithPaging][%d] getEDXMembersWithPagingUsingGETNotFound", 404)
}

func (o *GetEDXMembersWithPagingUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchListWithPaging][%d] getEDXMembersWithPagingUsingGETNotFound", 404)
}

func (o *GetEDXMembersWithPagingUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEDXMembersWithPagingUsingGETInternalServerError creates a GetEDXMembersWithPagingUsingGETInternalServerError with default headers values
func NewGetEDXMembersWithPagingUsingGETInternalServerError() *GetEDXMembersWithPagingUsingGETInternalServerError {
	return &GetEDXMembersWithPagingUsingGETInternalServerError{}
}

/*
GetEDXMembersWithPagingUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetEDXMembersWithPagingUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get e d x members with paging using g e t internal server error response has a 2xx status code
func (o *GetEDXMembersWithPagingUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x members with paging using g e t internal server error response has a 3xx status code
func (o *GetEDXMembersWithPagingUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x members with paging using g e t internal server error response has a 4xx status code
func (o *GetEDXMembersWithPagingUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get e d x members with paging using g e t internal server error response has a 5xx status code
func (o *GetEDXMembersWithPagingUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get e d x members with paging using g e t internal server error response a status code equal to that given
func (o *GetEDXMembersWithPagingUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get e d x members with paging using g e t internal server error response
func (o *GetEDXMembersWithPagingUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetEDXMembersWithPagingUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchListWithPaging][%d] getEDXMembersWithPagingUsingGETInternalServerError", 500)
}

func (o *GetEDXMembersWithPagingUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchListWithPaging][%d] getEDXMembersWithPagingUsingGETInternalServerError", 500)
}

func (o *GetEDXMembersWithPagingUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
