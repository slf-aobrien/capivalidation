// Code generated by go-swagger; DO NOT EDIT.

package bill

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// PostBillReconciliationUsingPOSTReader is a Reader for the PostBillReconciliationUsingPOST structure.
type PostBillReconciliationUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostBillReconciliationUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostBillReconciliationUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewPostBillReconciliationUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostBillReconciliationUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostBillReconciliationUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostBillReconciliationUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostBillReconciliationUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostBillReconciliationUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/bill/reconciliation] postBillReconciliationUsingPOST", response, response.Code())
	}
}

// NewPostBillReconciliationUsingPOSTOK creates a PostBillReconciliationUsingPOSTOK with default headers values
func NewPostBillReconciliationUsingPOSTOK() *PostBillReconciliationUsingPOSTOK {
	return &PostBillReconciliationUsingPOSTOK{}
}

/*
PostBillReconciliationUsingPOSTOK describes a response with status code 200, with default header values.

Success
*/
type PostBillReconciliationUsingPOSTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this post bill reconciliation using p o s t o k response has a 2xx status code
func (o *PostBillReconciliationUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post bill reconciliation using p o s t o k response has a 3xx status code
func (o *PostBillReconciliationUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post bill reconciliation using p o s t o k response has a 4xx status code
func (o *PostBillReconciliationUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post bill reconciliation using p o s t o k response has a 5xx status code
func (o *PostBillReconciliationUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post bill reconciliation using p o s t o k response a status code equal to that given
func (o *PostBillReconciliationUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post bill reconciliation using p o s t o k response
func (o *PostBillReconciliationUsingPOSTOK) Code() int {
	return 200
}

func (o *PostBillReconciliationUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/bill/reconciliation][%d] postBillReconciliationUsingPOSTOK %s", 200, payload)
}

func (o *PostBillReconciliationUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/bill/reconciliation][%d] postBillReconciliationUsingPOSTOK %s", 200, payload)
}

func (o *PostBillReconciliationUsingPOSTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *PostBillReconciliationUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostBillReconciliationUsingPOSTCreated creates a PostBillReconciliationUsingPOSTCreated with default headers values
func NewPostBillReconciliationUsingPOSTCreated() *PostBillReconciliationUsingPOSTCreated {
	return &PostBillReconciliationUsingPOSTCreated{}
}

/*
PostBillReconciliationUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type PostBillReconciliationUsingPOSTCreated struct {
}

// IsSuccess returns true when this post bill reconciliation using p o s t created response has a 2xx status code
func (o *PostBillReconciliationUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post bill reconciliation using p o s t created response has a 3xx status code
func (o *PostBillReconciliationUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post bill reconciliation using p o s t created response has a 4xx status code
func (o *PostBillReconciliationUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post bill reconciliation using p o s t created response has a 5xx status code
func (o *PostBillReconciliationUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post bill reconciliation using p o s t created response a status code equal to that given
func (o *PostBillReconciliationUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post bill reconciliation using p o s t created response
func (o *PostBillReconciliationUsingPOSTCreated) Code() int {
	return 201
}

func (o *PostBillReconciliationUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/bill/reconciliation][%d] postBillReconciliationUsingPOSTCreated", 201)
}

func (o *PostBillReconciliationUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/bill/reconciliation][%d] postBillReconciliationUsingPOSTCreated", 201)
}

func (o *PostBillReconciliationUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostBillReconciliationUsingPOSTBadRequest creates a PostBillReconciliationUsingPOSTBadRequest with default headers values
func NewPostBillReconciliationUsingPOSTBadRequest() *PostBillReconciliationUsingPOSTBadRequest {
	return &PostBillReconciliationUsingPOSTBadRequest{}
}

/*
PostBillReconciliationUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostBillReconciliationUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this post bill reconciliation using p o s t bad request response has a 2xx status code
func (o *PostBillReconciliationUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post bill reconciliation using p o s t bad request response has a 3xx status code
func (o *PostBillReconciliationUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post bill reconciliation using p o s t bad request response has a 4xx status code
func (o *PostBillReconciliationUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post bill reconciliation using p o s t bad request response has a 5xx status code
func (o *PostBillReconciliationUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post bill reconciliation using p o s t bad request response a status code equal to that given
func (o *PostBillReconciliationUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post bill reconciliation using p o s t bad request response
func (o *PostBillReconciliationUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *PostBillReconciliationUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/bill/reconciliation][%d] postBillReconciliationUsingPOSTBadRequest", 400)
}

func (o *PostBillReconciliationUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/bill/reconciliation][%d] postBillReconciliationUsingPOSTBadRequest", 400)
}

func (o *PostBillReconciliationUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostBillReconciliationUsingPOSTUnauthorized creates a PostBillReconciliationUsingPOSTUnauthorized with default headers values
func NewPostBillReconciliationUsingPOSTUnauthorized() *PostBillReconciliationUsingPOSTUnauthorized {
	return &PostBillReconciliationUsingPOSTUnauthorized{}
}

/*
PostBillReconciliationUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostBillReconciliationUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this post bill reconciliation using p o s t unauthorized response has a 2xx status code
func (o *PostBillReconciliationUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post bill reconciliation using p o s t unauthorized response has a 3xx status code
func (o *PostBillReconciliationUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post bill reconciliation using p o s t unauthorized response has a 4xx status code
func (o *PostBillReconciliationUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post bill reconciliation using p o s t unauthorized response has a 5xx status code
func (o *PostBillReconciliationUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post bill reconciliation using p o s t unauthorized response a status code equal to that given
func (o *PostBillReconciliationUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post bill reconciliation using p o s t unauthorized response
func (o *PostBillReconciliationUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *PostBillReconciliationUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/bill/reconciliation][%d] postBillReconciliationUsingPOSTUnauthorized", 401)
}

func (o *PostBillReconciliationUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/bill/reconciliation][%d] postBillReconciliationUsingPOSTUnauthorized", 401)
}

func (o *PostBillReconciliationUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostBillReconciliationUsingPOSTForbidden creates a PostBillReconciliationUsingPOSTForbidden with default headers values
func NewPostBillReconciliationUsingPOSTForbidden() *PostBillReconciliationUsingPOSTForbidden {
	return &PostBillReconciliationUsingPOSTForbidden{}
}

/*
PostBillReconciliationUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostBillReconciliationUsingPOSTForbidden struct {
}

// IsSuccess returns true when this post bill reconciliation using p o s t forbidden response has a 2xx status code
func (o *PostBillReconciliationUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post bill reconciliation using p o s t forbidden response has a 3xx status code
func (o *PostBillReconciliationUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post bill reconciliation using p o s t forbidden response has a 4xx status code
func (o *PostBillReconciliationUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post bill reconciliation using p o s t forbidden response has a 5xx status code
func (o *PostBillReconciliationUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post bill reconciliation using p o s t forbidden response a status code equal to that given
func (o *PostBillReconciliationUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post bill reconciliation using p o s t forbidden response
func (o *PostBillReconciliationUsingPOSTForbidden) Code() int {
	return 403
}

func (o *PostBillReconciliationUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/bill/reconciliation][%d] postBillReconciliationUsingPOSTForbidden", 403)
}

func (o *PostBillReconciliationUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/bill/reconciliation][%d] postBillReconciliationUsingPOSTForbidden", 403)
}

func (o *PostBillReconciliationUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostBillReconciliationUsingPOSTNotFound creates a PostBillReconciliationUsingPOSTNotFound with default headers values
func NewPostBillReconciliationUsingPOSTNotFound() *PostBillReconciliationUsingPOSTNotFound {
	return &PostBillReconciliationUsingPOSTNotFound{}
}

/*
PostBillReconciliationUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostBillReconciliationUsingPOSTNotFound struct {
}

// IsSuccess returns true when this post bill reconciliation using p o s t not found response has a 2xx status code
func (o *PostBillReconciliationUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post bill reconciliation using p o s t not found response has a 3xx status code
func (o *PostBillReconciliationUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post bill reconciliation using p o s t not found response has a 4xx status code
func (o *PostBillReconciliationUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post bill reconciliation using p o s t not found response has a 5xx status code
func (o *PostBillReconciliationUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post bill reconciliation using p o s t not found response a status code equal to that given
func (o *PostBillReconciliationUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post bill reconciliation using p o s t not found response
func (o *PostBillReconciliationUsingPOSTNotFound) Code() int {
	return 404
}

func (o *PostBillReconciliationUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/bill/reconciliation][%d] postBillReconciliationUsingPOSTNotFound", 404)
}

func (o *PostBillReconciliationUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/bill/reconciliation][%d] postBillReconciliationUsingPOSTNotFound", 404)
}

func (o *PostBillReconciliationUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostBillReconciliationUsingPOSTInternalServerError creates a PostBillReconciliationUsingPOSTInternalServerError with default headers values
func NewPostBillReconciliationUsingPOSTInternalServerError() *PostBillReconciliationUsingPOSTInternalServerError {
	return &PostBillReconciliationUsingPOSTInternalServerError{}
}

/*
PostBillReconciliationUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type PostBillReconciliationUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this post bill reconciliation using p o s t internal server error response has a 2xx status code
func (o *PostBillReconciliationUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post bill reconciliation using p o s t internal server error response has a 3xx status code
func (o *PostBillReconciliationUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post bill reconciliation using p o s t internal server error response has a 4xx status code
func (o *PostBillReconciliationUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post bill reconciliation using p o s t internal server error response has a 5xx status code
func (o *PostBillReconciliationUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post bill reconciliation using p o s t internal server error response a status code equal to that given
func (o *PostBillReconciliationUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post bill reconciliation using p o s t internal server error response
func (o *PostBillReconciliationUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *PostBillReconciliationUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/bill/reconciliation][%d] postBillReconciliationUsingPOSTInternalServerError", 500)
}

func (o *PostBillReconciliationUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/bill/reconciliation][%d] postBillReconciliationUsingPOSTInternalServerError", 500)
}

func (o *PostBillReconciliationUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
