// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetMemberListPremiumEffectiveUsingGETReader is a Reader for the GetMemberListPremiumEffectiveUsingGET structure.
type GetMemberListPremiumEffectiveUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMemberListPremiumEffectiveUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMemberListPremiumEffectiveUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetMemberListPremiumEffectiveUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetMemberListPremiumEffectiveUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMemberListPremiumEffectiveUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMemberListPremiumEffectiveUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetMemberListPremiumEffectiveUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/member/premium/effective] getMemberListPremiumEffectiveUsingGET", response, response.Code())
	}
}

// NewGetMemberListPremiumEffectiveUsingGETOK creates a GetMemberListPremiumEffectiveUsingGETOK with default headers values
func NewGetMemberListPremiumEffectiveUsingGETOK() *GetMemberListPremiumEffectiveUsingGETOK {
	return &GetMemberListPremiumEffectiveUsingGETOK{}
}

/*
GetMemberListPremiumEffectiveUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetMemberListPremiumEffectiveUsingGETOK struct {
	Payload *models.ResponseWrapperMemberListDTO
}

// IsSuccess returns true when this get member list premium effective using g e t o k response has a 2xx status code
func (o *GetMemberListPremiumEffectiveUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get member list premium effective using g e t o k response has a 3xx status code
func (o *GetMemberListPremiumEffectiveUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member list premium effective using g e t o k response has a 4xx status code
func (o *GetMemberListPremiumEffectiveUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get member list premium effective using g e t o k response has a 5xx status code
func (o *GetMemberListPremiumEffectiveUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get member list premium effective using g e t o k response a status code equal to that given
func (o *GetMemberListPremiumEffectiveUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get member list premium effective using g e t o k response
func (o *GetMemberListPremiumEffectiveUsingGETOK) Code() int {
	return 200
}

func (o *GetMemberListPremiumEffectiveUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/premium/effective][%d] getMemberListPremiumEffectiveUsingGETOK %s", 200, payload)
}

func (o *GetMemberListPremiumEffectiveUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/premium/effective][%d] getMemberListPremiumEffectiveUsingGETOK %s", 200, payload)
}

func (o *GetMemberListPremiumEffectiveUsingGETOK) GetPayload() *models.ResponseWrapperMemberListDTO {
	return o.Payload
}

func (o *GetMemberListPremiumEffectiveUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperMemberListDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMemberListPremiumEffectiveUsingGETBadRequest creates a GetMemberListPremiumEffectiveUsingGETBadRequest with default headers values
func NewGetMemberListPremiumEffectiveUsingGETBadRequest() *GetMemberListPremiumEffectiveUsingGETBadRequest {
	return &GetMemberListPremiumEffectiveUsingGETBadRequest{}
}

/*
GetMemberListPremiumEffectiveUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetMemberListPremiumEffectiveUsingGETBadRequest struct {
}

// IsSuccess returns true when this get member list premium effective using g e t bad request response has a 2xx status code
func (o *GetMemberListPremiumEffectiveUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member list premium effective using g e t bad request response has a 3xx status code
func (o *GetMemberListPremiumEffectiveUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member list premium effective using g e t bad request response has a 4xx status code
func (o *GetMemberListPremiumEffectiveUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member list premium effective using g e t bad request response has a 5xx status code
func (o *GetMemberListPremiumEffectiveUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get member list premium effective using g e t bad request response a status code equal to that given
func (o *GetMemberListPremiumEffectiveUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get member list premium effective using g e t bad request response
func (o *GetMemberListPremiumEffectiveUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetMemberListPremiumEffectiveUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/premium/effective][%d] getMemberListPremiumEffectiveUsingGETBadRequest", 400)
}

func (o *GetMemberListPremiumEffectiveUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/premium/effective][%d] getMemberListPremiumEffectiveUsingGETBadRequest", 400)
}

func (o *GetMemberListPremiumEffectiveUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberListPremiumEffectiveUsingGETUnauthorized creates a GetMemberListPremiumEffectiveUsingGETUnauthorized with default headers values
func NewGetMemberListPremiumEffectiveUsingGETUnauthorized() *GetMemberListPremiumEffectiveUsingGETUnauthorized {
	return &GetMemberListPremiumEffectiveUsingGETUnauthorized{}
}

/*
GetMemberListPremiumEffectiveUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetMemberListPremiumEffectiveUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get member list premium effective using g e t unauthorized response has a 2xx status code
func (o *GetMemberListPremiumEffectiveUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member list premium effective using g e t unauthorized response has a 3xx status code
func (o *GetMemberListPremiumEffectiveUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member list premium effective using g e t unauthorized response has a 4xx status code
func (o *GetMemberListPremiumEffectiveUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member list premium effective using g e t unauthorized response has a 5xx status code
func (o *GetMemberListPremiumEffectiveUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get member list premium effective using g e t unauthorized response a status code equal to that given
func (o *GetMemberListPremiumEffectiveUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get member list premium effective using g e t unauthorized response
func (o *GetMemberListPremiumEffectiveUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetMemberListPremiumEffectiveUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/premium/effective][%d] getMemberListPremiumEffectiveUsingGETUnauthorized", 401)
}

func (o *GetMemberListPremiumEffectiveUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/premium/effective][%d] getMemberListPremiumEffectiveUsingGETUnauthorized", 401)
}

func (o *GetMemberListPremiumEffectiveUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberListPremiumEffectiveUsingGETForbidden creates a GetMemberListPremiumEffectiveUsingGETForbidden with default headers values
func NewGetMemberListPremiumEffectiveUsingGETForbidden() *GetMemberListPremiumEffectiveUsingGETForbidden {
	return &GetMemberListPremiumEffectiveUsingGETForbidden{}
}

/*
GetMemberListPremiumEffectiveUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetMemberListPremiumEffectiveUsingGETForbidden struct {
}

// IsSuccess returns true when this get member list premium effective using g e t forbidden response has a 2xx status code
func (o *GetMemberListPremiumEffectiveUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member list premium effective using g e t forbidden response has a 3xx status code
func (o *GetMemberListPremiumEffectiveUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member list premium effective using g e t forbidden response has a 4xx status code
func (o *GetMemberListPremiumEffectiveUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member list premium effective using g e t forbidden response has a 5xx status code
func (o *GetMemberListPremiumEffectiveUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get member list premium effective using g e t forbidden response a status code equal to that given
func (o *GetMemberListPremiumEffectiveUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get member list premium effective using g e t forbidden response
func (o *GetMemberListPremiumEffectiveUsingGETForbidden) Code() int {
	return 403
}

func (o *GetMemberListPremiumEffectiveUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/premium/effective][%d] getMemberListPremiumEffectiveUsingGETForbidden", 403)
}

func (o *GetMemberListPremiumEffectiveUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/premium/effective][%d] getMemberListPremiumEffectiveUsingGETForbidden", 403)
}

func (o *GetMemberListPremiumEffectiveUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberListPremiumEffectiveUsingGETNotFound creates a GetMemberListPremiumEffectiveUsingGETNotFound with default headers values
func NewGetMemberListPremiumEffectiveUsingGETNotFound() *GetMemberListPremiumEffectiveUsingGETNotFound {
	return &GetMemberListPremiumEffectiveUsingGETNotFound{}
}

/*
GetMemberListPremiumEffectiveUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetMemberListPremiumEffectiveUsingGETNotFound struct {
}

// IsSuccess returns true when this get member list premium effective using g e t not found response has a 2xx status code
func (o *GetMemberListPremiumEffectiveUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member list premium effective using g e t not found response has a 3xx status code
func (o *GetMemberListPremiumEffectiveUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member list premium effective using g e t not found response has a 4xx status code
func (o *GetMemberListPremiumEffectiveUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member list premium effective using g e t not found response has a 5xx status code
func (o *GetMemberListPremiumEffectiveUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get member list premium effective using g e t not found response a status code equal to that given
func (o *GetMemberListPremiumEffectiveUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get member list premium effective using g e t not found response
func (o *GetMemberListPremiumEffectiveUsingGETNotFound) Code() int {
	return 404
}

func (o *GetMemberListPremiumEffectiveUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/premium/effective][%d] getMemberListPremiumEffectiveUsingGETNotFound", 404)
}

func (o *GetMemberListPremiumEffectiveUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/premium/effective][%d] getMemberListPremiumEffectiveUsingGETNotFound", 404)
}

func (o *GetMemberListPremiumEffectiveUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberListPremiumEffectiveUsingGETInternalServerError creates a GetMemberListPremiumEffectiveUsingGETInternalServerError with default headers values
func NewGetMemberListPremiumEffectiveUsingGETInternalServerError() *GetMemberListPremiumEffectiveUsingGETInternalServerError {
	return &GetMemberListPremiumEffectiveUsingGETInternalServerError{}
}

/*
GetMemberListPremiumEffectiveUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetMemberListPremiumEffectiveUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get member list premium effective using g e t internal server error response has a 2xx status code
func (o *GetMemberListPremiumEffectiveUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member list premium effective using g e t internal server error response has a 3xx status code
func (o *GetMemberListPremiumEffectiveUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member list premium effective using g e t internal server error response has a 4xx status code
func (o *GetMemberListPremiumEffectiveUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get member list premium effective using g e t internal server error response has a 5xx status code
func (o *GetMemberListPremiumEffectiveUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get member list premium effective using g e t internal server error response a status code equal to that given
func (o *GetMemberListPremiumEffectiveUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get member list premium effective using g e t internal server error response
func (o *GetMemberListPremiumEffectiveUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetMemberListPremiumEffectiveUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/premium/effective][%d] getMemberListPremiumEffectiveUsingGETInternalServerError", 500)
}

func (o *GetMemberListPremiumEffectiveUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/premium/effective][%d] getMemberListPremiumEffectiveUsingGETInternalServerError", 500)
}

func (o *GetMemberListPremiumEffectiveUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
