// Code generated by go-swagger; DO NOT EDIT.

package bill

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetCaseBillsUsingGETReader is a Reader for the GetCaseBillsUsingGET structure.
type GetCaseBillsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCaseBillsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCaseBillsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCaseBillsUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCaseBillsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCaseBillsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCaseBillsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCaseBillsUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/bill/caseBills] getCaseBillsUsingGET", response, response.Code())
	}
}

// NewGetCaseBillsUsingGETOK creates a GetCaseBillsUsingGETOK with default headers values
func NewGetCaseBillsUsingGETOK() *GetCaseBillsUsingGETOK {
	return &GetCaseBillsUsingGETOK{}
}

/*
GetCaseBillsUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetCaseBillsUsingGETOK struct {
	Payload *models.ResponseWrapperListCaseBillDTO
}

// IsSuccess returns true when this get case bills using g e t o k response has a 2xx status code
func (o *GetCaseBillsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get case bills using g e t o k response has a 3xx status code
func (o *GetCaseBillsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get case bills using g e t o k response has a 4xx status code
func (o *GetCaseBillsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get case bills using g e t o k response has a 5xx status code
func (o *GetCaseBillsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get case bills using g e t o k response a status code equal to that given
func (o *GetCaseBillsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get case bills using g e t o k response
func (o *GetCaseBillsUsingGETOK) Code() int {
	return 200
}

func (o *GetCaseBillsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/bill/caseBills][%d] getCaseBillsUsingGETOK %s", 200, payload)
}

func (o *GetCaseBillsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/bill/caseBills][%d] getCaseBillsUsingGETOK %s", 200, payload)
}

func (o *GetCaseBillsUsingGETOK) GetPayload() *models.ResponseWrapperListCaseBillDTO {
	return o.Payload
}

func (o *GetCaseBillsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperListCaseBillDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCaseBillsUsingGETBadRequest creates a GetCaseBillsUsingGETBadRequest with default headers values
func NewGetCaseBillsUsingGETBadRequest() *GetCaseBillsUsingGETBadRequest {
	return &GetCaseBillsUsingGETBadRequest{}
}

/*
GetCaseBillsUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetCaseBillsUsingGETBadRequest struct {
}

// IsSuccess returns true when this get case bills using g e t bad request response has a 2xx status code
func (o *GetCaseBillsUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get case bills using g e t bad request response has a 3xx status code
func (o *GetCaseBillsUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get case bills using g e t bad request response has a 4xx status code
func (o *GetCaseBillsUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get case bills using g e t bad request response has a 5xx status code
func (o *GetCaseBillsUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get case bills using g e t bad request response a status code equal to that given
func (o *GetCaseBillsUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get case bills using g e t bad request response
func (o *GetCaseBillsUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetCaseBillsUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/caseBills][%d] getCaseBillsUsingGETBadRequest", 400)
}

func (o *GetCaseBillsUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/caseBills][%d] getCaseBillsUsingGETBadRequest", 400)
}

func (o *GetCaseBillsUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCaseBillsUsingGETUnauthorized creates a GetCaseBillsUsingGETUnauthorized with default headers values
func NewGetCaseBillsUsingGETUnauthorized() *GetCaseBillsUsingGETUnauthorized {
	return &GetCaseBillsUsingGETUnauthorized{}
}

/*
GetCaseBillsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCaseBillsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get case bills using g e t unauthorized response has a 2xx status code
func (o *GetCaseBillsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get case bills using g e t unauthorized response has a 3xx status code
func (o *GetCaseBillsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get case bills using g e t unauthorized response has a 4xx status code
func (o *GetCaseBillsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get case bills using g e t unauthorized response has a 5xx status code
func (o *GetCaseBillsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get case bills using g e t unauthorized response a status code equal to that given
func (o *GetCaseBillsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get case bills using g e t unauthorized response
func (o *GetCaseBillsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetCaseBillsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/caseBills][%d] getCaseBillsUsingGETUnauthorized", 401)
}

func (o *GetCaseBillsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/caseBills][%d] getCaseBillsUsingGETUnauthorized", 401)
}

func (o *GetCaseBillsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCaseBillsUsingGETForbidden creates a GetCaseBillsUsingGETForbidden with default headers values
func NewGetCaseBillsUsingGETForbidden() *GetCaseBillsUsingGETForbidden {
	return &GetCaseBillsUsingGETForbidden{}
}

/*
GetCaseBillsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCaseBillsUsingGETForbidden struct {
}

// IsSuccess returns true when this get case bills using g e t forbidden response has a 2xx status code
func (o *GetCaseBillsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get case bills using g e t forbidden response has a 3xx status code
func (o *GetCaseBillsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get case bills using g e t forbidden response has a 4xx status code
func (o *GetCaseBillsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get case bills using g e t forbidden response has a 5xx status code
func (o *GetCaseBillsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get case bills using g e t forbidden response a status code equal to that given
func (o *GetCaseBillsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get case bills using g e t forbidden response
func (o *GetCaseBillsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetCaseBillsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/caseBills][%d] getCaseBillsUsingGETForbidden", 403)
}

func (o *GetCaseBillsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/caseBills][%d] getCaseBillsUsingGETForbidden", 403)
}

func (o *GetCaseBillsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCaseBillsUsingGETNotFound creates a GetCaseBillsUsingGETNotFound with default headers values
func NewGetCaseBillsUsingGETNotFound() *GetCaseBillsUsingGETNotFound {
	return &GetCaseBillsUsingGETNotFound{}
}

/*
GetCaseBillsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetCaseBillsUsingGETNotFound struct {
}

// IsSuccess returns true when this get case bills using g e t not found response has a 2xx status code
func (o *GetCaseBillsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get case bills using g e t not found response has a 3xx status code
func (o *GetCaseBillsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get case bills using g e t not found response has a 4xx status code
func (o *GetCaseBillsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get case bills using g e t not found response has a 5xx status code
func (o *GetCaseBillsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get case bills using g e t not found response a status code equal to that given
func (o *GetCaseBillsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get case bills using g e t not found response
func (o *GetCaseBillsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetCaseBillsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/caseBills][%d] getCaseBillsUsingGETNotFound", 404)
}

func (o *GetCaseBillsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/caseBills][%d] getCaseBillsUsingGETNotFound", 404)
}

func (o *GetCaseBillsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCaseBillsUsingGETInternalServerError creates a GetCaseBillsUsingGETInternalServerError with default headers values
func NewGetCaseBillsUsingGETInternalServerError() *GetCaseBillsUsingGETInternalServerError {
	return &GetCaseBillsUsingGETInternalServerError{}
}

/*
GetCaseBillsUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetCaseBillsUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get case bills using g e t internal server error response has a 2xx status code
func (o *GetCaseBillsUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get case bills using g e t internal server error response has a 3xx status code
func (o *GetCaseBillsUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get case bills using g e t internal server error response has a 4xx status code
func (o *GetCaseBillsUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get case bills using g e t internal server error response has a 5xx status code
func (o *GetCaseBillsUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get case bills using g e t internal server error response a status code equal to that given
func (o *GetCaseBillsUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get case bills using g e t internal server error response
func (o *GetCaseBillsUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetCaseBillsUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/caseBills][%d] getCaseBillsUsingGETInternalServerError", 500)
}

func (o *GetCaseBillsUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/bill/caseBills][%d] getCaseBillsUsingGETInternalServerError", 500)
}

func (o *GetCaseBillsUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
