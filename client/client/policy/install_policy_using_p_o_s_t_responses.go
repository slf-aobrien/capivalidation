// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// InstallPolicyUsingPOSTReader is a Reader for the InstallPolicyUsingPOST structure.
type InstallPolicyUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InstallPolicyUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInstallPolicyUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewInstallPolicyUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInstallPolicyUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewInstallPolicyUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInstallPolicyUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInstallPolicyUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInstallPolicyUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/policy/installPolicy] installPolicyUsingPOST", response, response.Code())
	}
}

// NewInstallPolicyUsingPOSTOK creates a InstallPolicyUsingPOSTOK with default headers values
func NewInstallPolicyUsingPOSTOK() *InstallPolicyUsingPOSTOK {
	return &InstallPolicyUsingPOSTOK{}
}

/*
InstallPolicyUsingPOSTOK describes a response with status code 200, with default header values.

Success
*/
type InstallPolicyUsingPOSTOK struct {
	Payload *models.ResponseWrapperPolicyDTO
}

// IsSuccess returns true when this install policy using p o s t o k response has a 2xx status code
func (o *InstallPolicyUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this install policy using p o s t o k response has a 3xx status code
func (o *InstallPolicyUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this install policy using p o s t o k response has a 4xx status code
func (o *InstallPolicyUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this install policy using p o s t o k response has a 5xx status code
func (o *InstallPolicyUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this install policy using p o s t o k response a status code equal to that given
func (o *InstallPolicyUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the install policy using p o s t o k response
func (o *InstallPolicyUsingPOSTOK) Code() int {
	return 200
}

func (o *InstallPolicyUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installPolicy][%d] installPolicyUsingPOSTOK %s", 200, payload)
}

func (o *InstallPolicyUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installPolicy][%d] installPolicyUsingPOSTOK %s", 200, payload)
}

func (o *InstallPolicyUsingPOSTOK) GetPayload() *models.ResponseWrapperPolicyDTO {
	return o.Payload
}

func (o *InstallPolicyUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperPolicyDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstallPolicyUsingPOSTCreated creates a InstallPolicyUsingPOSTCreated with default headers values
func NewInstallPolicyUsingPOSTCreated() *InstallPolicyUsingPOSTCreated {
	return &InstallPolicyUsingPOSTCreated{}
}

/*
InstallPolicyUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type InstallPolicyUsingPOSTCreated struct {
}

// IsSuccess returns true when this install policy using p o s t created response has a 2xx status code
func (o *InstallPolicyUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this install policy using p o s t created response has a 3xx status code
func (o *InstallPolicyUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this install policy using p o s t created response has a 4xx status code
func (o *InstallPolicyUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this install policy using p o s t created response has a 5xx status code
func (o *InstallPolicyUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this install policy using p o s t created response a status code equal to that given
func (o *InstallPolicyUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the install policy using p o s t created response
func (o *InstallPolicyUsingPOSTCreated) Code() int {
	return 201
}

func (o *InstallPolicyUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installPolicy][%d] installPolicyUsingPOSTCreated", 201)
}

func (o *InstallPolicyUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installPolicy][%d] installPolicyUsingPOSTCreated", 201)
}

func (o *InstallPolicyUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInstallPolicyUsingPOSTBadRequest creates a InstallPolicyUsingPOSTBadRequest with default headers values
func NewInstallPolicyUsingPOSTBadRequest() *InstallPolicyUsingPOSTBadRequest {
	return &InstallPolicyUsingPOSTBadRequest{}
}

/*
InstallPolicyUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type InstallPolicyUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this install policy using p o s t bad request response has a 2xx status code
func (o *InstallPolicyUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this install policy using p o s t bad request response has a 3xx status code
func (o *InstallPolicyUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this install policy using p o s t bad request response has a 4xx status code
func (o *InstallPolicyUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this install policy using p o s t bad request response has a 5xx status code
func (o *InstallPolicyUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this install policy using p o s t bad request response a status code equal to that given
func (o *InstallPolicyUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the install policy using p o s t bad request response
func (o *InstallPolicyUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *InstallPolicyUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installPolicy][%d] installPolicyUsingPOSTBadRequest", 400)
}

func (o *InstallPolicyUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installPolicy][%d] installPolicyUsingPOSTBadRequest", 400)
}

func (o *InstallPolicyUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInstallPolicyUsingPOSTUnauthorized creates a InstallPolicyUsingPOSTUnauthorized with default headers values
func NewInstallPolicyUsingPOSTUnauthorized() *InstallPolicyUsingPOSTUnauthorized {
	return &InstallPolicyUsingPOSTUnauthorized{}
}

/*
InstallPolicyUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type InstallPolicyUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this install policy using p o s t unauthorized response has a 2xx status code
func (o *InstallPolicyUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this install policy using p o s t unauthorized response has a 3xx status code
func (o *InstallPolicyUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this install policy using p o s t unauthorized response has a 4xx status code
func (o *InstallPolicyUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this install policy using p o s t unauthorized response has a 5xx status code
func (o *InstallPolicyUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this install policy using p o s t unauthorized response a status code equal to that given
func (o *InstallPolicyUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the install policy using p o s t unauthorized response
func (o *InstallPolicyUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *InstallPolicyUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installPolicy][%d] installPolicyUsingPOSTUnauthorized", 401)
}

func (o *InstallPolicyUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installPolicy][%d] installPolicyUsingPOSTUnauthorized", 401)
}

func (o *InstallPolicyUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInstallPolicyUsingPOSTForbidden creates a InstallPolicyUsingPOSTForbidden with default headers values
func NewInstallPolicyUsingPOSTForbidden() *InstallPolicyUsingPOSTForbidden {
	return &InstallPolicyUsingPOSTForbidden{}
}

/*
InstallPolicyUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type InstallPolicyUsingPOSTForbidden struct {
}

// IsSuccess returns true when this install policy using p o s t forbidden response has a 2xx status code
func (o *InstallPolicyUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this install policy using p o s t forbidden response has a 3xx status code
func (o *InstallPolicyUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this install policy using p o s t forbidden response has a 4xx status code
func (o *InstallPolicyUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this install policy using p o s t forbidden response has a 5xx status code
func (o *InstallPolicyUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this install policy using p o s t forbidden response a status code equal to that given
func (o *InstallPolicyUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the install policy using p o s t forbidden response
func (o *InstallPolicyUsingPOSTForbidden) Code() int {
	return 403
}

func (o *InstallPolicyUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installPolicy][%d] installPolicyUsingPOSTForbidden", 403)
}

func (o *InstallPolicyUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installPolicy][%d] installPolicyUsingPOSTForbidden", 403)
}

func (o *InstallPolicyUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInstallPolicyUsingPOSTNotFound creates a InstallPolicyUsingPOSTNotFound with default headers values
func NewInstallPolicyUsingPOSTNotFound() *InstallPolicyUsingPOSTNotFound {
	return &InstallPolicyUsingPOSTNotFound{}
}

/*
InstallPolicyUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type InstallPolicyUsingPOSTNotFound struct {
}

// IsSuccess returns true when this install policy using p o s t not found response has a 2xx status code
func (o *InstallPolicyUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this install policy using p o s t not found response has a 3xx status code
func (o *InstallPolicyUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this install policy using p o s t not found response has a 4xx status code
func (o *InstallPolicyUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this install policy using p o s t not found response has a 5xx status code
func (o *InstallPolicyUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this install policy using p o s t not found response a status code equal to that given
func (o *InstallPolicyUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the install policy using p o s t not found response
func (o *InstallPolicyUsingPOSTNotFound) Code() int {
	return 404
}

func (o *InstallPolicyUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installPolicy][%d] installPolicyUsingPOSTNotFound", 404)
}

func (o *InstallPolicyUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installPolicy][%d] installPolicyUsingPOSTNotFound", 404)
}

func (o *InstallPolicyUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInstallPolicyUsingPOSTInternalServerError creates a InstallPolicyUsingPOSTInternalServerError with default headers values
func NewInstallPolicyUsingPOSTInternalServerError() *InstallPolicyUsingPOSTInternalServerError {
	return &InstallPolicyUsingPOSTInternalServerError{}
}

/*
InstallPolicyUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type InstallPolicyUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this install policy using p o s t internal server error response has a 2xx status code
func (o *InstallPolicyUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this install policy using p o s t internal server error response has a 3xx status code
func (o *InstallPolicyUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this install policy using p o s t internal server error response has a 4xx status code
func (o *InstallPolicyUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this install policy using p o s t internal server error response has a 5xx status code
func (o *InstallPolicyUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this install policy using p o s t internal server error response a status code equal to that given
func (o *InstallPolicyUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the install policy using p o s t internal server error response
func (o *InstallPolicyUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *InstallPolicyUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installPolicy][%d] installPolicyUsingPOSTInternalServerError", 500)
}

func (o *InstallPolicyUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/installPolicy][%d] installPolicyUsingPOSTInternalServerError", 500)
}

func (o *InstallPolicyUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
