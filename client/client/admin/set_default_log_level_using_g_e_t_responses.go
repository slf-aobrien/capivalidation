// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// SetDefaultLogLevelUsingGETReader is a Reader for the SetDefaultLogLevelUsingGET structure.
type SetDefaultLogLevelUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetDefaultLogLevelUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetDefaultLogLevelUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSetDefaultLogLevelUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSetDefaultLogLevelUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSetDefaultLogLevelUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSetDefaultLogLevelUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/admin/defaultLogLevel] setDefaultLogLevelUsingGET", response, response.Code())
	}
}

// NewSetDefaultLogLevelUsingGETOK creates a SetDefaultLogLevelUsingGETOK with default headers values
func NewSetDefaultLogLevelUsingGETOK() *SetDefaultLogLevelUsingGETOK {
	return &SetDefaultLogLevelUsingGETOK{}
}

/*
SetDefaultLogLevelUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type SetDefaultLogLevelUsingGETOK struct {
	Payload string
}

// IsSuccess returns true when this set default log level using g e t o k response has a 2xx status code
func (o *SetDefaultLogLevelUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this set default log level using g e t o k response has a 3xx status code
func (o *SetDefaultLogLevelUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set default log level using g e t o k response has a 4xx status code
func (o *SetDefaultLogLevelUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this set default log level using g e t o k response has a 5xx status code
func (o *SetDefaultLogLevelUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this set default log level using g e t o k response a status code equal to that given
func (o *SetDefaultLogLevelUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the set default log level using g e t o k response
func (o *SetDefaultLogLevelUsingGETOK) Code() int {
	return 200
}

func (o *SetDefaultLogLevelUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/admin/defaultLogLevel][%d] setDefaultLogLevelUsingGETOK %s", 200, payload)
}

func (o *SetDefaultLogLevelUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/admin/defaultLogLevel][%d] setDefaultLogLevelUsingGETOK %s", 200, payload)
}

func (o *SetDefaultLogLevelUsingGETOK) GetPayload() string {
	return o.Payload
}

func (o *SetDefaultLogLevelUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetDefaultLogLevelUsingGETUnauthorized creates a SetDefaultLogLevelUsingGETUnauthorized with default headers values
func NewSetDefaultLogLevelUsingGETUnauthorized() *SetDefaultLogLevelUsingGETUnauthorized {
	return &SetDefaultLogLevelUsingGETUnauthorized{}
}

/*
SetDefaultLogLevelUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SetDefaultLogLevelUsingGETUnauthorized struct {
}

// IsSuccess returns true when this set default log level using g e t unauthorized response has a 2xx status code
func (o *SetDefaultLogLevelUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set default log level using g e t unauthorized response has a 3xx status code
func (o *SetDefaultLogLevelUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set default log level using g e t unauthorized response has a 4xx status code
func (o *SetDefaultLogLevelUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this set default log level using g e t unauthorized response has a 5xx status code
func (o *SetDefaultLogLevelUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this set default log level using g e t unauthorized response a status code equal to that given
func (o *SetDefaultLogLevelUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the set default log level using g e t unauthorized response
func (o *SetDefaultLogLevelUsingGETUnauthorized) Code() int {
	return 401
}

func (o *SetDefaultLogLevelUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/admin/defaultLogLevel][%d] setDefaultLogLevelUsingGETUnauthorized", 401)
}

func (o *SetDefaultLogLevelUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/admin/defaultLogLevel][%d] setDefaultLogLevelUsingGETUnauthorized", 401)
}

func (o *SetDefaultLogLevelUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetDefaultLogLevelUsingGETForbidden creates a SetDefaultLogLevelUsingGETForbidden with default headers values
func NewSetDefaultLogLevelUsingGETForbidden() *SetDefaultLogLevelUsingGETForbidden {
	return &SetDefaultLogLevelUsingGETForbidden{}
}

/*
SetDefaultLogLevelUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SetDefaultLogLevelUsingGETForbidden struct {
}

// IsSuccess returns true when this set default log level using g e t forbidden response has a 2xx status code
func (o *SetDefaultLogLevelUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set default log level using g e t forbidden response has a 3xx status code
func (o *SetDefaultLogLevelUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set default log level using g e t forbidden response has a 4xx status code
func (o *SetDefaultLogLevelUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this set default log level using g e t forbidden response has a 5xx status code
func (o *SetDefaultLogLevelUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this set default log level using g e t forbidden response a status code equal to that given
func (o *SetDefaultLogLevelUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the set default log level using g e t forbidden response
func (o *SetDefaultLogLevelUsingGETForbidden) Code() int {
	return 403
}

func (o *SetDefaultLogLevelUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/admin/defaultLogLevel][%d] setDefaultLogLevelUsingGETForbidden", 403)
}

func (o *SetDefaultLogLevelUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/admin/defaultLogLevel][%d] setDefaultLogLevelUsingGETForbidden", 403)
}

func (o *SetDefaultLogLevelUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetDefaultLogLevelUsingGETNotFound creates a SetDefaultLogLevelUsingGETNotFound with default headers values
func NewSetDefaultLogLevelUsingGETNotFound() *SetDefaultLogLevelUsingGETNotFound {
	return &SetDefaultLogLevelUsingGETNotFound{}
}

/*
SetDefaultLogLevelUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SetDefaultLogLevelUsingGETNotFound struct {
}

// IsSuccess returns true when this set default log level using g e t not found response has a 2xx status code
func (o *SetDefaultLogLevelUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set default log level using g e t not found response has a 3xx status code
func (o *SetDefaultLogLevelUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set default log level using g e t not found response has a 4xx status code
func (o *SetDefaultLogLevelUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this set default log level using g e t not found response has a 5xx status code
func (o *SetDefaultLogLevelUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this set default log level using g e t not found response a status code equal to that given
func (o *SetDefaultLogLevelUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the set default log level using g e t not found response
func (o *SetDefaultLogLevelUsingGETNotFound) Code() int {
	return 404
}

func (o *SetDefaultLogLevelUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/admin/defaultLogLevel][%d] setDefaultLogLevelUsingGETNotFound", 404)
}

func (o *SetDefaultLogLevelUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/admin/defaultLogLevel][%d] setDefaultLogLevelUsingGETNotFound", 404)
}

func (o *SetDefaultLogLevelUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetDefaultLogLevelUsingGETInternalServerError creates a SetDefaultLogLevelUsingGETInternalServerError with default headers values
func NewSetDefaultLogLevelUsingGETInternalServerError() *SetDefaultLogLevelUsingGETInternalServerError {
	return &SetDefaultLogLevelUsingGETInternalServerError{}
}

/*
SetDefaultLogLevelUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type SetDefaultLogLevelUsingGETInternalServerError struct {
}

// IsSuccess returns true when this set default log level using g e t internal server error response has a 2xx status code
func (o *SetDefaultLogLevelUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set default log level using g e t internal server error response has a 3xx status code
func (o *SetDefaultLogLevelUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set default log level using g e t internal server error response has a 4xx status code
func (o *SetDefaultLogLevelUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this set default log level using g e t internal server error response has a 5xx status code
func (o *SetDefaultLogLevelUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this set default log level using g e t internal server error response a status code equal to that given
func (o *SetDefaultLogLevelUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the set default log level using g e t internal server error response
func (o *SetDefaultLogLevelUsingGETInternalServerError) Code() int {
	return 500
}

func (o *SetDefaultLogLevelUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/admin/defaultLogLevel][%d] setDefaultLogLevelUsingGETInternalServerError", 500)
}

func (o *SetDefaultLogLevelUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/admin/defaultLogLevel][%d] setDefaultLogLevelUsingGETInternalServerError", 500)
}

func (o *SetDefaultLogLevelUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
