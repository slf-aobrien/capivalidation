// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdatePolicyRatesUsingPUTReader is a Reader for the UpdatePolicyRatesUsingPUT structure.
type UpdatePolicyRatesUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePolicyRatesUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdatePolicyRatesUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdatePolicyRatesUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdatePolicyRatesUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdatePolicyRatesUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdatePolicyRatesUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdatePolicyRatesUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdatePolicyRatesUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/policy/updatePolicyRates] updatePolicyRatesUsingPUT", response, response.Code())
	}
}

// NewUpdatePolicyRatesUsingPUTOK creates a UpdatePolicyRatesUsingPUTOK with default headers values
func NewUpdatePolicyRatesUsingPUTOK() *UpdatePolicyRatesUsingPUTOK {
	return &UpdatePolicyRatesUsingPUTOK{}
}

/*
UpdatePolicyRatesUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdatePolicyRatesUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update policy rates using p u t o k response has a 2xx status code
func (o *UpdatePolicyRatesUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update policy rates using p u t o k response has a 3xx status code
func (o *UpdatePolicyRatesUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy rates using p u t o k response has a 4xx status code
func (o *UpdatePolicyRatesUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update policy rates using p u t o k response has a 5xx status code
func (o *UpdatePolicyRatesUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy rates using p u t o k response a status code equal to that given
func (o *UpdatePolicyRatesUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update policy rates using p u t o k response
func (o *UpdatePolicyRatesUsingPUTOK) Code() int {
	return 200
}

func (o *UpdatePolicyRatesUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyRates][%d] updatePolicyRatesUsingPUTOK %s", 200, payload)
}

func (o *UpdatePolicyRatesUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyRates][%d] updatePolicyRatesUsingPUTOK %s", 200, payload)
}

func (o *UpdatePolicyRatesUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdatePolicyRatesUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePolicyRatesUsingPUTCreated creates a UpdatePolicyRatesUsingPUTCreated with default headers values
func NewUpdatePolicyRatesUsingPUTCreated() *UpdatePolicyRatesUsingPUTCreated {
	return &UpdatePolicyRatesUsingPUTCreated{}
}

/*
UpdatePolicyRatesUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdatePolicyRatesUsingPUTCreated struct {
}

// IsSuccess returns true when this update policy rates using p u t created response has a 2xx status code
func (o *UpdatePolicyRatesUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update policy rates using p u t created response has a 3xx status code
func (o *UpdatePolicyRatesUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy rates using p u t created response has a 4xx status code
func (o *UpdatePolicyRatesUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update policy rates using p u t created response has a 5xx status code
func (o *UpdatePolicyRatesUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy rates using p u t created response a status code equal to that given
func (o *UpdatePolicyRatesUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update policy rates using p u t created response
func (o *UpdatePolicyRatesUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdatePolicyRatesUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyRates][%d] updatePolicyRatesUsingPUTCreated", 201)
}

func (o *UpdatePolicyRatesUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyRates][%d] updatePolicyRatesUsingPUTCreated", 201)
}

func (o *UpdatePolicyRatesUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyRatesUsingPUTBadRequest creates a UpdatePolicyRatesUsingPUTBadRequest with default headers values
func NewUpdatePolicyRatesUsingPUTBadRequest() *UpdatePolicyRatesUsingPUTBadRequest {
	return &UpdatePolicyRatesUsingPUTBadRequest{}
}

/*
UpdatePolicyRatesUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdatePolicyRatesUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update policy rates using p u t bad request response has a 2xx status code
func (o *UpdatePolicyRatesUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy rates using p u t bad request response has a 3xx status code
func (o *UpdatePolicyRatesUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy rates using p u t bad request response has a 4xx status code
func (o *UpdatePolicyRatesUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy rates using p u t bad request response has a 5xx status code
func (o *UpdatePolicyRatesUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy rates using p u t bad request response a status code equal to that given
func (o *UpdatePolicyRatesUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update policy rates using p u t bad request response
func (o *UpdatePolicyRatesUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdatePolicyRatesUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyRates][%d] updatePolicyRatesUsingPUTBadRequest", 400)
}

func (o *UpdatePolicyRatesUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyRates][%d] updatePolicyRatesUsingPUTBadRequest", 400)
}

func (o *UpdatePolicyRatesUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyRatesUsingPUTUnauthorized creates a UpdatePolicyRatesUsingPUTUnauthorized with default headers values
func NewUpdatePolicyRatesUsingPUTUnauthorized() *UpdatePolicyRatesUsingPUTUnauthorized {
	return &UpdatePolicyRatesUsingPUTUnauthorized{}
}

/*
UpdatePolicyRatesUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdatePolicyRatesUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update policy rates using p u t unauthorized response has a 2xx status code
func (o *UpdatePolicyRatesUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy rates using p u t unauthorized response has a 3xx status code
func (o *UpdatePolicyRatesUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy rates using p u t unauthorized response has a 4xx status code
func (o *UpdatePolicyRatesUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy rates using p u t unauthorized response has a 5xx status code
func (o *UpdatePolicyRatesUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy rates using p u t unauthorized response a status code equal to that given
func (o *UpdatePolicyRatesUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update policy rates using p u t unauthorized response
func (o *UpdatePolicyRatesUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdatePolicyRatesUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyRates][%d] updatePolicyRatesUsingPUTUnauthorized", 401)
}

func (o *UpdatePolicyRatesUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyRates][%d] updatePolicyRatesUsingPUTUnauthorized", 401)
}

func (o *UpdatePolicyRatesUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyRatesUsingPUTForbidden creates a UpdatePolicyRatesUsingPUTForbidden with default headers values
func NewUpdatePolicyRatesUsingPUTForbidden() *UpdatePolicyRatesUsingPUTForbidden {
	return &UpdatePolicyRatesUsingPUTForbidden{}
}

/*
UpdatePolicyRatesUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdatePolicyRatesUsingPUTForbidden struct {
}

// IsSuccess returns true when this update policy rates using p u t forbidden response has a 2xx status code
func (o *UpdatePolicyRatesUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy rates using p u t forbidden response has a 3xx status code
func (o *UpdatePolicyRatesUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy rates using p u t forbidden response has a 4xx status code
func (o *UpdatePolicyRatesUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy rates using p u t forbidden response has a 5xx status code
func (o *UpdatePolicyRatesUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy rates using p u t forbidden response a status code equal to that given
func (o *UpdatePolicyRatesUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update policy rates using p u t forbidden response
func (o *UpdatePolicyRatesUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdatePolicyRatesUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyRates][%d] updatePolicyRatesUsingPUTForbidden", 403)
}

func (o *UpdatePolicyRatesUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyRates][%d] updatePolicyRatesUsingPUTForbidden", 403)
}

func (o *UpdatePolicyRatesUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyRatesUsingPUTNotFound creates a UpdatePolicyRatesUsingPUTNotFound with default headers values
func NewUpdatePolicyRatesUsingPUTNotFound() *UpdatePolicyRatesUsingPUTNotFound {
	return &UpdatePolicyRatesUsingPUTNotFound{}
}

/*
UpdatePolicyRatesUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdatePolicyRatesUsingPUTNotFound struct {
}

// IsSuccess returns true when this update policy rates using p u t not found response has a 2xx status code
func (o *UpdatePolicyRatesUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy rates using p u t not found response has a 3xx status code
func (o *UpdatePolicyRatesUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy rates using p u t not found response has a 4xx status code
func (o *UpdatePolicyRatesUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update policy rates using p u t not found response has a 5xx status code
func (o *UpdatePolicyRatesUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy rates using p u t not found response a status code equal to that given
func (o *UpdatePolicyRatesUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update policy rates using p u t not found response
func (o *UpdatePolicyRatesUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdatePolicyRatesUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyRates][%d] updatePolicyRatesUsingPUTNotFound", 404)
}

func (o *UpdatePolicyRatesUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyRates][%d] updatePolicyRatesUsingPUTNotFound", 404)
}

func (o *UpdatePolicyRatesUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePolicyRatesUsingPUTInternalServerError creates a UpdatePolicyRatesUsingPUTInternalServerError with default headers values
func NewUpdatePolicyRatesUsingPUTInternalServerError() *UpdatePolicyRatesUsingPUTInternalServerError {
	return &UpdatePolicyRatesUsingPUTInternalServerError{}
}

/*
UpdatePolicyRatesUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdatePolicyRatesUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update policy rates using p u t internal server error response has a 2xx status code
func (o *UpdatePolicyRatesUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update policy rates using p u t internal server error response has a 3xx status code
func (o *UpdatePolicyRatesUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy rates using p u t internal server error response has a 4xx status code
func (o *UpdatePolicyRatesUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update policy rates using p u t internal server error response has a 5xx status code
func (o *UpdatePolicyRatesUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update policy rates using p u t internal server error response a status code equal to that given
func (o *UpdatePolicyRatesUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update policy rates using p u t internal server error response
func (o *UpdatePolicyRatesUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdatePolicyRatesUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyRates][%d] updatePolicyRatesUsingPUTInternalServerError", 500)
}

func (o *UpdatePolicyRatesUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/updatePolicyRates][%d] updatePolicyRatesUsingPUTInternalServerError", 500)
}

func (o *UpdatePolicyRatesUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
