// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateMemberFirstNameUsingPUTReader is a Reader for the UpdateMemberFirstNameUsingPUT structure.
type UpdateMemberFirstNameUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMemberFirstNameUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateMemberFirstNameUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateMemberFirstNameUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateMemberFirstNameUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateMemberFirstNameUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateMemberFirstNameUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateMemberFirstNameUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateMemberFirstNameUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/member/update/firstName] updateMemberFirstNameUsingPUT", response, response.Code())
	}
}

// NewUpdateMemberFirstNameUsingPUTOK creates a UpdateMemberFirstNameUsingPUTOK with default headers values
func NewUpdateMemberFirstNameUsingPUTOK() *UpdateMemberFirstNameUsingPUTOK {
	return &UpdateMemberFirstNameUsingPUTOK{}
}

/*
UpdateMemberFirstNameUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateMemberFirstNameUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update member first name using p u t o k response has a 2xx status code
func (o *UpdateMemberFirstNameUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member first name using p u t o k response has a 3xx status code
func (o *UpdateMemberFirstNameUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member first name using p u t o k response has a 4xx status code
func (o *UpdateMemberFirstNameUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member first name using p u t o k response has a 5xx status code
func (o *UpdateMemberFirstNameUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update member first name using p u t o k response a status code equal to that given
func (o *UpdateMemberFirstNameUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update member first name using p u t o k response
func (o *UpdateMemberFirstNameUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateMemberFirstNameUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/firstName][%d] updateMemberFirstNameUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberFirstNameUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/firstName][%d] updateMemberFirstNameUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberFirstNameUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateMemberFirstNameUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMemberFirstNameUsingPUTCreated creates a UpdateMemberFirstNameUsingPUTCreated with default headers values
func NewUpdateMemberFirstNameUsingPUTCreated() *UpdateMemberFirstNameUsingPUTCreated {
	return &UpdateMemberFirstNameUsingPUTCreated{}
}

/*
UpdateMemberFirstNameUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateMemberFirstNameUsingPUTCreated struct {
}

// IsSuccess returns true when this update member first name using p u t created response has a 2xx status code
func (o *UpdateMemberFirstNameUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member first name using p u t created response has a 3xx status code
func (o *UpdateMemberFirstNameUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member first name using p u t created response has a 4xx status code
func (o *UpdateMemberFirstNameUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member first name using p u t created response has a 5xx status code
func (o *UpdateMemberFirstNameUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update member first name using p u t created response a status code equal to that given
func (o *UpdateMemberFirstNameUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update member first name using p u t created response
func (o *UpdateMemberFirstNameUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateMemberFirstNameUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/firstName][%d] updateMemberFirstNameUsingPUTCreated", 201)
}

func (o *UpdateMemberFirstNameUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/firstName][%d] updateMemberFirstNameUsingPUTCreated", 201)
}

func (o *UpdateMemberFirstNameUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberFirstNameUsingPUTBadRequest creates a UpdateMemberFirstNameUsingPUTBadRequest with default headers values
func NewUpdateMemberFirstNameUsingPUTBadRequest() *UpdateMemberFirstNameUsingPUTBadRequest {
	return &UpdateMemberFirstNameUsingPUTBadRequest{}
}

/*
UpdateMemberFirstNameUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateMemberFirstNameUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update member first name using p u t bad request response has a 2xx status code
func (o *UpdateMemberFirstNameUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member first name using p u t bad request response has a 3xx status code
func (o *UpdateMemberFirstNameUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member first name using p u t bad request response has a 4xx status code
func (o *UpdateMemberFirstNameUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member first name using p u t bad request response has a 5xx status code
func (o *UpdateMemberFirstNameUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update member first name using p u t bad request response a status code equal to that given
func (o *UpdateMemberFirstNameUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update member first name using p u t bad request response
func (o *UpdateMemberFirstNameUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateMemberFirstNameUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/firstName][%d] updateMemberFirstNameUsingPUTBadRequest", 400)
}

func (o *UpdateMemberFirstNameUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/firstName][%d] updateMemberFirstNameUsingPUTBadRequest", 400)
}

func (o *UpdateMemberFirstNameUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberFirstNameUsingPUTUnauthorized creates a UpdateMemberFirstNameUsingPUTUnauthorized with default headers values
func NewUpdateMemberFirstNameUsingPUTUnauthorized() *UpdateMemberFirstNameUsingPUTUnauthorized {
	return &UpdateMemberFirstNameUsingPUTUnauthorized{}
}

/*
UpdateMemberFirstNameUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateMemberFirstNameUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update member first name using p u t unauthorized response has a 2xx status code
func (o *UpdateMemberFirstNameUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member first name using p u t unauthorized response has a 3xx status code
func (o *UpdateMemberFirstNameUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member first name using p u t unauthorized response has a 4xx status code
func (o *UpdateMemberFirstNameUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member first name using p u t unauthorized response has a 5xx status code
func (o *UpdateMemberFirstNameUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update member first name using p u t unauthorized response a status code equal to that given
func (o *UpdateMemberFirstNameUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update member first name using p u t unauthorized response
func (o *UpdateMemberFirstNameUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateMemberFirstNameUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/firstName][%d] updateMemberFirstNameUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberFirstNameUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/firstName][%d] updateMemberFirstNameUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberFirstNameUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberFirstNameUsingPUTForbidden creates a UpdateMemberFirstNameUsingPUTForbidden with default headers values
func NewUpdateMemberFirstNameUsingPUTForbidden() *UpdateMemberFirstNameUsingPUTForbidden {
	return &UpdateMemberFirstNameUsingPUTForbidden{}
}

/*
UpdateMemberFirstNameUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateMemberFirstNameUsingPUTForbidden struct {
}

// IsSuccess returns true when this update member first name using p u t forbidden response has a 2xx status code
func (o *UpdateMemberFirstNameUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member first name using p u t forbidden response has a 3xx status code
func (o *UpdateMemberFirstNameUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member first name using p u t forbidden response has a 4xx status code
func (o *UpdateMemberFirstNameUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member first name using p u t forbidden response has a 5xx status code
func (o *UpdateMemberFirstNameUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update member first name using p u t forbidden response a status code equal to that given
func (o *UpdateMemberFirstNameUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update member first name using p u t forbidden response
func (o *UpdateMemberFirstNameUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateMemberFirstNameUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/firstName][%d] updateMemberFirstNameUsingPUTForbidden", 403)
}

func (o *UpdateMemberFirstNameUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/firstName][%d] updateMemberFirstNameUsingPUTForbidden", 403)
}

func (o *UpdateMemberFirstNameUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberFirstNameUsingPUTNotFound creates a UpdateMemberFirstNameUsingPUTNotFound with default headers values
func NewUpdateMemberFirstNameUsingPUTNotFound() *UpdateMemberFirstNameUsingPUTNotFound {
	return &UpdateMemberFirstNameUsingPUTNotFound{}
}

/*
UpdateMemberFirstNameUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateMemberFirstNameUsingPUTNotFound struct {
}

// IsSuccess returns true when this update member first name using p u t not found response has a 2xx status code
func (o *UpdateMemberFirstNameUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member first name using p u t not found response has a 3xx status code
func (o *UpdateMemberFirstNameUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member first name using p u t not found response has a 4xx status code
func (o *UpdateMemberFirstNameUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member first name using p u t not found response has a 5xx status code
func (o *UpdateMemberFirstNameUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update member first name using p u t not found response a status code equal to that given
func (o *UpdateMemberFirstNameUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update member first name using p u t not found response
func (o *UpdateMemberFirstNameUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateMemberFirstNameUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/firstName][%d] updateMemberFirstNameUsingPUTNotFound", 404)
}

func (o *UpdateMemberFirstNameUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/firstName][%d] updateMemberFirstNameUsingPUTNotFound", 404)
}

func (o *UpdateMemberFirstNameUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberFirstNameUsingPUTInternalServerError creates a UpdateMemberFirstNameUsingPUTInternalServerError with default headers values
func NewUpdateMemberFirstNameUsingPUTInternalServerError() *UpdateMemberFirstNameUsingPUTInternalServerError {
	return &UpdateMemberFirstNameUsingPUTInternalServerError{}
}

/*
UpdateMemberFirstNameUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateMemberFirstNameUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update member first name using p u t internal server error response has a 2xx status code
func (o *UpdateMemberFirstNameUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member first name using p u t internal server error response has a 3xx status code
func (o *UpdateMemberFirstNameUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member first name using p u t internal server error response has a 4xx status code
func (o *UpdateMemberFirstNameUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member first name using p u t internal server error response has a 5xx status code
func (o *UpdateMemberFirstNameUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update member first name using p u t internal server error response a status code equal to that given
func (o *UpdateMemberFirstNameUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update member first name using p u t internal server error response
func (o *UpdateMemberFirstNameUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateMemberFirstNameUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/firstName][%d] updateMemberFirstNameUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberFirstNameUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/firstName][%d] updateMemberFirstNameUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberFirstNameUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
