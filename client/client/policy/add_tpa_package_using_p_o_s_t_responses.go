// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// AddTpaPackageUsingPOSTReader is a Reader for the AddTpaPackageUsingPOST structure.
type AddTpaPackageUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddTpaPackageUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddTpaPackageUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewAddTpaPackageUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddTpaPackageUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddTpaPackageUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddTpaPackageUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddTpaPackageUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddTpaPackageUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/policy/tpaPackage] addTpaPackageUsingPOST", response, response.Code())
	}
}

// NewAddTpaPackageUsingPOSTOK creates a AddTpaPackageUsingPOSTOK with default headers values
func NewAddTpaPackageUsingPOSTOK() *AddTpaPackageUsingPOSTOK {
	return &AddTpaPackageUsingPOSTOK{}
}

/*
AddTpaPackageUsingPOSTOK describes a response with status code 200, with default header values.

Success
*/
type AddTpaPackageUsingPOSTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this add tpa package using p o s t o k response has a 2xx status code
func (o *AddTpaPackageUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add tpa package using p o s t o k response has a 3xx status code
func (o *AddTpaPackageUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add tpa package using p o s t o k response has a 4xx status code
func (o *AddTpaPackageUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add tpa package using p o s t o k response has a 5xx status code
func (o *AddTpaPackageUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add tpa package using p o s t o k response a status code equal to that given
func (o *AddTpaPackageUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add tpa package using p o s t o k response
func (o *AddTpaPackageUsingPOSTOK) Code() int {
	return 200
}

func (o *AddTpaPackageUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/tpaPackage][%d] addTpaPackageUsingPOSTOK %s", 200, payload)
}

func (o *AddTpaPackageUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/tpaPackage][%d] addTpaPackageUsingPOSTOK %s", 200, payload)
}

func (o *AddTpaPackageUsingPOSTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *AddTpaPackageUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTpaPackageUsingPOSTCreated creates a AddTpaPackageUsingPOSTCreated with default headers values
func NewAddTpaPackageUsingPOSTCreated() *AddTpaPackageUsingPOSTCreated {
	return &AddTpaPackageUsingPOSTCreated{}
}

/*
AddTpaPackageUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type AddTpaPackageUsingPOSTCreated struct {
}

// IsSuccess returns true when this add tpa package using p o s t created response has a 2xx status code
func (o *AddTpaPackageUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add tpa package using p o s t created response has a 3xx status code
func (o *AddTpaPackageUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add tpa package using p o s t created response has a 4xx status code
func (o *AddTpaPackageUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add tpa package using p o s t created response has a 5xx status code
func (o *AddTpaPackageUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add tpa package using p o s t created response a status code equal to that given
func (o *AddTpaPackageUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add tpa package using p o s t created response
func (o *AddTpaPackageUsingPOSTCreated) Code() int {
	return 201
}

func (o *AddTpaPackageUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/tpaPackage][%d] addTpaPackageUsingPOSTCreated", 201)
}

func (o *AddTpaPackageUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/tpaPackage][%d] addTpaPackageUsingPOSTCreated", 201)
}

func (o *AddTpaPackageUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddTpaPackageUsingPOSTBadRequest creates a AddTpaPackageUsingPOSTBadRequest with default headers values
func NewAddTpaPackageUsingPOSTBadRequest() *AddTpaPackageUsingPOSTBadRequest {
	return &AddTpaPackageUsingPOSTBadRequest{}
}

/*
AddTpaPackageUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddTpaPackageUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this add tpa package using p o s t bad request response has a 2xx status code
func (o *AddTpaPackageUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add tpa package using p o s t bad request response has a 3xx status code
func (o *AddTpaPackageUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add tpa package using p o s t bad request response has a 4xx status code
func (o *AddTpaPackageUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add tpa package using p o s t bad request response has a 5xx status code
func (o *AddTpaPackageUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add tpa package using p o s t bad request response a status code equal to that given
func (o *AddTpaPackageUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add tpa package using p o s t bad request response
func (o *AddTpaPackageUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *AddTpaPackageUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/tpaPackage][%d] addTpaPackageUsingPOSTBadRequest", 400)
}

func (o *AddTpaPackageUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/tpaPackage][%d] addTpaPackageUsingPOSTBadRequest", 400)
}

func (o *AddTpaPackageUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddTpaPackageUsingPOSTUnauthorized creates a AddTpaPackageUsingPOSTUnauthorized with default headers values
func NewAddTpaPackageUsingPOSTUnauthorized() *AddTpaPackageUsingPOSTUnauthorized {
	return &AddTpaPackageUsingPOSTUnauthorized{}
}

/*
AddTpaPackageUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddTpaPackageUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this add tpa package using p o s t unauthorized response has a 2xx status code
func (o *AddTpaPackageUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add tpa package using p o s t unauthorized response has a 3xx status code
func (o *AddTpaPackageUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add tpa package using p o s t unauthorized response has a 4xx status code
func (o *AddTpaPackageUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add tpa package using p o s t unauthorized response has a 5xx status code
func (o *AddTpaPackageUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add tpa package using p o s t unauthorized response a status code equal to that given
func (o *AddTpaPackageUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add tpa package using p o s t unauthorized response
func (o *AddTpaPackageUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *AddTpaPackageUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/tpaPackage][%d] addTpaPackageUsingPOSTUnauthorized", 401)
}

func (o *AddTpaPackageUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/tpaPackage][%d] addTpaPackageUsingPOSTUnauthorized", 401)
}

func (o *AddTpaPackageUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddTpaPackageUsingPOSTForbidden creates a AddTpaPackageUsingPOSTForbidden with default headers values
func NewAddTpaPackageUsingPOSTForbidden() *AddTpaPackageUsingPOSTForbidden {
	return &AddTpaPackageUsingPOSTForbidden{}
}

/*
AddTpaPackageUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddTpaPackageUsingPOSTForbidden struct {
}

// IsSuccess returns true when this add tpa package using p o s t forbidden response has a 2xx status code
func (o *AddTpaPackageUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add tpa package using p o s t forbidden response has a 3xx status code
func (o *AddTpaPackageUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add tpa package using p o s t forbidden response has a 4xx status code
func (o *AddTpaPackageUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add tpa package using p o s t forbidden response has a 5xx status code
func (o *AddTpaPackageUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add tpa package using p o s t forbidden response a status code equal to that given
func (o *AddTpaPackageUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add tpa package using p o s t forbidden response
func (o *AddTpaPackageUsingPOSTForbidden) Code() int {
	return 403
}

func (o *AddTpaPackageUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/tpaPackage][%d] addTpaPackageUsingPOSTForbidden", 403)
}

func (o *AddTpaPackageUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/tpaPackage][%d] addTpaPackageUsingPOSTForbidden", 403)
}

func (o *AddTpaPackageUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddTpaPackageUsingPOSTNotFound creates a AddTpaPackageUsingPOSTNotFound with default headers values
func NewAddTpaPackageUsingPOSTNotFound() *AddTpaPackageUsingPOSTNotFound {
	return &AddTpaPackageUsingPOSTNotFound{}
}

/*
AddTpaPackageUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddTpaPackageUsingPOSTNotFound struct {
}

// IsSuccess returns true when this add tpa package using p o s t not found response has a 2xx status code
func (o *AddTpaPackageUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add tpa package using p o s t not found response has a 3xx status code
func (o *AddTpaPackageUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add tpa package using p o s t not found response has a 4xx status code
func (o *AddTpaPackageUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add tpa package using p o s t not found response has a 5xx status code
func (o *AddTpaPackageUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add tpa package using p o s t not found response a status code equal to that given
func (o *AddTpaPackageUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add tpa package using p o s t not found response
func (o *AddTpaPackageUsingPOSTNotFound) Code() int {
	return 404
}

func (o *AddTpaPackageUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/tpaPackage][%d] addTpaPackageUsingPOSTNotFound", 404)
}

func (o *AddTpaPackageUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/tpaPackage][%d] addTpaPackageUsingPOSTNotFound", 404)
}

func (o *AddTpaPackageUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddTpaPackageUsingPOSTInternalServerError creates a AddTpaPackageUsingPOSTInternalServerError with default headers values
func NewAddTpaPackageUsingPOSTInternalServerError() *AddTpaPackageUsingPOSTInternalServerError {
	return &AddTpaPackageUsingPOSTInternalServerError{}
}

/*
AddTpaPackageUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AddTpaPackageUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this add tpa package using p o s t internal server error response has a 2xx status code
func (o *AddTpaPackageUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add tpa package using p o s t internal server error response has a 3xx status code
func (o *AddTpaPackageUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add tpa package using p o s t internal server error response has a 4xx status code
func (o *AddTpaPackageUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add tpa package using p o s t internal server error response has a 5xx status code
func (o *AddTpaPackageUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add tpa package using p o s t internal server error response a status code equal to that given
func (o *AddTpaPackageUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add tpa package using p o s t internal server error response
func (o *AddTpaPackageUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *AddTpaPackageUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/tpaPackage][%d] addTpaPackageUsingPOSTInternalServerError", 500)
}

func (o *AddTpaPackageUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/tpaPackage][%d] addTpaPackageUsingPOSTInternalServerError", 500)
}

func (o *AddTpaPackageUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
