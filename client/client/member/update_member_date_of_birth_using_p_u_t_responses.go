// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateMemberDateOfBirthUsingPUTReader is a Reader for the UpdateMemberDateOfBirthUsingPUT structure.
type UpdateMemberDateOfBirthUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMemberDateOfBirthUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateMemberDateOfBirthUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateMemberDateOfBirthUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateMemberDateOfBirthUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateMemberDateOfBirthUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateMemberDateOfBirthUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateMemberDateOfBirthUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateMemberDateOfBirthUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/member/update/dateOfBirth] updateMemberDateOfBirthUsingPUT", response, response.Code())
	}
}

// NewUpdateMemberDateOfBirthUsingPUTOK creates a UpdateMemberDateOfBirthUsingPUTOK with default headers values
func NewUpdateMemberDateOfBirthUsingPUTOK() *UpdateMemberDateOfBirthUsingPUTOK {
	return &UpdateMemberDateOfBirthUsingPUTOK{}
}

/*
UpdateMemberDateOfBirthUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateMemberDateOfBirthUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update member date of birth using p u t o k response has a 2xx status code
func (o *UpdateMemberDateOfBirthUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member date of birth using p u t o k response has a 3xx status code
func (o *UpdateMemberDateOfBirthUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member date of birth using p u t o k response has a 4xx status code
func (o *UpdateMemberDateOfBirthUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member date of birth using p u t o k response has a 5xx status code
func (o *UpdateMemberDateOfBirthUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update member date of birth using p u t o k response a status code equal to that given
func (o *UpdateMemberDateOfBirthUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update member date of birth using p u t o k response
func (o *UpdateMemberDateOfBirthUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateMemberDateOfBirthUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/dateOfBirth][%d] updateMemberDateOfBirthUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberDateOfBirthUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/dateOfBirth][%d] updateMemberDateOfBirthUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberDateOfBirthUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateMemberDateOfBirthUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMemberDateOfBirthUsingPUTCreated creates a UpdateMemberDateOfBirthUsingPUTCreated with default headers values
func NewUpdateMemberDateOfBirthUsingPUTCreated() *UpdateMemberDateOfBirthUsingPUTCreated {
	return &UpdateMemberDateOfBirthUsingPUTCreated{}
}

/*
UpdateMemberDateOfBirthUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateMemberDateOfBirthUsingPUTCreated struct {
}

// IsSuccess returns true when this update member date of birth using p u t created response has a 2xx status code
func (o *UpdateMemberDateOfBirthUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member date of birth using p u t created response has a 3xx status code
func (o *UpdateMemberDateOfBirthUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member date of birth using p u t created response has a 4xx status code
func (o *UpdateMemberDateOfBirthUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member date of birth using p u t created response has a 5xx status code
func (o *UpdateMemberDateOfBirthUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update member date of birth using p u t created response a status code equal to that given
func (o *UpdateMemberDateOfBirthUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update member date of birth using p u t created response
func (o *UpdateMemberDateOfBirthUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateMemberDateOfBirthUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/dateOfBirth][%d] updateMemberDateOfBirthUsingPUTCreated", 201)
}

func (o *UpdateMemberDateOfBirthUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/dateOfBirth][%d] updateMemberDateOfBirthUsingPUTCreated", 201)
}

func (o *UpdateMemberDateOfBirthUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberDateOfBirthUsingPUTBadRequest creates a UpdateMemberDateOfBirthUsingPUTBadRequest with default headers values
func NewUpdateMemberDateOfBirthUsingPUTBadRequest() *UpdateMemberDateOfBirthUsingPUTBadRequest {
	return &UpdateMemberDateOfBirthUsingPUTBadRequest{}
}

/*
UpdateMemberDateOfBirthUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateMemberDateOfBirthUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update member date of birth using p u t bad request response has a 2xx status code
func (o *UpdateMemberDateOfBirthUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member date of birth using p u t bad request response has a 3xx status code
func (o *UpdateMemberDateOfBirthUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member date of birth using p u t bad request response has a 4xx status code
func (o *UpdateMemberDateOfBirthUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member date of birth using p u t bad request response has a 5xx status code
func (o *UpdateMemberDateOfBirthUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update member date of birth using p u t bad request response a status code equal to that given
func (o *UpdateMemberDateOfBirthUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update member date of birth using p u t bad request response
func (o *UpdateMemberDateOfBirthUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateMemberDateOfBirthUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/dateOfBirth][%d] updateMemberDateOfBirthUsingPUTBadRequest", 400)
}

func (o *UpdateMemberDateOfBirthUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/dateOfBirth][%d] updateMemberDateOfBirthUsingPUTBadRequest", 400)
}

func (o *UpdateMemberDateOfBirthUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberDateOfBirthUsingPUTUnauthorized creates a UpdateMemberDateOfBirthUsingPUTUnauthorized with default headers values
func NewUpdateMemberDateOfBirthUsingPUTUnauthorized() *UpdateMemberDateOfBirthUsingPUTUnauthorized {
	return &UpdateMemberDateOfBirthUsingPUTUnauthorized{}
}

/*
UpdateMemberDateOfBirthUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateMemberDateOfBirthUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update member date of birth using p u t unauthorized response has a 2xx status code
func (o *UpdateMemberDateOfBirthUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member date of birth using p u t unauthorized response has a 3xx status code
func (o *UpdateMemberDateOfBirthUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member date of birth using p u t unauthorized response has a 4xx status code
func (o *UpdateMemberDateOfBirthUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member date of birth using p u t unauthorized response has a 5xx status code
func (o *UpdateMemberDateOfBirthUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update member date of birth using p u t unauthorized response a status code equal to that given
func (o *UpdateMemberDateOfBirthUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update member date of birth using p u t unauthorized response
func (o *UpdateMemberDateOfBirthUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateMemberDateOfBirthUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/dateOfBirth][%d] updateMemberDateOfBirthUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberDateOfBirthUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/dateOfBirth][%d] updateMemberDateOfBirthUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberDateOfBirthUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberDateOfBirthUsingPUTForbidden creates a UpdateMemberDateOfBirthUsingPUTForbidden with default headers values
func NewUpdateMemberDateOfBirthUsingPUTForbidden() *UpdateMemberDateOfBirthUsingPUTForbidden {
	return &UpdateMemberDateOfBirthUsingPUTForbidden{}
}

/*
UpdateMemberDateOfBirthUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateMemberDateOfBirthUsingPUTForbidden struct {
}

// IsSuccess returns true when this update member date of birth using p u t forbidden response has a 2xx status code
func (o *UpdateMemberDateOfBirthUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member date of birth using p u t forbidden response has a 3xx status code
func (o *UpdateMemberDateOfBirthUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member date of birth using p u t forbidden response has a 4xx status code
func (o *UpdateMemberDateOfBirthUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member date of birth using p u t forbidden response has a 5xx status code
func (o *UpdateMemberDateOfBirthUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update member date of birth using p u t forbidden response a status code equal to that given
func (o *UpdateMemberDateOfBirthUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update member date of birth using p u t forbidden response
func (o *UpdateMemberDateOfBirthUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateMemberDateOfBirthUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/dateOfBirth][%d] updateMemberDateOfBirthUsingPUTForbidden", 403)
}

func (o *UpdateMemberDateOfBirthUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/dateOfBirth][%d] updateMemberDateOfBirthUsingPUTForbidden", 403)
}

func (o *UpdateMemberDateOfBirthUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberDateOfBirthUsingPUTNotFound creates a UpdateMemberDateOfBirthUsingPUTNotFound with default headers values
func NewUpdateMemberDateOfBirthUsingPUTNotFound() *UpdateMemberDateOfBirthUsingPUTNotFound {
	return &UpdateMemberDateOfBirthUsingPUTNotFound{}
}

/*
UpdateMemberDateOfBirthUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateMemberDateOfBirthUsingPUTNotFound struct {
}

// IsSuccess returns true when this update member date of birth using p u t not found response has a 2xx status code
func (o *UpdateMemberDateOfBirthUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member date of birth using p u t not found response has a 3xx status code
func (o *UpdateMemberDateOfBirthUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member date of birth using p u t not found response has a 4xx status code
func (o *UpdateMemberDateOfBirthUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member date of birth using p u t not found response has a 5xx status code
func (o *UpdateMemberDateOfBirthUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update member date of birth using p u t not found response a status code equal to that given
func (o *UpdateMemberDateOfBirthUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update member date of birth using p u t not found response
func (o *UpdateMemberDateOfBirthUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateMemberDateOfBirthUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/dateOfBirth][%d] updateMemberDateOfBirthUsingPUTNotFound", 404)
}

func (o *UpdateMemberDateOfBirthUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/dateOfBirth][%d] updateMemberDateOfBirthUsingPUTNotFound", 404)
}

func (o *UpdateMemberDateOfBirthUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberDateOfBirthUsingPUTInternalServerError creates a UpdateMemberDateOfBirthUsingPUTInternalServerError with default headers values
func NewUpdateMemberDateOfBirthUsingPUTInternalServerError() *UpdateMemberDateOfBirthUsingPUTInternalServerError {
	return &UpdateMemberDateOfBirthUsingPUTInternalServerError{}
}

/*
UpdateMemberDateOfBirthUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateMemberDateOfBirthUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update member date of birth using p u t internal server error response has a 2xx status code
func (o *UpdateMemberDateOfBirthUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member date of birth using p u t internal server error response has a 3xx status code
func (o *UpdateMemberDateOfBirthUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member date of birth using p u t internal server error response has a 4xx status code
func (o *UpdateMemberDateOfBirthUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member date of birth using p u t internal server error response has a 5xx status code
func (o *UpdateMemberDateOfBirthUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update member date of birth using p u t internal server error response a status code equal to that given
func (o *UpdateMemberDateOfBirthUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update member date of birth using p u t internal server error response
func (o *UpdateMemberDateOfBirthUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateMemberDateOfBirthUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/dateOfBirth][%d] updateMemberDateOfBirthUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberDateOfBirthUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/dateOfBirth][%d] updateMemberDateOfBirthUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberDateOfBirthUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
