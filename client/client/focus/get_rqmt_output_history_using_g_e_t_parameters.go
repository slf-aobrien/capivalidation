// Code generated by go-swagger; DO NOT EDIT.

package focus

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetRqmtOutputHistoryUsingGETParams creates a new GetRqmtOutputHistoryUsingGETParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetRqmtOutputHistoryUsingGETParams() *GetRqmtOutputHistoryUsingGETParams {
	return &GetRqmtOutputHistoryUsingGETParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetRqmtOutputHistoryUsingGETParamsWithTimeout creates a new GetRqmtOutputHistoryUsingGETParams object
// with the ability to set a timeout on a request.
func NewGetRqmtOutputHistoryUsingGETParamsWithTimeout(timeout time.Duration) *GetRqmtOutputHistoryUsingGETParams {
	return &GetRqmtOutputHistoryUsingGETParams{
		timeout: timeout,
	}
}

// NewGetRqmtOutputHistoryUsingGETParamsWithContext creates a new GetRqmtOutputHistoryUsingGETParams object
// with the ability to set a context for a request.
func NewGetRqmtOutputHistoryUsingGETParamsWithContext(ctx context.Context) *GetRqmtOutputHistoryUsingGETParams {
	return &GetRqmtOutputHistoryUsingGETParams{
		Context: ctx,
	}
}

// NewGetRqmtOutputHistoryUsingGETParamsWithHTTPClient creates a new GetRqmtOutputHistoryUsingGETParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetRqmtOutputHistoryUsingGETParamsWithHTTPClient(client *http.Client) *GetRqmtOutputHistoryUsingGETParams {
	return &GetRqmtOutputHistoryUsingGETParams{
		HTTPClient: client,
	}
}

/*
GetRqmtOutputHistoryUsingGETParams contains all the parameters to send to the API endpoint

	for the get rqmt output history using g e t operation.

	Typically these are written to a http.Request.
*/
type GetRqmtOutputHistoryUsingGETParams struct {

	/* ClientID.

	   clientId
	*/
	ClientID string

	/* EffDate.

	   effDate
	*/
	EffDate string

	/* PolicyNumber.

	   policyNumber
	*/
	PolicyNumber string

	/* RequestApplication.

	   requestApplication
	*/
	RequestApplication string

	/* RequestUser.

	   requestUser
	*/
	RequestUser string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get rqmt output history using g e t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRqmtOutputHistoryUsingGETParams) WithDefaults() *GetRqmtOutputHistoryUsingGETParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get rqmt output history using g e t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRqmtOutputHistoryUsingGETParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get rqmt output history using g e t params
func (o *GetRqmtOutputHistoryUsingGETParams) WithTimeout(timeout time.Duration) *GetRqmtOutputHistoryUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get rqmt output history using g e t params
func (o *GetRqmtOutputHistoryUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get rqmt output history using g e t params
func (o *GetRqmtOutputHistoryUsingGETParams) WithContext(ctx context.Context) *GetRqmtOutputHistoryUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get rqmt output history using g e t params
func (o *GetRqmtOutputHistoryUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get rqmt output history using g e t params
func (o *GetRqmtOutputHistoryUsingGETParams) WithHTTPClient(client *http.Client) *GetRqmtOutputHistoryUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get rqmt output history using g e t params
func (o *GetRqmtOutputHistoryUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClientID adds the clientID to the get rqmt output history using g e t params
func (o *GetRqmtOutputHistoryUsingGETParams) WithClientID(clientID string) *GetRqmtOutputHistoryUsingGETParams {
	o.SetClientID(clientID)
	return o
}

// SetClientID adds the clientId to the get rqmt output history using g e t params
func (o *GetRqmtOutputHistoryUsingGETParams) SetClientID(clientID string) {
	o.ClientID = clientID
}

// WithEffDate adds the effDate to the get rqmt output history using g e t params
func (o *GetRqmtOutputHistoryUsingGETParams) WithEffDate(effDate string) *GetRqmtOutputHistoryUsingGETParams {
	o.SetEffDate(effDate)
	return o
}

// SetEffDate adds the effDate to the get rqmt output history using g e t params
func (o *GetRqmtOutputHistoryUsingGETParams) SetEffDate(effDate string) {
	o.EffDate = effDate
}

// WithPolicyNumber adds the policyNumber to the get rqmt output history using g e t params
func (o *GetRqmtOutputHistoryUsingGETParams) WithPolicyNumber(policyNumber string) *GetRqmtOutputHistoryUsingGETParams {
	o.SetPolicyNumber(policyNumber)
	return o
}

// SetPolicyNumber adds the policyNumber to the get rqmt output history using g e t params
func (o *GetRqmtOutputHistoryUsingGETParams) SetPolicyNumber(policyNumber string) {
	o.PolicyNumber = policyNumber
}

// WithRequestApplication adds the requestApplication to the get rqmt output history using g e t params
func (o *GetRqmtOutputHistoryUsingGETParams) WithRequestApplication(requestApplication string) *GetRqmtOutputHistoryUsingGETParams {
	o.SetRequestApplication(requestApplication)
	return o
}

// SetRequestApplication adds the requestApplication to the get rqmt output history using g e t params
func (o *GetRqmtOutputHistoryUsingGETParams) SetRequestApplication(requestApplication string) {
	o.RequestApplication = requestApplication
}

// WithRequestUser adds the requestUser to the get rqmt output history using g e t params
func (o *GetRqmtOutputHistoryUsingGETParams) WithRequestUser(requestUser string) *GetRqmtOutputHistoryUsingGETParams {
	o.SetRequestUser(requestUser)
	return o
}

// SetRequestUser adds the requestUser to the get rqmt output history using g e t params
func (o *GetRqmtOutputHistoryUsingGETParams) SetRequestUser(requestUser string) {
	o.RequestUser = requestUser
}

// WriteToRequest writes these params to a swagger request
func (o *GetRqmtOutputHistoryUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param clientId
	qrClientID := o.ClientID
	qClientID := qrClientID
	if qClientID != "" {

		if err := r.SetQueryParam("clientId", qClientID); err != nil {
			return err
		}
	}

	// query param effDate
	qrEffDate := o.EffDate
	qEffDate := qrEffDate
	if qEffDate != "" {

		if err := r.SetQueryParam("effDate", qEffDate); err != nil {
			return err
		}
	}

	// query param policyNumber
	qrPolicyNumber := o.PolicyNumber
	qPolicyNumber := qrPolicyNumber
	if qPolicyNumber != "" {

		if err := r.SetQueryParam("policyNumber", qPolicyNumber); err != nil {
			return err
		}
	}

	// query param requestApplication
	qrRequestApplication := o.RequestApplication
	qRequestApplication := qrRequestApplication
	if qRequestApplication != "" {

		if err := r.SetQueryParam("requestApplication", qRequestApplication); err != nil {
			return err
		}
	}

	// query param requestUser
	qrRequestUser := o.RequestUser
	qRequestUser := qrRequestUser
	if qRequestUser != "" {

		if err := r.SetQueryParam("requestUser", qRequestUser); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
