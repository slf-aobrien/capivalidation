// Code generated by go-swagger; DO NOT EDIT.

package bill

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetBillingInfoUsingGETParams creates a new GetBillingInfoUsingGETParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetBillingInfoUsingGETParams() *GetBillingInfoUsingGETParams {
	return &GetBillingInfoUsingGETParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetBillingInfoUsingGETParamsWithTimeout creates a new GetBillingInfoUsingGETParams object
// with the ability to set a timeout on a request.
func NewGetBillingInfoUsingGETParamsWithTimeout(timeout time.Duration) *GetBillingInfoUsingGETParams {
	return &GetBillingInfoUsingGETParams{
		timeout: timeout,
	}
}

// NewGetBillingInfoUsingGETParamsWithContext creates a new GetBillingInfoUsingGETParams object
// with the ability to set a context for a request.
func NewGetBillingInfoUsingGETParamsWithContext(ctx context.Context) *GetBillingInfoUsingGETParams {
	return &GetBillingInfoUsingGETParams{
		Context: ctx,
	}
}

// NewGetBillingInfoUsingGETParamsWithHTTPClient creates a new GetBillingInfoUsingGETParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetBillingInfoUsingGETParamsWithHTTPClient(client *http.Client) *GetBillingInfoUsingGETParams {
	return &GetBillingInfoUsingGETParams{
		HTTPClient: client,
	}
}

/*
GetBillingInfoUsingGETParams contains all the parameters to send to the API endpoint

	for the get billing info using g e t operation.

	Typically these are written to a http.Request.
*/
type GetBillingInfoUsingGETParams struct {

	/* BgrlKey.

	   bgrlKey
	*/
	BgrlKey *string

	/* BlthBillTypCd.

	   blthBillTypCd
	*/
	BlthBillTypCd *string

	/* CaseKey.

	   caseKey
	*/
	CaseKey *string

	/* EffectiveDate.

	   effectiveDate
	*/
	EffectiveDate string

	/* NumPreviousBills.

	   numPreviousBills
	*/
	NumPreviousBills string

	/* PolicyNumber.

	   policyNumber
	*/
	PolicyNumber string

	/* RcvbStatCd.

	   rcvbStatCd
	*/
	RcvbStatCd *string

	/* RequestApplication.

	   requestApplication
	*/
	RequestApplication string

	/* RequestUser.

	   requestUser
	*/
	RequestUser string

	/* StartDt.

	   startDt
	*/
	StartDt *string

	/* StopDt.

	   stopDt
	*/
	StopDt *string

	/* VarianceFormat.

	   varianceFormat
	*/
	VarianceFormat *string

	/* VarianceLevel.

	   varianceLevel
	*/
	VarianceLevel *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get billing info using g e t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetBillingInfoUsingGETParams) WithDefaults() *GetBillingInfoUsingGETParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get billing info using g e t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetBillingInfoUsingGETParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) WithTimeout(timeout time.Duration) *GetBillingInfoUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) WithContext(ctx context.Context) *GetBillingInfoUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) WithHTTPClient(client *http.Client) *GetBillingInfoUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBgrlKey adds the bgrlKey to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) WithBgrlKey(bgrlKey *string) *GetBillingInfoUsingGETParams {
	o.SetBgrlKey(bgrlKey)
	return o
}

// SetBgrlKey adds the bgrlKey to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) SetBgrlKey(bgrlKey *string) {
	o.BgrlKey = bgrlKey
}

// WithBlthBillTypCd adds the blthBillTypCd to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) WithBlthBillTypCd(blthBillTypCd *string) *GetBillingInfoUsingGETParams {
	o.SetBlthBillTypCd(blthBillTypCd)
	return o
}

// SetBlthBillTypCd adds the blthBillTypCd to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) SetBlthBillTypCd(blthBillTypCd *string) {
	o.BlthBillTypCd = blthBillTypCd
}

// WithCaseKey adds the caseKey to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) WithCaseKey(caseKey *string) *GetBillingInfoUsingGETParams {
	o.SetCaseKey(caseKey)
	return o
}

// SetCaseKey adds the caseKey to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) SetCaseKey(caseKey *string) {
	o.CaseKey = caseKey
}

// WithEffectiveDate adds the effectiveDate to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) WithEffectiveDate(effectiveDate string) *GetBillingInfoUsingGETParams {
	o.SetEffectiveDate(effectiveDate)
	return o
}

// SetEffectiveDate adds the effectiveDate to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) SetEffectiveDate(effectiveDate string) {
	o.EffectiveDate = effectiveDate
}

// WithNumPreviousBills adds the numPreviousBills to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) WithNumPreviousBills(numPreviousBills string) *GetBillingInfoUsingGETParams {
	o.SetNumPreviousBills(numPreviousBills)
	return o
}

// SetNumPreviousBills adds the numPreviousBills to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) SetNumPreviousBills(numPreviousBills string) {
	o.NumPreviousBills = numPreviousBills
}

// WithPolicyNumber adds the policyNumber to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) WithPolicyNumber(policyNumber string) *GetBillingInfoUsingGETParams {
	o.SetPolicyNumber(policyNumber)
	return o
}

// SetPolicyNumber adds the policyNumber to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) SetPolicyNumber(policyNumber string) {
	o.PolicyNumber = policyNumber
}

// WithRcvbStatCd adds the rcvbStatCd to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) WithRcvbStatCd(rcvbStatCd *string) *GetBillingInfoUsingGETParams {
	o.SetRcvbStatCd(rcvbStatCd)
	return o
}

// SetRcvbStatCd adds the rcvbStatCd to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) SetRcvbStatCd(rcvbStatCd *string) {
	o.RcvbStatCd = rcvbStatCd
}

// WithRequestApplication adds the requestApplication to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) WithRequestApplication(requestApplication string) *GetBillingInfoUsingGETParams {
	o.SetRequestApplication(requestApplication)
	return o
}

// SetRequestApplication adds the requestApplication to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) SetRequestApplication(requestApplication string) {
	o.RequestApplication = requestApplication
}

// WithRequestUser adds the requestUser to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) WithRequestUser(requestUser string) *GetBillingInfoUsingGETParams {
	o.SetRequestUser(requestUser)
	return o
}

// SetRequestUser adds the requestUser to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) SetRequestUser(requestUser string) {
	o.RequestUser = requestUser
}

// WithStartDt adds the startDt to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) WithStartDt(startDt *string) *GetBillingInfoUsingGETParams {
	o.SetStartDt(startDt)
	return o
}

// SetStartDt adds the startDt to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) SetStartDt(startDt *string) {
	o.StartDt = startDt
}

// WithStopDt adds the stopDt to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) WithStopDt(stopDt *string) *GetBillingInfoUsingGETParams {
	o.SetStopDt(stopDt)
	return o
}

// SetStopDt adds the stopDt to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) SetStopDt(stopDt *string) {
	o.StopDt = stopDt
}

// WithVarianceFormat adds the varianceFormat to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) WithVarianceFormat(varianceFormat *string) *GetBillingInfoUsingGETParams {
	o.SetVarianceFormat(varianceFormat)
	return o
}

// SetVarianceFormat adds the varianceFormat to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) SetVarianceFormat(varianceFormat *string) {
	o.VarianceFormat = varianceFormat
}

// WithVarianceLevel adds the varianceLevel to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) WithVarianceLevel(varianceLevel *string) *GetBillingInfoUsingGETParams {
	o.SetVarianceLevel(varianceLevel)
	return o
}

// SetVarianceLevel adds the varianceLevel to the get billing info using g e t params
func (o *GetBillingInfoUsingGETParams) SetVarianceLevel(varianceLevel *string) {
	o.VarianceLevel = varianceLevel
}

// WriteToRequest writes these params to a swagger request
func (o *GetBillingInfoUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.BgrlKey != nil {

		// query param bgrlKey
		var qrBgrlKey string

		if o.BgrlKey != nil {
			qrBgrlKey = *o.BgrlKey
		}
		qBgrlKey := qrBgrlKey
		if qBgrlKey != "" {

			if err := r.SetQueryParam("bgrlKey", qBgrlKey); err != nil {
				return err
			}
		}
	}

	if o.BlthBillTypCd != nil {

		// query param blthBillTypCd
		var qrBlthBillTypCd string

		if o.BlthBillTypCd != nil {
			qrBlthBillTypCd = *o.BlthBillTypCd
		}
		qBlthBillTypCd := qrBlthBillTypCd
		if qBlthBillTypCd != "" {

			if err := r.SetQueryParam("blthBillTypCd", qBlthBillTypCd); err != nil {
				return err
			}
		}
	}

	if o.CaseKey != nil {

		// query param caseKey
		var qrCaseKey string

		if o.CaseKey != nil {
			qrCaseKey = *o.CaseKey
		}
		qCaseKey := qrCaseKey
		if qCaseKey != "" {

			if err := r.SetQueryParam("caseKey", qCaseKey); err != nil {
				return err
			}
		}
	}

	// query param effectiveDate
	qrEffectiveDate := o.EffectiveDate
	qEffectiveDate := qrEffectiveDate
	if qEffectiveDate != "" {

		if err := r.SetQueryParam("effectiveDate", qEffectiveDate); err != nil {
			return err
		}
	}

	// query param numPreviousBills
	qrNumPreviousBills := o.NumPreviousBills
	qNumPreviousBills := qrNumPreviousBills
	if qNumPreviousBills != "" {

		if err := r.SetQueryParam("numPreviousBills", qNumPreviousBills); err != nil {
			return err
		}
	}

	// query param policyNumber
	qrPolicyNumber := o.PolicyNumber
	qPolicyNumber := qrPolicyNumber
	if qPolicyNumber != "" {

		if err := r.SetQueryParam("policyNumber", qPolicyNumber); err != nil {
			return err
		}
	}

	if o.RcvbStatCd != nil {

		// query param rcvbStatCd
		var qrRcvbStatCd string

		if o.RcvbStatCd != nil {
			qrRcvbStatCd = *o.RcvbStatCd
		}
		qRcvbStatCd := qrRcvbStatCd
		if qRcvbStatCd != "" {

			if err := r.SetQueryParam("rcvbStatCd", qRcvbStatCd); err != nil {
				return err
			}
		}
	}

	// query param requestApplication
	qrRequestApplication := o.RequestApplication
	qRequestApplication := qrRequestApplication
	if qRequestApplication != "" {

		if err := r.SetQueryParam("requestApplication", qRequestApplication); err != nil {
			return err
		}
	}

	// query param requestUser
	qrRequestUser := o.RequestUser
	qRequestUser := qrRequestUser
	if qRequestUser != "" {

		if err := r.SetQueryParam("requestUser", qRequestUser); err != nil {
			return err
		}
	}

	if o.StartDt != nil {

		// query param startDt
		var qrStartDt string

		if o.StartDt != nil {
			qrStartDt = *o.StartDt
		}
		qStartDt := qrStartDt
		if qStartDt != "" {

			if err := r.SetQueryParam("startDt", qStartDt); err != nil {
				return err
			}
		}
	}

	if o.StopDt != nil {

		// query param stopDt
		var qrStopDt string

		if o.StopDt != nil {
			qrStopDt = *o.StopDt
		}
		qStopDt := qrStopDt
		if qStopDt != "" {

			if err := r.SetQueryParam("stopDt", qStopDt); err != nil {
				return err
			}
		}
	}

	if o.VarianceFormat != nil {

		// query param varianceFormat
		var qrVarianceFormat string

		if o.VarianceFormat != nil {
			qrVarianceFormat = *o.VarianceFormat
		}
		qVarianceFormat := qrVarianceFormat
		if qVarianceFormat != "" {

			if err := r.SetQueryParam("varianceFormat", qVarianceFormat); err != nil {
				return err
			}
		}
	}

	if o.VarianceLevel != nil {

		// query param varianceLevel
		var qrVarianceLevel string

		if o.VarianceLevel != nil {
			qrVarianceLevel = *o.VarianceLevel
		}
		qVarianceLevel := qrVarianceLevel
		if qVarianceLevel != "" {

			if err := r.SetQueryParam("varianceLevel", qVarianceLevel); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
