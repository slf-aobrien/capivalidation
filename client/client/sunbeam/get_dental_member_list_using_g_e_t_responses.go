// Code generated by go-swagger; DO NOT EDIT.

package sunbeam

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetDentalMemberListUsingGETReader is a Reader for the GetDentalMemberListUsingGET structure.
type GetDentalMemberListUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDentalMemberListUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDentalMemberListUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDentalMemberListUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDentalMemberListUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDentalMemberListUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDentalMemberListUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDentalMemberListUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/sunbeam/dentalMemberList] getDentalMemberListUsingGET", response, response.Code())
	}
}

// NewGetDentalMemberListUsingGETOK creates a GetDentalMemberListUsingGETOK with default headers values
func NewGetDentalMemberListUsingGETOK() *GetDentalMemberListUsingGETOK {
	return &GetDentalMemberListUsingGETOK{}
}

/*
GetDentalMemberListUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetDentalMemberListUsingGETOK struct {
	Payload *models.ResponseWrapperListMbrEligDataDTO
}

// IsSuccess returns true when this get dental member list using g e t o k response has a 2xx status code
func (o *GetDentalMemberListUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get dental member list using g e t o k response has a 3xx status code
func (o *GetDentalMemberListUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dental member list using g e t o k response has a 4xx status code
func (o *GetDentalMemberListUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get dental member list using g e t o k response has a 5xx status code
func (o *GetDentalMemberListUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get dental member list using g e t o k response a status code equal to that given
func (o *GetDentalMemberListUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get dental member list using g e t o k response
func (o *GetDentalMemberListUsingGETOK) Code() int {
	return 200
}

func (o *GetDentalMemberListUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/dentalMemberList][%d] getDentalMemberListUsingGETOK %s", 200, payload)
}

func (o *GetDentalMemberListUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/dentalMemberList][%d] getDentalMemberListUsingGETOK %s", 200, payload)
}

func (o *GetDentalMemberListUsingGETOK) GetPayload() *models.ResponseWrapperListMbrEligDataDTO {
	return o.Payload
}

func (o *GetDentalMemberListUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperListMbrEligDataDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDentalMemberListUsingGETBadRequest creates a GetDentalMemberListUsingGETBadRequest with default headers values
func NewGetDentalMemberListUsingGETBadRequest() *GetDentalMemberListUsingGETBadRequest {
	return &GetDentalMemberListUsingGETBadRequest{}
}

/*
GetDentalMemberListUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDentalMemberListUsingGETBadRequest struct {
}

// IsSuccess returns true when this get dental member list using g e t bad request response has a 2xx status code
func (o *GetDentalMemberListUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dental member list using g e t bad request response has a 3xx status code
func (o *GetDentalMemberListUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dental member list using g e t bad request response has a 4xx status code
func (o *GetDentalMemberListUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get dental member list using g e t bad request response has a 5xx status code
func (o *GetDentalMemberListUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get dental member list using g e t bad request response a status code equal to that given
func (o *GetDentalMemberListUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get dental member list using g e t bad request response
func (o *GetDentalMemberListUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetDentalMemberListUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/dentalMemberList][%d] getDentalMemberListUsingGETBadRequest", 400)
}

func (o *GetDentalMemberListUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/dentalMemberList][%d] getDentalMemberListUsingGETBadRequest", 400)
}

func (o *GetDentalMemberListUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDentalMemberListUsingGETUnauthorized creates a GetDentalMemberListUsingGETUnauthorized with default headers values
func NewGetDentalMemberListUsingGETUnauthorized() *GetDentalMemberListUsingGETUnauthorized {
	return &GetDentalMemberListUsingGETUnauthorized{}
}

/*
GetDentalMemberListUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDentalMemberListUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get dental member list using g e t unauthorized response has a 2xx status code
func (o *GetDentalMemberListUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dental member list using g e t unauthorized response has a 3xx status code
func (o *GetDentalMemberListUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dental member list using g e t unauthorized response has a 4xx status code
func (o *GetDentalMemberListUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get dental member list using g e t unauthorized response has a 5xx status code
func (o *GetDentalMemberListUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get dental member list using g e t unauthorized response a status code equal to that given
func (o *GetDentalMemberListUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get dental member list using g e t unauthorized response
func (o *GetDentalMemberListUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetDentalMemberListUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/dentalMemberList][%d] getDentalMemberListUsingGETUnauthorized", 401)
}

func (o *GetDentalMemberListUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/dentalMemberList][%d] getDentalMemberListUsingGETUnauthorized", 401)
}

func (o *GetDentalMemberListUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDentalMemberListUsingGETForbidden creates a GetDentalMemberListUsingGETForbidden with default headers values
func NewGetDentalMemberListUsingGETForbidden() *GetDentalMemberListUsingGETForbidden {
	return &GetDentalMemberListUsingGETForbidden{}
}

/*
GetDentalMemberListUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDentalMemberListUsingGETForbidden struct {
}

// IsSuccess returns true when this get dental member list using g e t forbidden response has a 2xx status code
func (o *GetDentalMemberListUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dental member list using g e t forbidden response has a 3xx status code
func (o *GetDentalMemberListUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dental member list using g e t forbidden response has a 4xx status code
func (o *GetDentalMemberListUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get dental member list using g e t forbidden response has a 5xx status code
func (o *GetDentalMemberListUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get dental member list using g e t forbidden response a status code equal to that given
func (o *GetDentalMemberListUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get dental member list using g e t forbidden response
func (o *GetDentalMemberListUsingGETForbidden) Code() int {
	return 403
}

func (o *GetDentalMemberListUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/dentalMemberList][%d] getDentalMemberListUsingGETForbidden", 403)
}

func (o *GetDentalMemberListUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/dentalMemberList][%d] getDentalMemberListUsingGETForbidden", 403)
}

func (o *GetDentalMemberListUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDentalMemberListUsingGETNotFound creates a GetDentalMemberListUsingGETNotFound with default headers values
func NewGetDentalMemberListUsingGETNotFound() *GetDentalMemberListUsingGETNotFound {
	return &GetDentalMemberListUsingGETNotFound{}
}

/*
GetDentalMemberListUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDentalMemberListUsingGETNotFound struct {
}

// IsSuccess returns true when this get dental member list using g e t not found response has a 2xx status code
func (o *GetDentalMemberListUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dental member list using g e t not found response has a 3xx status code
func (o *GetDentalMemberListUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dental member list using g e t not found response has a 4xx status code
func (o *GetDentalMemberListUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get dental member list using g e t not found response has a 5xx status code
func (o *GetDentalMemberListUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get dental member list using g e t not found response a status code equal to that given
func (o *GetDentalMemberListUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get dental member list using g e t not found response
func (o *GetDentalMemberListUsingGETNotFound) Code() int {
	return 404
}

func (o *GetDentalMemberListUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/dentalMemberList][%d] getDentalMemberListUsingGETNotFound", 404)
}

func (o *GetDentalMemberListUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/dentalMemberList][%d] getDentalMemberListUsingGETNotFound", 404)
}

func (o *GetDentalMemberListUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDentalMemberListUsingGETInternalServerError creates a GetDentalMemberListUsingGETInternalServerError with default headers values
func NewGetDentalMemberListUsingGETInternalServerError() *GetDentalMemberListUsingGETInternalServerError {
	return &GetDentalMemberListUsingGETInternalServerError{}
}

/*
GetDentalMemberListUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetDentalMemberListUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get dental member list using g e t internal server error response has a 2xx status code
func (o *GetDentalMemberListUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dental member list using g e t internal server error response has a 3xx status code
func (o *GetDentalMemberListUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dental member list using g e t internal server error response has a 4xx status code
func (o *GetDentalMemberListUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get dental member list using g e t internal server error response has a 5xx status code
func (o *GetDentalMemberListUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get dental member list using g e t internal server error response a status code equal to that given
func (o *GetDentalMemberListUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get dental member list using g e t internal server error response
func (o *GetDentalMemberListUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetDentalMemberListUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/dentalMemberList][%d] getDentalMemberListUsingGETInternalServerError", 500)
}

func (o *GetDentalMemberListUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/sunbeam/dentalMemberList][%d] getDentalMemberListUsingGETInternalServerError", 500)
}

func (o *GetDentalMemberListUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
