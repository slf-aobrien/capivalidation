// Code generated by go-swagger; DO NOT EDIT.

package dependent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateDateOfBirthUsingPUTReader is a Reader for the UpdateDateOfBirthUsingPUT structure.
type UpdateDateOfBirthUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateDateOfBirthUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateDateOfBirthUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateDateOfBirthUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateDateOfBirthUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateDateOfBirthUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateDateOfBirthUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateDateOfBirthUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateDateOfBirthUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/dependent/update/dateOfBirth] updateDateOfBirthUsingPUT", response, response.Code())
	}
}

// NewUpdateDateOfBirthUsingPUTOK creates a UpdateDateOfBirthUsingPUTOK with default headers values
func NewUpdateDateOfBirthUsingPUTOK() *UpdateDateOfBirthUsingPUTOK {
	return &UpdateDateOfBirthUsingPUTOK{}
}

/*
UpdateDateOfBirthUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateDateOfBirthUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update date of birth using p u t o k response has a 2xx status code
func (o *UpdateDateOfBirthUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update date of birth using p u t o k response has a 3xx status code
func (o *UpdateDateOfBirthUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update date of birth using p u t o k response has a 4xx status code
func (o *UpdateDateOfBirthUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update date of birth using p u t o k response has a 5xx status code
func (o *UpdateDateOfBirthUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update date of birth using p u t o k response a status code equal to that given
func (o *UpdateDateOfBirthUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update date of birth using p u t o k response
func (o *UpdateDateOfBirthUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateDateOfBirthUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/dateOfBirth][%d] updateDateOfBirthUsingPUTOK %s", 200, payload)
}

func (o *UpdateDateOfBirthUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/dateOfBirth][%d] updateDateOfBirthUsingPUTOK %s", 200, payload)
}

func (o *UpdateDateOfBirthUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateDateOfBirthUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDateOfBirthUsingPUTCreated creates a UpdateDateOfBirthUsingPUTCreated with default headers values
func NewUpdateDateOfBirthUsingPUTCreated() *UpdateDateOfBirthUsingPUTCreated {
	return &UpdateDateOfBirthUsingPUTCreated{}
}

/*
UpdateDateOfBirthUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateDateOfBirthUsingPUTCreated struct {
}

// IsSuccess returns true when this update date of birth using p u t created response has a 2xx status code
func (o *UpdateDateOfBirthUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update date of birth using p u t created response has a 3xx status code
func (o *UpdateDateOfBirthUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update date of birth using p u t created response has a 4xx status code
func (o *UpdateDateOfBirthUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update date of birth using p u t created response has a 5xx status code
func (o *UpdateDateOfBirthUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update date of birth using p u t created response a status code equal to that given
func (o *UpdateDateOfBirthUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update date of birth using p u t created response
func (o *UpdateDateOfBirthUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateDateOfBirthUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/dateOfBirth][%d] updateDateOfBirthUsingPUTCreated", 201)
}

func (o *UpdateDateOfBirthUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/dateOfBirth][%d] updateDateOfBirthUsingPUTCreated", 201)
}

func (o *UpdateDateOfBirthUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDateOfBirthUsingPUTBadRequest creates a UpdateDateOfBirthUsingPUTBadRequest with default headers values
func NewUpdateDateOfBirthUsingPUTBadRequest() *UpdateDateOfBirthUsingPUTBadRequest {
	return &UpdateDateOfBirthUsingPUTBadRequest{}
}

/*
UpdateDateOfBirthUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateDateOfBirthUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update date of birth using p u t bad request response has a 2xx status code
func (o *UpdateDateOfBirthUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update date of birth using p u t bad request response has a 3xx status code
func (o *UpdateDateOfBirthUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update date of birth using p u t bad request response has a 4xx status code
func (o *UpdateDateOfBirthUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update date of birth using p u t bad request response has a 5xx status code
func (o *UpdateDateOfBirthUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update date of birth using p u t bad request response a status code equal to that given
func (o *UpdateDateOfBirthUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update date of birth using p u t bad request response
func (o *UpdateDateOfBirthUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateDateOfBirthUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/dateOfBirth][%d] updateDateOfBirthUsingPUTBadRequest", 400)
}

func (o *UpdateDateOfBirthUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/dateOfBirth][%d] updateDateOfBirthUsingPUTBadRequest", 400)
}

func (o *UpdateDateOfBirthUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDateOfBirthUsingPUTUnauthorized creates a UpdateDateOfBirthUsingPUTUnauthorized with default headers values
func NewUpdateDateOfBirthUsingPUTUnauthorized() *UpdateDateOfBirthUsingPUTUnauthorized {
	return &UpdateDateOfBirthUsingPUTUnauthorized{}
}

/*
UpdateDateOfBirthUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateDateOfBirthUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update date of birth using p u t unauthorized response has a 2xx status code
func (o *UpdateDateOfBirthUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update date of birth using p u t unauthorized response has a 3xx status code
func (o *UpdateDateOfBirthUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update date of birth using p u t unauthorized response has a 4xx status code
func (o *UpdateDateOfBirthUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update date of birth using p u t unauthorized response has a 5xx status code
func (o *UpdateDateOfBirthUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update date of birth using p u t unauthorized response a status code equal to that given
func (o *UpdateDateOfBirthUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update date of birth using p u t unauthorized response
func (o *UpdateDateOfBirthUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateDateOfBirthUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/dateOfBirth][%d] updateDateOfBirthUsingPUTUnauthorized", 401)
}

func (o *UpdateDateOfBirthUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/dateOfBirth][%d] updateDateOfBirthUsingPUTUnauthorized", 401)
}

func (o *UpdateDateOfBirthUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDateOfBirthUsingPUTForbidden creates a UpdateDateOfBirthUsingPUTForbidden with default headers values
func NewUpdateDateOfBirthUsingPUTForbidden() *UpdateDateOfBirthUsingPUTForbidden {
	return &UpdateDateOfBirthUsingPUTForbidden{}
}

/*
UpdateDateOfBirthUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateDateOfBirthUsingPUTForbidden struct {
}

// IsSuccess returns true when this update date of birth using p u t forbidden response has a 2xx status code
func (o *UpdateDateOfBirthUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update date of birth using p u t forbidden response has a 3xx status code
func (o *UpdateDateOfBirthUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update date of birth using p u t forbidden response has a 4xx status code
func (o *UpdateDateOfBirthUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update date of birth using p u t forbidden response has a 5xx status code
func (o *UpdateDateOfBirthUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update date of birth using p u t forbidden response a status code equal to that given
func (o *UpdateDateOfBirthUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update date of birth using p u t forbidden response
func (o *UpdateDateOfBirthUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateDateOfBirthUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/dateOfBirth][%d] updateDateOfBirthUsingPUTForbidden", 403)
}

func (o *UpdateDateOfBirthUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/dateOfBirth][%d] updateDateOfBirthUsingPUTForbidden", 403)
}

func (o *UpdateDateOfBirthUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDateOfBirthUsingPUTNotFound creates a UpdateDateOfBirthUsingPUTNotFound with default headers values
func NewUpdateDateOfBirthUsingPUTNotFound() *UpdateDateOfBirthUsingPUTNotFound {
	return &UpdateDateOfBirthUsingPUTNotFound{}
}

/*
UpdateDateOfBirthUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateDateOfBirthUsingPUTNotFound struct {
}

// IsSuccess returns true when this update date of birth using p u t not found response has a 2xx status code
func (o *UpdateDateOfBirthUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update date of birth using p u t not found response has a 3xx status code
func (o *UpdateDateOfBirthUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update date of birth using p u t not found response has a 4xx status code
func (o *UpdateDateOfBirthUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update date of birth using p u t not found response has a 5xx status code
func (o *UpdateDateOfBirthUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update date of birth using p u t not found response a status code equal to that given
func (o *UpdateDateOfBirthUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update date of birth using p u t not found response
func (o *UpdateDateOfBirthUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateDateOfBirthUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/dateOfBirth][%d] updateDateOfBirthUsingPUTNotFound", 404)
}

func (o *UpdateDateOfBirthUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/dateOfBirth][%d] updateDateOfBirthUsingPUTNotFound", 404)
}

func (o *UpdateDateOfBirthUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDateOfBirthUsingPUTInternalServerError creates a UpdateDateOfBirthUsingPUTInternalServerError with default headers values
func NewUpdateDateOfBirthUsingPUTInternalServerError() *UpdateDateOfBirthUsingPUTInternalServerError {
	return &UpdateDateOfBirthUsingPUTInternalServerError{}
}

/*
UpdateDateOfBirthUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateDateOfBirthUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update date of birth using p u t internal server error response has a 2xx status code
func (o *UpdateDateOfBirthUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update date of birth using p u t internal server error response has a 3xx status code
func (o *UpdateDateOfBirthUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update date of birth using p u t internal server error response has a 4xx status code
func (o *UpdateDateOfBirthUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update date of birth using p u t internal server error response has a 5xx status code
func (o *UpdateDateOfBirthUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update date of birth using p u t internal server error response a status code equal to that given
func (o *UpdateDateOfBirthUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update date of birth using p u t internal server error response
func (o *UpdateDateOfBirthUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateDateOfBirthUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/dateOfBirth][%d] updateDateOfBirthUsingPUTInternalServerError", 500)
}

func (o *UpdateDateOfBirthUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/dependent/update/dateOfBirth][%d] updateDateOfBirthUsingPUTInternalServerError", 500)
}

func (o *UpdateDateOfBirthUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
