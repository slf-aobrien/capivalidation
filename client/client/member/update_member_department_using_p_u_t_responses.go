// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateMemberDepartmentUsingPUTReader is a Reader for the UpdateMemberDepartmentUsingPUT structure.
type UpdateMemberDepartmentUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMemberDepartmentUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateMemberDepartmentUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateMemberDepartmentUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateMemberDepartmentUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateMemberDepartmentUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateMemberDepartmentUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateMemberDepartmentUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateMemberDepartmentUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/member/update/department] updateMemberDepartmentUsingPUT", response, response.Code())
	}
}

// NewUpdateMemberDepartmentUsingPUTOK creates a UpdateMemberDepartmentUsingPUTOK with default headers values
func NewUpdateMemberDepartmentUsingPUTOK() *UpdateMemberDepartmentUsingPUTOK {
	return &UpdateMemberDepartmentUsingPUTOK{}
}

/*
UpdateMemberDepartmentUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateMemberDepartmentUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update member department using p u t o k response has a 2xx status code
func (o *UpdateMemberDepartmentUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member department using p u t o k response has a 3xx status code
func (o *UpdateMemberDepartmentUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member department using p u t o k response has a 4xx status code
func (o *UpdateMemberDepartmentUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member department using p u t o k response has a 5xx status code
func (o *UpdateMemberDepartmentUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update member department using p u t o k response a status code equal to that given
func (o *UpdateMemberDepartmentUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update member department using p u t o k response
func (o *UpdateMemberDepartmentUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateMemberDepartmentUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/department][%d] updateMemberDepartmentUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberDepartmentUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/department][%d] updateMemberDepartmentUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberDepartmentUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateMemberDepartmentUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMemberDepartmentUsingPUTCreated creates a UpdateMemberDepartmentUsingPUTCreated with default headers values
func NewUpdateMemberDepartmentUsingPUTCreated() *UpdateMemberDepartmentUsingPUTCreated {
	return &UpdateMemberDepartmentUsingPUTCreated{}
}

/*
UpdateMemberDepartmentUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateMemberDepartmentUsingPUTCreated struct {
}

// IsSuccess returns true when this update member department using p u t created response has a 2xx status code
func (o *UpdateMemberDepartmentUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member department using p u t created response has a 3xx status code
func (o *UpdateMemberDepartmentUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member department using p u t created response has a 4xx status code
func (o *UpdateMemberDepartmentUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member department using p u t created response has a 5xx status code
func (o *UpdateMemberDepartmentUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update member department using p u t created response a status code equal to that given
func (o *UpdateMemberDepartmentUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update member department using p u t created response
func (o *UpdateMemberDepartmentUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateMemberDepartmentUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/department][%d] updateMemberDepartmentUsingPUTCreated", 201)
}

func (o *UpdateMemberDepartmentUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/department][%d] updateMemberDepartmentUsingPUTCreated", 201)
}

func (o *UpdateMemberDepartmentUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberDepartmentUsingPUTBadRequest creates a UpdateMemberDepartmentUsingPUTBadRequest with default headers values
func NewUpdateMemberDepartmentUsingPUTBadRequest() *UpdateMemberDepartmentUsingPUTBadRequest {
	return &UpdateMemberDepartmentUsingPUTBadRequest{}
}

/*
UpdateMemberDepartmentUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateMemberDepartmentUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update member department using p u t bad request response has a 2xx status code
func (o *UpdateMemberDepartmentUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member department using p u t bad request response has a 3xx status code
func (o *UpdateMemberDepartmentUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member department using p u t bad request response has a 4xx status code
func (o *UpdateMemberDepartmentUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member department using p u t bad request response has a 5xx status code
func (o *UpdateMemberDepartmentUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update member department using p u t bad request response a status code equal to that given
func (o *UpdateMemberDepartmentUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update member department using p u t bad request response
func (o *UpdateMemberDepartmentUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateMemberDepartmentUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/department][%d] updateMemberDepartmentUsingPUTBadRequest", 400)
}

func (o *UpdateMemberDepartmentUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/department][%d] updateMemberDepartmentUsingPUTBadRequest", 400)
}

func (o *UpdateMemberDepartmentUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberDepartmentUsingPUTUnauthorized creates a UpdateMemberDepartmentUsingPUTUnauthorized with default headers values
func NewUpdateMemberDepartmentUsingPUTUnauthorized() *UpdateMemberDepartmentUsingPUTUnauthorized {
	return &UpdateMemberDepartmentUsingPUTUnauthorized{}
}

/*
UpdateMemberDepartmentUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateMemberDepartmentUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update member department using p u t unauthorized response has a 2xx status code
func (o *UpdateMemberDepartmentUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member department using p u t unauthorized response has a 3xx status code
func (o *UpdateMemberDepartmentUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member department using p u t unauthorized response has a 4xx status code
func (o *UpdateMemberDepartmentUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member department using p u t unauthorized response has a 5xx status code
func (o *UpdateMemberDepartmentUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update member department using p u t unauthorized response a status code equal to that given
func (o *UpdateMemberDepartmentUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update member department using p u t unauthorized response
func (o *UpdateMemberDepartmentUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateMemberDepartmentUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/department][%d] updateMemberDepartmentUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberDepartmentUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/department][%d] updateMemberDepartmentUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberDepartmentUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberDepartmentUsingPUTForbidden creates a UpdateMemberDepartmentUsingPUTForbidden with default headers values
func NewUpdateMemberDepartmentUsingPUTForbidden() *UpdateMemberDepartmentUsingPUTForbidden {
	return &UpdateMemberDepartmentUsingPUTForbidden{}
}

/*
UpdateMemberDepartmentUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateMemberDepartmentUsingPUTForbidden struct {
}

// IsSuccess returns true when this update member department using p u t forbidden response has a 2xx status code
func (o *UpdateMemberDepartmentUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member department using p u t forbidden response has a 3xx status code
func (o *UpdateMemberDepartmentUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member department using p u t forbidden response has a 4xx status code
func (o *UpdateMemberDepartmentUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member department using p u t forbidden response has a 5xx status code
func (o *UpdateMemberDepartmentUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update member department using p u t forbidden response a status code equal to that given
func (o *UpdateMemberDepartmentUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update member department using p u t forbidden response
func (o *UpdateMemberDepartmentUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateMemberDepartmentUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/department][%d] updateMemberDepartmentUsingPUTForbidden", 403)
}

func (o *UpdateMemberDepartmentUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/department][%d] updateMemberDepartmentUsingPUTForbidden", 403)
}

func (o *UpdateMemberDepartmentUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberDepartmentUsingPUTNotFound creates a UpdateMemberDepartmentUsingPUTNotFound with default headers values
func NewUpdateMemberDepartmentUsingPUTNotFound() *UpdateMemberDepartmentUsingPUTNotFound {
	return &UpdateMemberDepartmentUsingPUTNotFound{}
}

/*
UpdateMemberDepartmentUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateMemberDepartmentUsingPUTNotFound struct {
}

// IsSuccess returns true when this update member department using p u t not found response has a 2xx status code
func (o *UpdateMemberDepartmentUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member department using p u t not found response has a 3xx status code
func (o *UpdateMemberDepartmentUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member department using p u t not found response has a 4xx status code
func (o *UpdateMemberDepartmentUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member department using p u t not found response has a 5xx status code
func (o *UpdateMemberDepartmentUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update member department using p u t not found response a status code equal to that given
func (o *UpdateMemberDepartmentUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update member department using p u t not found response
func (o *UpdateMemberDepartmentUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateMemberDepartmentUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/department][%d] updateMemberDepartmentUsingPUTNotFound", 404)
}

func (o *UpdateMemberDepartmentUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/department][%d] updateMemberDepartmentUsingPUTNotFound", 404)
}

func (o *UpdateMemberDepartmentUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberDepartmentUsingPUTInternalServerError creates a UpdateMemberDepartmentUsingPUTInternalServerError with default headers values
func NewUpdateMemberDepartmentUsingPUTInternalServerError() *UpdateMemberDepartmentUsingPUTInternalServerError {
	return &UpdateMemberDepartmentUsingPUTInternalServerError{}
}

/*
UpdateMemberDepartmentUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateMemberDepartmentUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update member department using p u t internal server error response has a 2xx status code
func (o *UpdateMemberDepartmentUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member department using p u t internal server error response has a 3xx status code
func (o *UpdateMemberDepartmentUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member department using p u t internal server error response has a 4xx status code
func (o *UpdateMemberDepartmentUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member department using p u t internal server error response has a 5xx status code
func (o *UpdateMemberDepartmentUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update member department using p u t internal server error response a status code equal to that given
func (o *UpdateMemberDepartmentUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update member department using p u t internal server error response
func (o *UpdateMemberDepartmentUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateMemberDepartmentUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/department][%d] updateMemberDepartmentUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberDepartmentUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/department][%d] updateMemberDepartmentUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberDepartmentUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
