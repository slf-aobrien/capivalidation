// Code generated by go-swagger; DO NOT EDIT.

package system

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetEnumUsingGETReader is a Reader for the GetEnumUsingGET structure.
type GetEnumUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEnumUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEnumUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetEnumUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetEnumUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEnumUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEnumUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEnumUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/system/enum] getEnumUsingGET", response, response.Code())
	}
}

// NewGetEnumUsingGETOK creates a GetEnumUsingGETOK with default headers values
func NewGetEnumUsingGETOK() *GetEnumUsingGETOK {
	return &GetEnumUsingGETOK{}
}

/*
GetEnumUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetEnumUsingGETOK struct {
	Payload *models.ResponseWrapperMapStringMapStringString
}

// IsSuccess returns true when this get enum using g e t o k response has a 2xx status code
func (o *GetEnumUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get enum using g e t o k response has a 3xx status code
func (o *GetEnumUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get enum using g e t o k response has a 4xx status code
func (o *GetEnumUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get enum using g e t o k response has a 5xx status code
func (o *GetEnumUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get enum using g e t o k response a status code equal to that given
func (o *GetEnumUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get enum using g e t o k response
func (o *GetEnumUsingGETOK) Code() int {
	return 200
}

func (o *GetEnumUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/system/enum][%d] getEnumUsingGETOK %s", 200, payload)
}

func (o *GetEnumUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/system/enum][%d] getEnumUsingGETOK %s", 200, payload)
}

func (o *GetEnumUsingGETOK) GetPayload() *models.ResponseWrapperMapStringMapStringString {
	return o.Payload
}

func (o *GetEnumUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperMapStringMapStringString)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEnumUsingGETBadRequest creates a GetEnumUsingGETBadRequest with default headers values
func NewGetEnumUsingGETBadRequest() *GetEnumUsingGETBadRequest {
	return &GetEnumUsingGETBadRequest{}
}

/*
GetEnumUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetEnumUsingGETBadRequest struct {
}

// IsSuccess returns true when this get enum using g e t bad request response has a 2xx status code
func (o *GetEnumUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get enum using g e t bad request response has a 3xx status code
func (o *GetEnumUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get enum using g e t bad request response has a 4xx status code
func (o *GetEnumUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get enum using g e t bad request response has a 5xx status code
func (o *GetEnumUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get enum using g e t bad request response a status code equal to that given
func (o *GetEnumUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get enum using g e t bad request response
func (o *GetEnumUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetEnumUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/enum][%d] getEnumUsingGETBadRequest", 400)
}

func (o *GetEnumUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/enum][%d] getEnumUsingGETBadRequest", 400)
}

func (o *GetEnumUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEnumUsingGETUnauthorized creates a GetEnumUsingGETUnauthorized with default headers values
func NewGetEnumUsingGETUnauthorized() *GetEnumUsingGETUnauthorized {
	return &GetEnumUsingGETUnauthorized{}
}

/*
GetEnumUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetEnumUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get enum using g e t unauthorized response has a 2xx status code
func (o *GetEnumUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get enum using g e t unauthorized response has a 3xx status code
func (o *GetEnumUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get enum using g e t unauthorized response has a 4xx status code
func (o *GetEnumUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get enum using g e t unauthorized response has a 5xx status code
func (o *GetEnumUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get enum using g e t unauthorized response a status code equal to that given
func (o *GetEnumUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get enum using g e t unauthorized response
func (o *GetEnumUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetEnumUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/enum][%d] getEnumUsingGETUnauthorized", 401)
}

func (o *GetEnumUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/enum][%d] getEnumUsingGETUnauthorized", 401)
}

func (o *GetEnumUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEnumUsingGETForbidden creates a GetEnumUsingGETForbidden with default headers values
func NewGetEnumUsingGETForbidden() *GetEnumUsingGETForbidden {
	return &GetEnumUsingGETForbidden{}
}

/*
GetEnumUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetEnumUsingGETForbidden struct {
}

// IsSuccess returns true when this get enum using g e t forbidden response has a 2xx status code
func (o *GetEnumUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get enum using g e t forbidden response has a 3xx status code
func (o *GetEnumUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get enum using g e t forbidden response has a 4xx status code
func (o *GetEnumUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get enum using g e t forbidden response has a 5xx status code
func (o *GetEnumUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get enum using g e t forbidden response a status code equal to that given
func (o *GetEnumUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get enum using g e t forbidden response
func (o *GetEnumUsingGETForbidden) Code() int {
	return 403
}

func (o *GetEnumUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/enum][%d] getEnumUsingGETForbidden", 403)
}

func (o *GetEnumUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/enum][%d] getEnumUsingGETForbidden", 403)
}

func (o *GetEnumUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEnumUsingGETNotFound creates a GetEnumUsingGETNotFound with default headers values
func NewGetEnumUsingGETNotFound() *GetEnumUsingGETNotFound {
	return &GetEnumUsingGETNotFound{}
}

/*
GetEnumUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetEnumUsingGETNotFound struct {
}

// IsSuccess returns true when this get enum using g e t not found response has a 2xx status code
func (o *GetEnumUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get enum using g e t not found response has a 3xx status code
func (o *GetEnumUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get enum using g e t not found response has a 4xx status code
func (o *GetEnumUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get enum using g e t not found response has a 5xx status code
func (o *GetEnumUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get enum using g e t not found response a status code equal to that given
func (o *GetEnumUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get enum using g e t not found response
func (o *GetEnumUsingGETNotFound) Code() int {
	return 404
}

func (o *GetEnumUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/enum][%d] getEnumUsingGETNotFound", 404)
}

func (o *GetEnumUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/enum][%d] getEnumUsingGETNotFound", 404)
}

func (o *GetEnumUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEnumUsingGETInternalServerError creates a GetEnumUsingGETInternalServerError with default headers values
func NewGetEnumUsingGETInternalServerError() *GetEnumUsingGETInternalServerError {
	return &GetEnumUsingGETInternalServerError{}
}

/*
GetEnumUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetEnumUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get enum using g e t internal server error response has a 2xx status code
func (o *GetEnumUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get enum using g e t internal server error response has a 3xx status code
func (o *GetEnumUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get enum using g e t internal server error response has a 4xx status code
func (o *GetEnumUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get enum using g e t internal server error response has a 5xx status code
func (o *GetEnumUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get enum using g e t internal server error response a status code equal to that given
func (o *GetEnumUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get enum using g e t internal server error response
func (o *GetEnumUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetEnumUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/enum][%d] getEnumUsingGETInternalServerError", 500)
}

func (o *GetEnumUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/enum][%d] getEnumUsingGETInternalServerError", 500)
}

func (o *GetEnumUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
