// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetMemberCoverageStatementUsingGETReader is a Reader for the GetMemberCoverageStatementUsingGET structure.
type GetMemberCoverageStatementUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMemberCoverageStatementUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMemberCoverageStatementUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetMemberCoverageStatementUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetMemberCoverageStatementUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMemberCoverageStatementUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMemberCoverageStatementUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetMemberCoverageStatementUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/member/coverageStatement] getMemberCoverageStatementUsingGET", response, response.Code())
	}
}

// NewGetMemberCoverageStatementUsingGETOK creates a GetMemberCoverageStatementUsingGETOK with default headers values
func NewGetMemberCoverageStatementUsingGETOK() *GetMemberCoverageStatementUsingGETOK {
	return &GetMemberCoverageStatementUsingGETOK{}
}

/*
GetMemberCoverageStatementUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetMemberCoverageStatementUsingGETOK struct {
	Payload *models.ResponseWrapperMemberListDTO
}

// IsSuccess returns true when this get member coverage statement using g e t o k response has a 2xx status code
func (o *GetMemberCoverageStatementUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get member coverage statement using g e t o k response has a 3xx status code
func (o *GetMemberCoverageStatementUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member coverage statement using g e t o k response has a 4xx status code
func (o *GetMemberCoverageStatementUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get member coverage statement using g e t o k response has a 5xx status code
func (o *GetMemberCoverageStatementUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get member coverage statement using g e t o k response a status code equal to that given
func (o *GetMemberCoverageStatementUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get member coverage statement using g e t o k response
func (o *GetMemberCoverageStatementUsingGETOK) Code() int {
	return 200
}

func (o *GetMemberCoverageStatementUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatement][%d] getMemberCoverageStatementUsingGETOK %s", 200, payload)
}

func (o *GetMemberCoverageStatementUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatement][%d] getMemberCoverageStatementUsingGETOK %s", 200, payload)
}

func (o *GetMemberCoverageStatementUsingGETOK) GetPayload() *models.ResponseWrapperMemberListDTO {
	return o.Payload
}

func (o *GetMemberCoverageStatementUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperMemberListDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMemberCoverageStatementUsingGETBadRequest creates a GetMemberCoverageStatementUsingGETBadRequest with default headers values
func NewGetMemberCoverageStatementUsingGETBadRequest() *GetMemberCoverageStatementUsingGETBadRequest {
	return &GetMemberCoverageStatementUsingGETBadRequest{}
}

/*
GetMemberCoverageStatementUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetMemberCoverageStatementUsingGETBadRequest struct {
}

// IsSuccess returns true when this get member coverage statement using g e t bad request response has a 2xx status code
func (o *GetMemberCoverageStatementUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member coverage statement using g e t bad request response has a 3xx status code
func (o *GetMemberCoverageStatementUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member coverage statement using g e t bad request response has a 4xx status code
func (o *GetMemberCoverageStatementUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member coverage statement using g e t bad request response has a 5xx status code
func (o *GetMemberCoverageStatementUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get member coverage statement using g e t bad request response a status code equal to that given
func (o *GetMemberCoverageStatementUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get member coverage statement using g e t bad request response
func (o *GetMemberCoverageStatementUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetMemberCoverageStatementUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatement][%d] getMemberCoverageStatementUsingGETBadRequest", 400)
}

func (o *GetMemberCoverageStatementUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatement][%d] getMemberCoverageStatementUsingGETBadRequest", 400)
}

func (o *GetMemberCoverageStatementUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberCoverageStatementUsingGETUnauthorized creates a GetMemberCoverageStatementUsingGETUnauthorized with default headers values
func NewGetMemberCoverageStatementUsingGETUnauthorized() *GetMemberCoverageStatementUsingGETUnauthorized {
	return &GetMemberCoverageStatementUsingGETUnauthorized{}
}

/*
GetMemberCoverageStatementUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetMemberCoverageStatementUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get member coverage statement using g e t unauthorized response has a 2xx status code
func (o *GetMemberCoverageStatementUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member coverage statement using g e t unauthorized response has a 3xx status code
func (o *GetMemberCoverageStatementUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member coverage statement using g e t unauthorized response has a 4xx status code
func (o *GetMemberCoverageStatementUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member coverage statement using g e t unauthorized response has a 5xx status code
func (o *GetMemberCoverageStatementUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get member coverage statement using g e t unauthorized response a status code equal to that given
func (o *GetMemberCoverageStatementUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get member coverage statement using g e t unauthorized response
func (o *GetMemberCoverageStatementUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetMemberCoverageStatementUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatement][%d] getMemberCoverageStatementUsingGETUnauthorized", 401)
}

func (o *GetMemberCoverageStatementUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatement][%d] getMemberCoverageStatementUsingGETUnauthorized", 401)
}

func (o *GetMemberCoverageStatementUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberCoverageStatementUsingGETForbidden creates a GetMemberCoverageStatementUsingGETForbidden with default headers values
func NewGetMemberCoverageStatementUsingGETForbidden() *GetMemberCoverageStatementUsingGETForbidden {
	return &GetMemberCoverageStatementUsingGETForbidden{}
}

/*
GetMemberCoverageStatementUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetMemberCoverageStatementUsingGETForbidden struct {
}

// IsSuccess returns true when this get member coverage statement using g e t forbidden response has a 2xx status code
func (o *GetMemberCoverageStatementUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member coverage statement using g e t forbidden response has a 3xx status code
func (o *GetMemberCoverageStatementUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member coverage statement using g e t forbidden response has a 4xx status code
func (o *GetMemberCoverageStatementUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member coverage statement using g e t forbidden response has a 5xx status code
func (o *GetMemberCoverageStatementUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get member coverage statement using g e t forbidden response a status code equal to that given
func (o *GetMemberCoverageStatementUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get member coverage statement using g e t forbidden response
func (o *GetMemberCoverageStatementUsingGETForbidden) Code() int {
	return 403
}

func (o *GetMemberCoverageStatementUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatement][%d] getMemberCoverageStatementUsingGETForbidden", 403)
}

func (o *GetMemberCoverageStatementUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatement][%d] getMemberCoverageStatementUsingGETForbidden", 403)
}

func (o *GetMemberCoverageStatementUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberCoverageStatementUsingGETNotFound creates a GetMemberCoverageStatementUsingGETNotFound with default headers values
func NewGetMemberCoverageStatementUsingGETNotFound() *GetMemberCoverageStatementUsingGETNotFound {
	return &GetMemberCoverageStatementUsingGETNotFound{}
}

/*
GetMemberCoverageStatementUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetMemberCoverageStatementUsingGETNotFound struct {
}

// IsSuccess returns true when this get member coverage statement using g e t not found response has a 2xx status code
func (o *GetMemberCoverageStatementUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member coverage statement using g e t not found response has a 3xx status code
func (o *GetMemberCoverageStatementUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member coverage statement using g e t not found response has a 4xx status code
func (o *GetMemberCoverageStatementUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get member coverage statement using g e t not found response has a 5xx status code
func (o *GetMemberCoverageStatementUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get member coverage statement using g e t not found response a status code equal to that given
func (o *GetMemberCoverageStatementUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get member coverage statement using g e t not found response
func (o *GetMemberCoverageStatementUsingGETNotFound) Code() int {
	return 404
}

func (o *GetMemberCoverageStatementUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatement][%d] getMemberCoverageStatementUsingGETNotFound", 404)
}

func (o *GetMemberCoverageStatementUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatement][%d] getMemberCoverageStatementUsingGETNotFound", 404)
}

func (o *GetMemberCoverageStatementUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemberCoverageStatementUsingGETInternalServerError creates a GetMemberCoverageStatementUsingGETInternalServerError with default headers values
func NewGetMemberCoverageStatementUsingGETInternalServerError() *GetMemberCoverageStatementUsingGETInternalServerError {
	return &GetMemberCoverageStatementUsingGETInternalServerError{}
}

/*
GetMemberCoverageStatementUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetMemberCoverageStatementUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get member coverage statement using g e t internal server error response has a 2xx status code
func (o *GetMemberCoverageStatementUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get member coverage statement using g e t internal server error response has a 3xx status code
func (o *GetMemberCoverageStatementUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get member coverage statement using g e t internal server error response has a 4xx status code
func (o *GetMemberCoverageStatementUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get member coverage statement using g e t internal server error response has a 5xx status code
func (o *GetMemberCoverageStatementUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get member coverage statement using g e t internal server error response a status code equal to that given
func (o *GetMemberCoverageStatementUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get member coverage statement using g e t internal server error response
func (o *GetMemberCoverageStatementUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetMemberCoverageStatementUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatement][%d] getMemberCoverageStatementUsingGETInternalServerError", 500)
}

func (o *GetMemberCoverageStatementUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/coverageStatement][%d] getMemberCoverageStatementUsingGETInternalServerError", 500)
}

func (o *GetMemberCoverageStatementUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
