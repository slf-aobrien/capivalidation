// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetEDXMembersUsingGETReader is a Reader for the GetEDXMembersUsingGET structure.
type GetEDXMembersUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEDXMembersUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEDXMembersUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetEDXMembersUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetEDXMembersUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEDXMembersUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEDXMembersUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEDXMembersUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/member/edxMemberMatchList] getEDXMembersUsingGET", response, response.Code())
	}
}

// NewGetEDXMembersUsingGETOK creates a GetEDXMembersUsingGETOK with default headers values
func NewGetEDXMembersUsingGETOK() *GetEDXMembersUsingGETOK {
	return &GetEDXMembersUsingGETOK{}
}

/*
GetEDXMembersUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetEDXMembersUsingGETOK struct {
	Payload *models.ResponseWrapperMemberListDTO
}

// IsSuccess returns true when this get e d x members using g e t o k response has a 2xx status code
func (o *GetEDXMembersUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get e d x members using g e t o k response has a 3xx status code
func (o *GetEDXMembersUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x members using g e t o k response has a 4xx status code
func (o *GetEDXMembersUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get e d x members using g e t o k response has a 5xx status code
func (o *GetEDXMembersUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x members using g e t o k response a status code equal to that given
func (o *GetEDXMembersUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get e d x members using g e t o k response
func (o *GetEDXMembersUsingGETOK) Code() int {
	return 200
}

func (o *GetEDXMembersUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchList][%d] getEDXMembersUsingGETOK %s", 200, payload)
}

func (o *GetEDXMembersUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchList][%d] getEDXMembersUsingGETOK %s", 200, payload)
}

func (o *GetEDXMembersUsingGETOK) GetPayload() *models.ResponseWrapperMemberListDTO {
	return o.Payload
}

func (o *GetEDXMembersUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperMemberListDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEDXMembersUsingGETBadRequest creates a GetEDXMembersUsingGETBadRequest with default headers values
func NewGetEDXMembersUsingGETBadRequest() *GetEDXMembersUsingGETBadRequest {
	return &GetEDXMembersUsingGETBadRequest{}
}

/*
GetEDXMembersUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetEDXMembersUsingGETBadRequest struct {
}

// IsSuccess returns true when this get e d x members using g e t bad request response has a 2xx status code
func (o *GetEDXMembersUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x members using g e t bad request response has a 3xx status code
func (o *GetEDXMembersUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x members using g e t bad request response has a 4xx status code
func (o *GetEDXMembersUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get e d x members using g e t bad request response has a 5xx status code
func (o *GetEDXMembersUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x members using g e t bad request response a status code equal to that given
func (o *GetEDXMembersUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get e d x members using g e t bad request response
func (o *GetEDXMembersUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetEDXMembersUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchList][%d] getEDXMembersUsingGETBadRequest", 400)
}

func (o *GetEDXMembersUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchList][%d] getEDXMembersUsingGETBadRequest", 400)
}

func (o *GetEDXMembersUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEDXMembersUsingGETUnauthorized creates a GetEDXMembersUsingGETUnauthorized with default headers values
func NewGetEDXMembersUsingGETUnauthorized() *GetEDXMembersUsingGETUnauthorized {
	return &GetEDXMembersUsingGETUnauthorized{}
}

/*
GetEDXMembersUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetEDXMembersUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get e d x members using g e t unauthorized response has a 2xx status code
func (o *GetEDXMembersUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x members using g e t unauthorized response has a 3xx status code
func (o *GetEDXMembersUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x members using g e t unauthorized response has a 4xx status code
func (o *GetEDXMembersUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get e d x members using g e t unauthorized response has a 5xx status code
func (o *GetEDXMembersUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x members using g e t unauthorized response a status code equal to that given
func (o *GetEDXMembersUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get e d x members using g e t unauthorized response
func (o *GetEDXMembersUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetEDXMembersUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchList][%d] getEDXMembersUsingGETUnauthorized", 401)
}

func (o *GetEDXMembersUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchList][%d] getEDXMembersUsingGETUnauthorized", 401)
}

func (o *GetEDXMembersUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEDXMembersUsingGETForbidden creates a GetEDXMembersUsingGETForbidden with default headers values
func NewGetEDXMembersUsingGETForbidden() *GetEDXMembersUsingGETForbidden {
	return &GetEDXMembersUsingGETForbidden{}
}

/*
GetEDXMembersUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetEDXMembersUsingGETForbidden struct {
}

// IsSuccess returns true when this get e d x members using g e t forbidden response has a 2xx status code
func (o *GetEDXMembersUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x members using g e t forbidden response has a 3xx status code
func (o *GetEDXMembersUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x members using g e t forbidden response has a 4xx status code
func (o *GetEDXMembersUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get e d x members using g e t forbidden response has a 5xx status code
func (o *GetEDXMembersUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x members using g e t forbidden response a status code equal to that given
func (o *GetEDXMembersUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get e d x members using g e t forbidden response
func (o *GetEDXMembersUsingGETForbidden) Code() int {
	return 403
}

func (o *GetEDXMembersUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchList][%d] getEDXMembersUsingGETForbidden", 403)
}

func (o *GetEDXMembersUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchList][%d] getEDXMembersUsingGETForbidden", 403)
}

func (o *GetEDXMembersUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEDXMembersUsingGETNotFound creates a GetEDXMembersUsingGETNotFound with default headers values
func NewGetEDXMembersUsingGETNotFound() *GetEDXMembersUsingGETNotFound {
	return &GetEDXMembersUsingGETNotFound{}
}

/*
GetEDXMembersUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetEDXMembersUsingGETNotFound struct {
}

// IsSuccess returns true when this get e d x members using g e t not found response has a 2xx status code
func (o *GetEDXMembersUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x members using g e t not found response has a 3xx status code
func (o *GetEDXMembersUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x members using g e t not found response has a 4xx status code
func (o *GetEDXMembersUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get e d x members using g e t not found response has a 5xx status code
func (o *GetEDXMembersUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get e d x members using g e t not found response a status code equal to that given
func (o *GetEDXMembersUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get e d x members using g e t not found response
func (o *GetEDXMembersUsingGETNotFound) Code() int {
	return 404
}

func (o *GetEDXMembersUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchList][%d] getEDXMembersUsingGETNotFound", 404)
}

func (o *GetEDXMembersUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchList][%d] getEDXMembersUsingGETNotFound", 404)
}

func (o *GetEDXMembersUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEDXMembersUsingGETInternalServerError creates a GetEDXMembersUsingGETInternalServerError with default headers values
func NewGetEDXMembersUsingGETInternalServerError() *GetEDXMembersUsingGETInternalServerError {
	return &GetEDXMembersUsingGETInternalServerError{}
}

/*
GetEDXMembersUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetEDXMembersUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get e d x members using g e t internal server error response has a 2xx status code
func (o *GetEDXMembersUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get e d x members using g e t internal server error response has a 3xx status code
func (o *GetEDXMembersUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get e d x members using g e t internal server error response has a 4xx status code
func (o *GetEDXMembersUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get e d x members using g e t internal server error response has a 5xx status code
func (o *GetEDXMembersUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get e d x members using g e t internal server error response a status code equal to that given
func (o *GetEDXMembersUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get e d x members using g e t internal server error response
func (o *GetEDXMembersUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetEDXMembersUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchList][%d] getEDXMembersUsingGETInternalServerError", 500)
}

func (o *GetEDXMembersUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/member/edxMemberMatchList][%d] getEDXMembersUsingGETInternalServerError", 500)
}

func (o *GetEDXMembersUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
