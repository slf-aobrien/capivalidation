// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetBenefitPackagesUsingGETReader is a Reader for the GetBenefitPackagesUsingGET structure.
type GetBenefitPackagesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBenefitPackagesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBenefitPackagesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBenefitPackagesUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBenefitPackagesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBenefitPackagesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBenefitPackagesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBenefitPackagesUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/policy/benefitpackages] getBenefitPackagesUsingGET", response, response.Code())
	}
}

// NewGetBenefitPackagesUsingGETOK creates a GetBenefitPackagesUsingGETOK with default headers values
func NewGetBenefitPackagesUsingGETOK() *GetBenefitPackagesUsingGETOK {
	return &GetBenefitPackagesUsingGETOK{}
}

/*
GetBenefitPackagesUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type GetBenefitPackagesUsingGETOK struct {
	Payload *models.ResponseWrapperListString
}

// IsSuccess returns true when this get benefit packages using g e t o k response has a 2xx status code
func (o *GetBenefitPackagesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get benefit packages using g e t o k response has a 3xx status code
func (o *GetBenefitPackagesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit packages using g e t o k response has a 4xx status code
func (o *GetBenefitPackagesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get benefit packages using g e t o k response has a 5xx status code
func (o *GetBenefitPackagesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit packages using g e t o k response a status code equal to that given
func (o *GetBenefitPackagesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get benefit packages using g e t o k response
func (o *GetBenefitPackagesUsingGETOK) Code() int {
	return 200
}

func (o *GetBenefitPackagesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitpackages][%d] getBenefitPackagesUsingGETOK %s", 200, payload)
}

func (o *GetBenefitPackagesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitpackages][%d] getBenefitPackagesUsingGETOK %s", 200, payload)
}

func (o *GetBenefitPackagesUsingGETOK) GetPayload() *models.ResponseWrapperListString {
	return o.Payload
}

func (o *GetBenefitPackagesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperListString)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBenefitPackagesUsingGETBadRequest creates a GetBenefitPackagesUsingGETBadRequest with default headers values
func NewGetBenefitPackagesUsingGETBadRequest() *GetBenefitPackagesUsingGETBadRequest {
	return &GetBenefitPackagesUsingGETBadRequest{}
}

/*
GetBenefitPackagesUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetBenefitPackagesUsingGETBadRequest struct {
}

// IsSuccess returns true when this get benefit packages using g e t bad request response has a 2xx status code
func (o *GetBenefitPackagesUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit packages using g e t bad request response has a 3xx status code
func (o *GetBenefitPackagesUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit packages using g e t bad request response has a 4xx status code
func (o *GetBenefitPackagesUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get benefit packages using g e t bad request response has a 5xx status code
func (o *GetBenefitPackagesUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit packages using g e t bad request response a status code equal to that given
func (o *GetBenefitPackagesUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get benefit packages using g e t bad request response
func (o *GetBenefitPackagesUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetBenefitPackagesUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitpackages][%d] getBenefitPackagesUsingGETBadRequest", 400)
}

func (o *GetBenefitPackagesUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitpackages][%d] getBenefitPackagesUsingGETBadRequest", 400)
}

func (o *GetBenefitPackagesUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBenefitPackagesUsingGETUnauthorized creates a GetBenefitPackagesUsingGETUnauthorized with default headers values
func NewGetBenefitPackagesUsingGETUnauthorized() *GetBenefitPackagesUsingGETUnauthorized {
	return &GetBenefitPackagesUsingGETUnauthorized{}
}

/*
GetBenefitPackagesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetBenefitPackagesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get benefit packages using g e t unauthorized response has a 2xx status code
func (o *GetBenefitPackagesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit packages using g e t unauthorized response has a 3xx status code
func (o *GetBenefitPackagesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit packages using g e t unauthorized response has a 4xx status code
func (o *GetBenefitPackagesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get benefit packages using g e t unauthorized response has a 5xx status code
func (o *GetBenefitPackagesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit packages using g e t unauthorized response a status code equal to that given
func (o *GetBenefitPackagesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get benefit packages using g e t unauthorized response
func (o *GetBenefitPackagesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetBenefitPackagesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitpackages][%d] getBenefitPackagesUsingGETUnauthorized", 401)
}

func (o *GetBenefitPackagesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitpackages][%d] getBenefitPackagesUsingGETUnauthorized", 401)
}

func (o *GetBenefitPackagesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBenefitPackagesUsingGETForbidden creates a GetBenefitPackagesUsingGETForbidden with default headers values
func NewGetBenefitPackagesUsingGETForbidden() *GetBenefitPackagesUsingGETForbidden {
	return &GetBenefitPackagesUsingGETForbidden{}
}

/*
GetBenefitPackagesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBenefitPackagesUsingGETForbidden struct {
}

// IsSuccess returns true when this get benefit packages using g e t forbidden response has a 2xx status code
func (o *GetBenefitPackagesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit packages using g e t forbidden response has a 3xx status code
func (o *GetBenefitPackagesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit packages using g e t forbidden response has a 4xx status code
func (o *GetBenefitPackagesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get benefit packages using g e t forbidden response has a 5xx status code
func (o *GetBenefitPackagesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit packages using g e t forbidden response a status code equal to that given
func (o *GetBenefitPackagesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get benefit packages using g e t forbidden response
func (o *GetBenefitPackagesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetBenefitPackagesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitpackages][%d] getBenefitPackagesUsingGETForbidden", 403)
}

func (o *GetBenefitPackagesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitpackages][%d] getBenefitPackagesUsingGETForbidden", 403)
}

func (o *GetBenefitPackagesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBenefitPackagesUsingGETNotFound creates a GetBenefitPackagesUsingGETNotFound with default headers values
func NewGetBenefitPackagesUsingGETNotFound() *GetBenefitPackagesUsingGETNotFound {
	return &GetBenefitPackagesUsingGETNotFound{}
}

/*
GetBenefitPackagesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetBenefitPackagesUsingGETNotFound struct {
}

// IsSuccess returns true when this get benefit packages using g e t not found response has a 2xx status code
func (o *GetBenefitPackagesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit packages using g e t not found response has a 3xx status code
func (o *GetBenefitPackagesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit packages using g e t not found response has a 4xx status code
func (o *GetBenefitPackagesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get benefit packages using g e t not found response has a 5xx status code
func (o *GetBenefitPackagesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get benefit packages using g e t not found response a status code equal to that given
func (o *GetBenefitPackagesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get benefit packages using g e t not found response
func (o *GetBenefitPackagesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetBenefitPackagesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitpackages][%d] getBenefitPackagesUsingGETNotFound", 404)
}

func (o *GetBenefitPackagesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitpackages][%d] getBenefitPackagesUsingGETNotFound", 404)
}

func (o *GetBenefitPackagesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBenefitPackagesUsingGETInternalServerError creates a GetBenefitPackagesUsingGETInternalServerError with default headers values
func NewGetBenefitPackagesUsingGETInternalServerError() *GetBenefitPackagesUsingGETInternalServerError {
	return &GetBenefitPackagesUsingGETInternalServerError{}
}

/*
GetBenefitPackagesUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetBenefitPackagesUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get benefit packages using g e t internal server error response has a 2xx status code
func (o *GetBenefitPackagesUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get benefit packages using g e t internal server error response has a 3xx status code
func (o *GetBenefitPackagesUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get benefit packages using g e t internal server error response has a 4xx status code
func (o *GetBenefitPackagesUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get benefit packages using g e t internal server error response has a 5xx status code
func (o *GetBenefitPackagesUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get benefit packages using g e t internal server error response a status code equal to that given
func (o *GetBenefitPackagesUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get benefit packages using g e t internal server error response
func (o *GetBenefitPackagesUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetBenefitPackagesUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitpackages][%d] getBenefitPackagesUsingGETInternalServerError", 500)
}

func (o *GetBenefitPackagesUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/benefitpackages][%d] getBenefitPackagesUsingGETInternalServerError", 500)
}

func (o *GetBenefitPackagesUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
