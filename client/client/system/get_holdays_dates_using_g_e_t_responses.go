// Code generated by go-swagger; DO NOT EDIT.

package system

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// GetHoldaysDatesUsingGETReader is a Reader for the GetHoldaysDatesUsingGET structure.
type GetHoldaysDatesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHoldaysDatesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHoldaysDatesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetHoldaysDatesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetHoldaysDatesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetHoldaysDatesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/system/holidays] getHoldaysDatesUsingGET", response, response.Code())
	}
}

// NewGetHoldaysDatesUsingGETOK creates a GetHoldaysDatesUsingGETOK with default headers values
func NewGetHoldaysDatesUsingGETOK() *GetHoldaysDatesUsingGETOK {
	return &GetHoldaysDatesUsingGETOK{}
}

/*
GetHoldaysDatesUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetHoldaysDatesUsingGETOK struct {
	Payload *models.ResponseWrapperCalHolidaysDTO
}

// IsSuccess returns true when this get holdays dates using g e t o k response has a 2xx status code
func (o *GetHoldaysDatesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get holdays dates using g e t o k response has a 3xx status code
func (o *GetHoldaysDatesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get holdays dates using g e t o k response has a 4xx status code
func (o *GetHoldaysDatesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get holdays dates using g e t o k response has a 5xx status code
func (o *GetHoldaysDatesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get holdays dates using g e t o k response a status code equal to that given
func (o *GetHoldaysDatesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get holdays dates using g e t o k response
func (o *GetHoldaysDatesUsingGETOK) Code() int {
	return 200
}

func (o *GetHoldaysDatesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/system/holidays][%d] getHoldaysDatesUsingGETOK %s", 200, payload)
}

func (o *GetHoldaysDatesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/system/holidays][%d] getHoldaysDatesUsingGETOK %s", 200, payload)
}

func (o *GetHoldaysDatesUsingGETOK) GetPayload() *models.ResponseWrapperCalHolidaysDTO {
	return o.Payload
}

func (o *GetHoldaysDatesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperCalHolidaysDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHoldaysDatesUsingGETUnauthorized creates a GetHoldaysDatesUsingGETUnauthorized with default headers values
func NewGetHoldaysDatesUsingGETUnauthorized() *GetHoldaysDatesUsingGETUnauthorized {
	return &GetHoldaysDatesUsingGETUnauthorized{}
}

/*
GetHoldaysDatesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetHoldaysDatesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get holdays dates using g e t unauthorized response has a 2xx status code
func (o *GetHoldaysDatesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get holdays dates using g e t unauthorized response has a 3xx status code
func (o *GetHoldaysDatesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get holdays dates using g e t unauthorized response has a 4xx status code
func (o *GetHoldaysDatesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get holdays dates using g e t unauthorized response has a 5xx status code
func (o *GetHoldaysDatesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get holdays dates using g e t unauthorized response a status code equal to that given
func (o *GetHoldaysDatesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get holdays dates using g e t unauthorized response
func (o *GetHoldaysDatesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetHoldaysDatesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/holidays][%d] getHoldaysDatesUsingGETUnauthorized", 401)
}

func (o *GetHoldaysDatesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/holidays][%d] getHoldaysDatesUsingGETUnauthorized", 401)
}

func (o *GetHoldaysDatesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHoldaysDatesUsingGETForbidden creates a GetHoldaysDatesUsingGETForbidden with default headers values
func NewGetHoldaysDatesUsingGETForbidden() *GetHoldaysDatesUsingGETForbidden {
	return &GetHoldaysDatesUsingGETForbidden{}
}

/*
GetHoldaysDatesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetHoldaysDatesUsingGETForbidden struct {
}

// IsSuccess returns true when this get holdays dates using g e t forbidden response has a 2xx status code
func (o *GetHoldaysDatesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get holdays dates using g e t forbidden response has a 3xx status code
func (o *GetHoldaysDatesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get holdays dates using g e t forbidden response has a 4xx status code
func (o *GetHoldaysDatesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get holdays dates using g e t forbidden response has a 5xx status code
func (o *GetHoldaysDatesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get holdays dates using g e t forbidden response a status code equal to that given
func (o *GetHoldaysDatesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get holdays dates using g e t forbidden response
func (o *GetHoldaysDatesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetHoldaysDatesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/holidays][%d] getHoldaysDatesUsingGETForbidden", 403)
}

func (o *GetHoldaysDatesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/holidays][%d] getHoldaysDatesUsingGETForbidden", 403)
}

func (o *GetHoldaysDatesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHoldaysDatesUsingGETNotFound creates a GetHoldaysDatesUsingGETNotFound with default headers values
func NewGetHoldaysDatesUsingGETNotFound() *GetHoldaysDatesUsingGETNotFound {
	return &GetHoldaysDatesUsingGETNotFound{}
}

/*
GetHoldaysDatesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetHoldaysDatesUsingGETNotFound struct {
}

// IsSuccess returns true when this get holdays dates using g e t not found response has a 2xx status code
func (o *GetHoldaysDatesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get holdays dates using g e t not found response has a 3xx status code
func (o *GetHoldaysDatesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get holdays dates using g e t not found response has a 4xx status code
func (o *GetHoldaysDatesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get holdays dates using g e t not found response has a 5xx status code
func (o *GetHoldaysDatesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get holdays dates using g e t not found response a status code equal to that given
func (o *GetHoldaysDatesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get holdays dates using g e t not found response
func (o *GetHoldaysDatesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetHoldaysDatesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/holidays][%d] getHoldaysDatesUsingGETNotFound", 404)
}

func (o *GetHoldaysDatesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/system/holidays][%d] getHoldaysDatesUsingGETNotFound", 404)
}

func (o *GetHoldaysDatesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
