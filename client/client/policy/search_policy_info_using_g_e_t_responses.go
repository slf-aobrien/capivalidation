// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// SearchPolicyInfoUsingGETReader is a Reader for the SearchPolicyInfoUsingGET structure.
type SearchPolicyInfoUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchPolicyInfoUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchPolicyInfoUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchPolicyInfoUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchPolicyInfoUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchPolicyInfoUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchPolicyInfoUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchPolicyInfoUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /compassintegrationapp/policy/searchPolicyInfo] searchPolicyInfoUsingGET", response, response.Code())
	}
}

// NewSearchPolicyInfoUsingGETOK creates a SearchPolicyInfoUsingGETOK with default headers values
func NewSearchPolicyInfoUsingGETOK() *SearchPolicyInfoUsingGETOK {
	return &SearchPolicyInfoUsingGETOK{}
}

/*
SearchPolicyInfoUsingGETOK describes a response with status code 200, with default header values.

Success
*/
type SearchPolicyInfoUsingGETOK struct {
	Payload *models.ResponseWrapperPolicySearchInfo
}

// IsSuccess returns true when this search policy info using g e t o k response has a 2xx status code
func (o *SearchPolicyInfoUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search policy info using g e t o k response has a 3xx status code
func (o *SearchPolicyInfoUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search policy info using g e t o k response has a 4xx status code
func (o *SearchPolicyInfoUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search policy info using g e t o k response has a 5xx status code
func (o *SearchPolicyInfoUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search policy info using g e t o k response a status code equal to that given
func (o *SearchPolicyInfoUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the search policy info using g e t o k response
func (o *SearchPolicyInfoUsingGETOK) Code() int {
	return 200
}

func (o *SearchPolicyInfoUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/searchPolicyInfo][%d] searchPolicyInfoUsingGETOK %s", 200, payload)
}

func (o *SearchPolicyInfoUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /compassintegrationapp/policy/searchPolicyInfo][%d] searchPolicyInfoUsingGETOK %s", 200, payload)
}

func (o *SearchPolicyInfoUsingGETOK) GetPayload() *models.ResponseWrapperPolicySearchInfo {
	return o.Payload
}

func (o *SearchPolicyInfoUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperPolicySearchInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchPolicyInfoUsingGETBadRequest creates a SearchPolicyInfoUsingGETBadRequest with default headers values
func NewSearchPolicyInfoUsingGETBadRequest() *SearchPolicyInfoUsingGETBadRequest {
	return &SearchPolicyInfoUsingGETBadRequest{}
}

/*
SearchPolicyInfoUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SearchPolicyInfoUsingGETBadRequest struct {
}

// IsSuccess returns true when this search policy info using g e t bad request response has a 2xx status code
func (o *SearchPolicyInfoUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search policy info using g e t bad request response has a 3xx status code
func (o *SearchPolicyInfoUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search policy info using g e t bad request response has a 4xx status code
func (o *SearchPolicyInfoUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search policy info using g e t bad request response has a 5xx status code
func (o *SearchPolicyInfoUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search policy info using g e t bad request response a status code equal to that given
func (o *SearchPolicyInfoUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the search policy info using g e t bad request response
func (o *SearchPolicyInfoUsingGETBadRequest) Code() int {
	return 400
}

func (o *SearchPolicyInfoUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/searchPolicyInfo][%d] searchPolicyInfoUsingGETBadRequest", 400)
}

func (o *SearchPolicyInfoUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/searchPolicyInfo][%d] searchPolicyInfoUsingGETBadRequest", 400)
}

func (o *SearchPolicyInfoUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchPolicyInfoUsingGETUnauthorized creates a SearchPolicyInfoUsingGETUnauthorized with default headers values
func NewSearchPolicyInfoUsingGETUnauthorized() *SearchPolicyInfoUsingGETUnauthorized {
	return &SearchPolicyInfoUsingGETUnauthorized{}
}

/*
SearchPolicyInfoUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SearchPolicyInfoUsingGETUnauthorized struct {
}

// IsSuccess returns true when this search policy info using g e t unauthorized response has a 2xx status code
func (o *SearchPolicyInfoUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search policy info using g e t unauthorized response has a 3xx status code
func (o *SearchPolicyInfoUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search policy info using g e t unauthorized response has a 4xx status code
func (o *SearchPolicyInfoUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this search policy info using g e t unauthorized response has a 5xx status code
func (o *SearchPolicyInfoUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this search policy info using g e t unauthorized response a status code equal to that given
func (o *SearchPolicyInfoUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the search policy info using g e t unauthorized response
func (o *SearchPolicyInfoUsingGETUnauthorized) Code() int {
	return 401
}

func (o *SearchPolicyInfoUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/searchPolicyInfo][%d] searchPolicyInfoUsingGETUnauthorized", 401)
}

func (o *SearchPolicyInfoUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/searchPolicyInfo][%d] searchPolicyInfoUsingGETUnauthorized", 401)
}

func (o *SearchPolicyInfoUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchPolicyInfoUsingGETForbidden creates a SearchPolicyInfoUsingGETForbidden with default headers values
func NewSearchPolicyInfoUsingGETForbidden() *SearchPolicyInfoUsingGETForbidden {
	return &SearchPolicyInfoUsingGETForbidden{}
}

/*
SearchPolicyInfoUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SearchPolicyInfoUsingGETForbidden struct {
}

// IsSuccess returns true when this search policy info using g e t forbidden response has a 2xx status code
func (o *SearchPolicyInfoUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search policy info using g e t forbidden response has a 3xx status code
func (o *SearchPolicyInfoUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search policy info using g e t forbidden response has a 4xx status code
func (o *SearchPolicyInfoUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this search policy info using g e t forbidden response has a 5xx status code
func (o *SearchPolicyInfoUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this search policy info using g e t forbidden response a status code equal to that given
func (o *SearchPolicyInfoUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the search policy info using g e t forbidden response
func (o *SearchPolicyInfoUsingGETForbidden) Code() int {
	return 403
}

func (o *SearchPolicyInfoUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/searchPolicyInfo][%d] searchPolicyInfoUsingGETForbidden", 403)
}

func (o *SearchPolicyInfoUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/searchPolicyInfo][%d] searchPolicyInfoUsingGETForbidden", 403)
}

func (o *SearchPolicyInfoUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchPolicyInfoUsingGETNotFound creates a SearchPolicyInfoUsingGETNotFound with default headers values
func NewSearchPolicyInfoUsingGETNotFound() *SearchPolicyInfoUsingGETNotFound {
	return &SearchPolicyInfoUsingGETNotFound{}
}

/*
SearchPolicyInfoUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SearchPolicyInfoUsingGETNotFound struct {
}

// IsSuccess returns true when this search policy info using g e t not found response has a 2xx status code
func (o *SearchPolicyInfoUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search policy info using g e t not found response has a 3xx status code
func (o *SearchPolicyInfoUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search policy info using g e t not found response has a 4xx status code
func (o *SearchPolicyInfoUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this search policy info using g e t not found response has a 5xx status code
func (o *SearchPolicyInfoUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this search policy info using g e t not found response a status code equal to that given
func (o *SearchPolicyInfoUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the search policy info using g e t not found response
func (o *SearchPolicyInfoUsingGETNotFound) Code() int {
	return 404
}

func (o *SearchPolicyInfoUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/searchPolicyInfo][%d] searchPolicyInfoUsingGETNotFound", 404)
}

func (o *SearchPolicyInfoUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/searchPolicyInfo][%d] searchPolicyInfoUsingGETNotFound", 404)
}

func (o *SearchPolicyInfoUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchPolicyInfoUsingGETInternalServerError creates a SearchPolicyInfoUsingGETInternalServerError with default headers values
func NewSearchPolicyInfoUsingGETInternalServerError() *SearchPolicyInfoUsingGETInternalServerError {
	return &SearchPolicyInfoUsingGETInternalServerError{}
}

/*
SearchPolicyInfoUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type SearchPolicyInfoUsingGETInternalServerError struct {
}

// IsSuccess returns true when this search policy info using g e t internal server error response has a 2xx status code
func (o *SearchPolicyInfoUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search policy info using g e t internal server error response has a 3xx status code
func (o *SearchPolicyInfoUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search policy info using g e t internal server error response has a 4xx status code
func (o *SearchPolicyInfoUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search policy info using g e t internal server error response has a 5xx status code
func (o *SearchPolicyInfoUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search policy info using g e t internal server error response a status code equal to that given
func (o *SearchPolicyInfoUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the search policy info using g e t internal server error response
func (o *SearchPolicyInfoUsingGETInternalServerError) Code() int {
	return 500
}

func (o *SearchPolicyInfoUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/searchPolicyInfo][%d] searchPolicyInfoUsingGETInternalServerError", 500)
}

func (o *SearchPolicyInfoUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /compassintegrationapp/policy/searchPolicyInfo][%d] searchPolicyInfoUsingGETInternalServerError", 500)
}

func (o *SearchPolicyInfoUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
