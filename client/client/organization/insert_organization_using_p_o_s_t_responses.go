// Code generated by go-swagger; DO NOT EDIT.

package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// InsertOrganizationUsingPOSTReader is a Reader for the InsertOrganizationUsingPOST structure.
type InsertOrganizationUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InsertOrganizationUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInsertOrganizationUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewInsertOrganizationUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInsertOrganizationUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewInsertOrganizationUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInsertOrganizationUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInsertOrganizationUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInsertOrganizationUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/organization] insertOrganizationUsingPOST", response, response.Code())
	}
}

// NewInsertOrganizationUsingPOSTOK creates a InsertOrganizationUsingPOSTOK with default headers values
func NewInsertOrganizationUsingPOSTOK() *InsertOrganizationUsingPOSTOK {
	return &InsertOrganizationUsingPOSTOK{}
}

/*
InsertOrganizationUsingPOSTOK describes a response with status code 200, with default header values.

Success
*/
type InsertOrganizationUsingPOSTOK struct {
	Payload *models.ResponseWrapperString
}

// IsSuccess returns true when this insert organization using p o s t o k response has a 2xx status code
func (o *InsertOrganizationUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this insert organization using p o s t o k response has a 3xx status code
func (o *InsertOrganizationUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert organization using p o s t o k response has a 4xx status code
func (o *InsertOrganizationUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this insert organization using p o s t o k response has a 5xx status code
func (o *InsertOrganizationUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this insert organization using p o s t o k response a status code equal to that given
func (o *InsertOrganizationUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the insert organization using p o s t o k response
func (o *InsertOrganizationUsingPOSTOK) Code() int {
	return 200
}

func (o *InsertOrganizationUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/organization][%d] insertOrganizationUsingPOSTOK %s", 200, payload)
}

func (o *InsertOrganizationUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/organization][%d] insertOrganizationUsingPOSTOK %s", 200, payload)
}

func (o *InsertOrganizationUsingPOSTOK) GetPayload() *models.ResponseWrapperString {
	return o.Payload
}

func (o *InsertOrganizationUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperString)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInsertOrganizationUsingPOSTCreated creates a InsertOrganizationUsingPOSTCreated with default headers values
func NewInsertOrganizationUsingPOSTCreated() *InsertOrganizationUsingPOSTCreated {
	return &InsertOrganizationUsingPOSTCreated{}
}

/*
InsertOrganizationUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type InsertOrganizationUsingPOSTCreated struct {
}

// IsSuccess returns true when this insert organization using p o s t created response has a 2xx status code
func (o *InsertOrganizationUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this insert organization using p o s t created response has a 3xx status code
func (o *InsertOrganizationUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert organization using p o s t created response has a 4xx status code
func (o *InsertOrganizationUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this insert organization using p o s t created response has a 5xx status code
func (o *InsertOrganizationUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this insert organization using p o s t created response a status code equal to that given
func (o *InsertOrganizationUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the insert organization using p o s t created response
func (o *InsertOrganizationUsingPOSTCreated) Code() int {
	return 201
}

func (o *InsertOrganizationUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/organization][%d] insertOrganizationUsingPOSTCreated", 201)
}

func (o *InsertOrganizationUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/organization][%d] insertOrganizationUsingPOSTCreated", 201)
}

func (o *InsertOrganizationUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertOrganizationUsingPOSTBadRequest creates a InsertOrganizationUsingPOSTBadRequest with default headers values
func NewInsertOrganizationUsingPOSTBadRequest() *InsertOrganizationUsingPOSTBadRequest {
	return &InsertOrganizationUsingPOSTBadRequest{}
}

/*
InsertOrganizationUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type InsertOrganizationUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this insert organization using p o s t bad request response has a 2xx status code
func (o *InsertOrganizationUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert organization using p o s t bad request response has a 3xx status code
func (o *InsertOrganizationUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert organization using p o s t bad request response has a 4xx status code
func (o *InsertOrganizationUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert organization using p o s t bad request response has a 5xx status code
func (o *InsertOrganizationUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this insert organization using p o s t bad request response a status code equal to that given
func (o *InsertOrganizationUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the insert organization using p o s t bad request response
func (o *InsertOrganizationUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *InsertOrganizationUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/organization][%d] insertOrganizationUsingPOSTBadRequest", 400)
}

func (o *InsertOrganizationUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/organization][%d] insertOrganizationUsingPOSTBadRequest", 400)
}

func (o *InsertOrganizationUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertOrganizationUsingPOSTUnauthorized creates a InsertOrganizationUsingPOSTUnauthorized with default headers values
func NewInsertOrganizationUsingPOSTUnauthorized() *InsertOrganizationUsingPOSTUnauthorized {
	return &InsertOrganizationUsingPOSTUnauthorized{}
}

/*
InsertOrganizationUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type InsertOrganizationUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this insert organization using p o s t unauthorized response has a 2xx status code
func (o *InsertOrganizationUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert organization using p o s t unauthorized response has a 3xx status code
func (o *InsertOrganizationUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert organization using p o s t unauthorized response has a 4xx status code
func (o *InsertOrganizationUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert organization using p o s t unauthorized response has a 5xx status code
func (o *InsertOrganizationUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this insert organization using p o s t unauthorized response a status code equal to that given
func (o *InsertOrganizationUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the insert organization using p o s t unauthorized response
func (o *InsertOrganizationUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *InsertOrganizationUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/organization][%d] insertOrganizationUsingPOSTUnauthorized", 401)
}

func (o *InsertOrganizationUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/organization][%d] insertOrganizationUsingPOSTUnauthorized", 401)
}

func (o *InsertOrganizationUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertOrganizationUsingPOSTForbidden creates a InsertOrganizationUsingPOSTForbidden with default headers values
func NewInsertOrganizationUsingPOSTForbidden() *InsertOrganizationUsingPOSTForbidden {
	return &InsertOrganizationUsingPOSTForbidden{}
}

/*
InsertOrganizationUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type InsertOrganizationUsingPOSTForbidden struct {
}

// IsSuccess returns true when this insert organization using p o s t forbidden response has a 2xx status code
func (o *InsertOrganizationUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert organization using p o s t forbidden response has a 3xx status code
func (o *InsertOrganizationUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert organization using p o s t forbidden response has a 4xx status code
func (o *InsertOrganizationUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert organization using p o s t forbidden response has a 5xx status code
func (o *InsertOrganizationUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this insert organization using p o s t forbidden response a status code equal to that given
func (o *InsertOrganizationUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the insert organization using p o s t forbidden response
func (o *InsertOrganizationUsingPOSTForbidden) Code() int {
	return 403
}

func (o *InsertOrganizationUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/organization][%d] insertOrganizationUsingPOSTForbidden", 403)
}

func (o *InsertOrganizationUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/organization][%d] insertOrganizationUsingPOSTForbidden", 403)
}

func (o *InsertOrganizationUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertOrganizationUsingPOSTNotFound creates a InsertOrganizationUsingPOSTNotFound with default headers values
func NewInsertOrganizationUsingPOSTNotFound() *InsertOrganizationUsingPOSTNotFound {
	return &InsertOrganizationUsingPOSTNotFound{}
}

/*
InsertOrganizationUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type InsertOrganizationUsingPOSTNotFound struct {
}

// IsSuccess returns true when this insert organization using p o s t not found response has a 2xx status code
func (o *InsertOrganizationUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert organization using p o s t not found response has a 3xx status code
func (o *InsertOrganizationUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert organization using p o s t not found response has a 4xx status code
func (o *InsertOrganizationUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert organization using p o s t not found response has a 5xx status code
func (o *InsertOrganizationUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this insert organization using p o s t not found response a status code equal to that given
func (o *InsertOrganizationUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the insert organization using p o s t not found response
func (o *InsertOrganizationUsingPOSTNotFound) Code() int {
	return 404
}

func (o *InsertOrganizationUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/organization][%d] insertOrganizationUsingPOSTNotFound", 404)
}

func (o *InsertOrganizationUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/organization][%d] insertOrganizationUsingPOSTNotFound", 404)
}

func (o *InsertOrganizationUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertOrganizationUsingPOSTInternalServerError creates a InsertOrganizationUsingPOSTInternalServerError with default headers values
func NewInsertOrganizationUsingPOSTInternalServerError() *InsertOrganizationUsingPOSTInternalServerError {
	return &InsertOrganizationUsingPOSTInternalServerError{}
}

/*
InsertOrganizationUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type InsertOrganizationUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this insert organization using p o s t internal server error response has a 2xx status code
func (o *InsertOrganizationUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert organization using p o s t internal server error response has a 3xx status code
func (o *InsertOrganizationUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert organization using p o s t internal server error response has a 4xx status code
func (o *InsertOrganizationUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this insert organization using p o s t internal server error response has a 5xx status code
func (o *InsertOrganizationUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this insert organization using p o s t internal server error response a status code equal to that given
func (o *InsertOrganizationUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the insert organization using p o s t internal server error response
func (o *InsertOrganizationUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *InsertOrganizationUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/organization][%d] insertOrganizationUsingPOSTInternalServerError", 500)
}

func (o *InsertOrganizationUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/organization][%d] insertOrganizationUsingPOSTInternalServerError", 500)
}

func (o *InsertOrganizationUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
