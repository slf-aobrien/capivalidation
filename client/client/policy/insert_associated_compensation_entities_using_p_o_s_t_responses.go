// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// InsertAssociatedCompensationEntitiesUsingPOSTReader is a Reader for the InsertAssociatedCompensationEntitiesUsingPOST structure.
type InsertAssociatedCompensationEntitiesUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InsertAssociatedCompensationEntitiesUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInsertAssociatedCompensationEntitiesUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewInsertAssociatedCompensationEntitiesUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewInsertAssociatedCompensationEntitiesUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInsertAssociatedCompensationEntitiesUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInsertAssociatedCompensationEntitiesUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/policy/insertAssociatedCompensationEntities] insertAssociatedCompensationEntitiesUsingPOST", response, response.Code())
	}
}

// NewInsertAssociatedCompensationEntitiesUsingPOSTOK creates a InsertAssociatedCompensationEntitiesUsingPOSTOK with default headers values
func NewInsertAssociatedCompensationEntitiesUsingPOSTOK() *InsertAssociatedCompensationEntitiesUsingPOSTOK {
	return &InsertAssociatedCompensationEntitiesUsingPOSTOK{}
}

/*
InsertAssociatedCompensationEntitiesUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type InsertAssociatedCompensationEntitiesUsingPOSTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this insert associated compensation entities using p o s t o k response has a 2xx status code
func (o *InsertAssociatedCompensationEntitiesUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this insert associated compensation entities using p o s t o k response has a 3xx status code
func (o *InsertAssociatedCompensationEntitiesUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert associated compensation entities using p o s t o k response has a 4xx status code
func (o *InsertAssociatedCompensationEntitiesUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this insert associated compensation entities using p o s t o k response has a 5xx status code
func (o *InsertAssociatedCompensationEntitiesUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this insert associated compensation entities using p o s t o k response a status code equal to that given
func (o *InsertAssociatedCompensationEntitiesUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the insert associated compensation entities using p o s t o k response
func (o *InsertAssociatedCompensationEntitiesUsingPOSTOK) Code() int {
	return 200
}

func (o *InsertAssociatedCompensationEntitiesUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/insertAssociatedCompensationEntities][%d] insertAssociatedCompensationEntitiesUsingPOSTOK %s", 200, payload)
}

func (o *InsertAssociatedCompensationEntitiesUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/insertAssociatedCompensationEntities][%d] insertAssociatedCompensationEntitiesUsingPOSTOK %s", 200, payload)
}

func (o *InsertAssociatedCompensationEntitiesUsingPOSTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *InsertAssociatedCompensationEntitiesUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInsertAssociatedCompensationEntitiesUsingPOSTCreated creates a InsertAssociatedCompensationEntitiesUsingPOSTCreated with default headers values
func NewInsertAssociatedCompensationEntitiesUsingPOSTCreated() *InsertAssociatedCompensationEntitiesUsingPOSTCreated {
	return &InsertAssociatedCompensationEntitiesUsingPOSTCreated{}
}

/*
InsertAssociatedCompensationEntitiesUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type InsertAssociatedCompensationEntitiesUsingPOSTCreated struct {
}

// IsSuccess returns true when this insert associated compensation entities using p o s t created response has a 2xx status code
func (o *InsertAssociatedCompensationEntitiesUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this insert associated compensation entities using p o s t created response has a 3xx status code
func (o *InsertAssociatedCompensationEntitiesUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert associated compensation entities using p o s t created response has a 4xx status code
func (o *InsertAssociatedCompensationEntitiesUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this insert associated compensation entities using p o s t created response has a 5xx status code
func (o *InsertAssociatedCompensationEntitiesUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this insert associated compensation entities using p o s t created response a status code equal to that given
func (o *InsertAssociatedCompensationEntitiesUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the insert associated compensation entities using p o s t created response
func (o *InsertAssociatedCompensationEntitiesUsingPOSTCreated) Code() int {
	return 201
}

func (o *InsertAssociatedCompensationEntitiesUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/insertAssociatedCompensationEntities][%d] insertAssociatedCompensationEntitiesUsingPOSTCreated", 201)
}

func (o *InsertAssociatedCompensationEntitiesUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/insertAssociatedCompensationEntities][%d] insertAssociatedCompensationEntitiesUsingPOSTCreated", 201)
}

func (o *InsertAssociatedCompensationEntitiesUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertAssociatedCompensationEntitiesUsingPOSTUnauthorized creates a InsertAssociatedCompensationEntitiesUsingPOSTUnauthorized with default headers values
func NewInsertAssociatedCompensationEntitiesUsingPOSTUnauthorized() *InsertAssociatedCompensationEntitiesUsingPOSTUnauthorized {
	return &InsertAssociatedCompensationEntitiesUsingPOSTUnauthorized{}
}

/*
InsertAssociatedCompensationEntitiesUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type InsertAssociatedCompensationEntitiesUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this insert associated compensation entities using p o s t unauthorized response has a 2xx status code
func (o *InsertAssociatedCompensationEntitiesUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert associated compensation entities using p o s t unauthorized response has a 3xx status code
func (o *InsertAssociatedCompensationEntitiesUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert associated compensation entities using p o s t unauthorized response has a 4xx status code
func (o *InsertAssociatedCompensationEntitiesUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert associated compensation entities using p o s t unauthorized response has a 5xx status code
func (o *InsertAssociatedCompensationEntitiesUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this insert associated compensation entities using p o s t unauthorized response a status code equal to that given
func (o *InsertAssociatedCompensationEntitiesUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the insert associated compensation entities using p o s t unauthorized response
func (o *InsertAssociatedCompensationEntitiesUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *InsertAssociatedCompensationEntitiesUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/insertAssociatedCompensationEntities][%d] insertAssociatedCompensationEntitiesUsingPOSTUnauthorized", 401)
}

func (o *InsertAssociatedCompensationEntitiesUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/insertAssociatedCompensationEntities][%d] insertAssociatedCompensationEntitiesUsingPOSTUnauthorized", 401)
}

func (o *InsertAssociatedCompensationEntitiesUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertAssociatedCompensationEntitiesUsingPOSTForbidden creates a InsertAssociatedCompensationEntitiesUsingPOSTForbidden with default headers values
func NewInsertAssociatedCompensationEntitiesUsingPOSTForbidden() *InsertAssociatedCompensationEntitiesUsingPOSTForbidden {
	return &InsertAssociatedCompensationEntitiesUsingPOSTForbidden{}
}

/*
InsertAssociatedCompensationEntitiesUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type InsertAssociatedCompensationEntitiesUsingPOSTForbidden struct {
}

// IsSuccess returns true when this insert associated compensation entities using p o s t forbidden response has a 2xx status code
func (o *InsertAssociatedCompensationEntitiesUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert associated compensation entities using p o s t forbidden response has a 3xx status code
func (o *InsertAssociatedCompensationEntitiesUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert associated compensation entities using p o s t forbidden response has a 4xx status code
func (o *InsertAssociatedCompensationEntitiesUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert associated compensation entities using p o s t forbidden response has a 5xx status code
func (o *InsertAssociatedCompensationEntitiesUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this insert associated compensation entities using p o s t forbidden response a status code equal to that given
func (o *InsertAssociatedCompensationEntitiesUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the insert associated compensation entities using p o s t forbidden response
func (o *InsertAssociatedCompensationEntitiesUsingPOSTForbidden) Code() int {
	return 403
}

func (o *InsertAssociatedCompensationEntitiesUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/insertAssociatedCompensationEntities][%d] insertAssociatedCompensationEntitiesUsingPOSTForbidden", 403)
}

func (o *InsertAssociatedCompensationEntitiesUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/insertAssociatedCompensationEntities][%d] insertAssociatedCompensationEntitiesUsingPOSTForbidden", 403)
}

func (o *InsertAssociatedCompensationEntitiesUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertAssociatedCompensationEntitiesUsingPOSTNotFound creates a InsertAssociatedCompensationEntitiesUsingPOSTNotFound with default headers values
func NewInsertAssociatedCompensationEntitiesUsingPOSTNotFound() *InsertAssociatedCompensationEntitiesUsingPOSTNotFound {
	return &InsertAssociatedCompensationEntitiesUsingPOSTNotFound{}
}

/*
InsertAssociatedCompensationEntitiesUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type InsertAssociatedCompensationEntitiesUsingPOSTNotFound struct {
}

// IsSuccess returns true when this insert associated compensation entities using p o s t not found response has a 2xx status code
func (o *InsertAssociatedCompensationEntitiesUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert associated compensation entities using p o s t not found response has a 3xx status code
func (o *InsertAssociatedCompensationEntitiesUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert associated compensation entities using p o s t not found response has a 4xx status code
func (o *InsertAssociatedCompensationEntitiesUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert associated compensation entities using p o s t not found response has a 5xx status code
func (o *InsertAssociatedCompensationEntitiesUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this insert associated compensation entities using p o s t not found response a status code equal to that given
func (o *InsertAssociatedCompensationEntitiesUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the insert associated compensation entities using p o s t not found response
func (o *InsertAssociatedCompensationEntitiesUsingPOSTNotFound) Code() int {
	return 404
}

func (o *InsertAssociatedCompensationEntitiesUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/insertAssociatedCompensationEntities][%d] insertAssociatedCompensationEntitiesUsingPOSTNotFound", 404)
}

func (o *InsertAssociatedCompensationEntitiesUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/insertAssociatedCompensationEntities][%d] insertAssociatedCompensationEntitiesUsingPOSTNotFound", 404)
}

func (o *InsertAssociatedCompensationEntitiesUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
