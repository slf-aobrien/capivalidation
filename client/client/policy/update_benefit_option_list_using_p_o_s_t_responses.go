// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateBenefitOptionListUsingPOSTReader is a Reader for the UpdateBenefitOptionListUsingPOST structure.
type UpdateBenefitOptionListUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBenefitOptionListUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateBenefitOptionListUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateBenefitOptionListUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateBenefitOptionListUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateBenefitOptionListUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateBenefitOptionListUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateBenefitOptionListUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateBenefitOptionListUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/policy/benefitOptionList] updateBenefitOptionListUsingPOST", response, response.Code())
	}
}

// NewUpdateBenefitOptionListUsingPOSTOK creates a UpdateBenefitOptionListUsingPOSTOK with default headers values
func NewUpdateBenefitOptionListUsingPOSTOK() *UpdateBenefitOptionListUsingPOSTOK {
	return &UpdateBenefitOptionListUsingPOSTOK{}
}

/*
UpdateBenefitOptionListUsingPOSTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateBenefitOptionListUsingPOSTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update benefit option list using p o s t o k response has a 2xx status code
func (o *UpdateBenefitOptionListUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update benefit option list using p o s t o k response has a 3xx status code
func (o *UpdateBenefitOptionListUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update benefit option list using p o s t o k response has a 4xx status code
func (o *UpdateBenefitOptionListUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update benefit option list using p o s t o k response has a 5xx status code
func (o *UpdateBenefitOptionListUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update benefit option list using p o s t o k response a status code equal to that given
func (o *UpdateBenefitOptionListUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update benefit option list using p o s t o k response
func (o *UpdateBenefitOptionListUsingPOSTOK) Code() int {
	return 200
}

func (o *UpdateBenefitOptionListUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/benefitOptionList][%d] updateBenefitOptionListUsingPOSTOK %s", 200, payload)
}

func (o *UpdateBenefitOptionListUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/benefitOptionList][%d] updateBenefitOptionListUsingPOSTOK %s", 200, payload)
}

func (o *UpdateBenefitOptionListUsingPOSTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateBenefitOptionListUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBenefitOptionListUsingPOSTCreated creates a UpdateBenefitOptionListUsingPOSTCreated with default headers values
func NewUpdateBenefitOptionListUsingPOSTCreated() *UpdateBenefitOptionListUsingPOSTCreated {
	return &UpdateBenefitOptionListUsingPOSTCreated{}
}

/*
UpdateBenefitOptionListUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateBenefitOptionListUsingPOSTCreated struct {
}

// IsSuccess returns true when this update benefit option list using p o s t created response has a 2xx status code
func (o *UpdateBenefitOptionListUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update benefit option list using p o s t created response has a 3xx status code
func (o *UpdateBenefitOptionListUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update benefit option list using p o s t created response has a 4xx status code
func (o *UpdateBenefitOptionListUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update benefit option list using p o s t created response has a 5xx status code
func (o *UpdateBenefitOptionListUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update benefit option list using p o s t created response a status code equal to that given
func (o *UpdateBenefitOptionListUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update benefit option list using p o s t created response
func (o *UpdateBenefitOptionListUsingPOSTCreated) Code() int {
	return 201
}

func (o *UpdateBenefitOptionListUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/benefitOptionList][%d] updateBenefitOptionListUsingPOSTCreated", 201)
}

func (o *UpdateBenefitOptionListUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/benefitOptionList][%d] updateBenefitOptionListUsingPOSTCreated", 201)
}

func (o *UpdateBenefitOptionListUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBenefitOptionListUsingPOSTBadRequest creates a UpdateBenefitOptionListUsingPOSTBadRequest with default headers values
func NewUpdateBenefitOptionListUsingPOSTBadRequest() *UpdateBenefitOptionListUsingPOSTBadRequest {
	return &UpdateBenefitOptionListUsingPOSTBadRequest{}
}

/*
UpdateBenefitOptionListUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateBenefitOptionListUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this update benefit option list using p o s t bad request response has a 2xx status code
func (o *UpdateBenefitOptionListUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update benefit option list using p o s t bad request response has a 3xx status code
func (o *UpdateBenefitOptionListUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update benefit option list using p o s t bad request response has a 4xx status code
func (o *UpdateBenefitOptionListUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update benefit option list using p o s t bad request response has a 5xx status code
func (o *UpdateBenefitOptionListUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update benefit option list using p o s t bad request response a status code equal to that given
func (o *UpdateBenefitOptionListUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update benefit option list using p o s t bad request response
func (o *UpdateBenefitOptionListUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *UpdateBenefitOptionListUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/benefitOptionList][%d] updateBenefitOptionListUsingPOSTBadRequest", 400)
}

func (o *UpdateBenefitOptionListUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/benefitOptionList][%d] updateBenefitOptionListUsingPOSTBadRequest", 400)
}

func (o *UpdateBenefitOptionListUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBenefitOptionListUsingPOSTUnauthorized creates a UpdateBenefitOptionListUsingPOSTUnauthorized with default headers values
func NewUpdateBenefitOptionListUsingPOSTUnauthorized() *UpdateBenefitOptionListUsingPOSTUnauthorized {
	return &UpdateBenefitOptionListUsingPOSTUnauthorized{}
}

/*
UpdateBenefitOptionListUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateBenefitOptionListUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this update benefit option list using p o s t unauthorized response has a 2xx status code
func (o *UpdateBenefitOptionListUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update benefit option list using p o s t unauthorized response has a 3xx status code
func (o *UpdateBenefitOptionListUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update benefit option list using p o s t unauthorized response has a 4xx status code
func (o *UpdateBenefitOptionListUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update benefit option list using p o s t unauthorized response has a 5xx status code
func (o *UpdateBenefitOptionListUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update benefit option list using p o s t unauthorized response a status code equal to that given
func (o *UpdateBenefitOptionListUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update benefit option list using p o s t unauthorized response
func (o *UpdateBenefitOptionListUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *UpdateBenefitOptionListUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/benefitOptionList][%d] updateBenefitOptionListUsingPOSTUnauthorized", 401)
}

func (o *UpdateBenefitOptionListUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/benefitOptionList][%d] updateBenefitOptionListUsingPOSTUnauthorized", 401)
}

func (o *UpdateBenefitOptionListUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBenefitOptionListUsingPOSTForbidden creates a UpdateBenefitOptionListUsingPOSTForbidden with default headers values
func NewUpdateBenefitOptionListUsingPOSTForbidden() *UpdateBenefitOptionListUsingPOSTForbidden {
	return &UpdateBenefitOptionListUsingPOSTForbidden{}
}

/*
UpdateBenefitOptionListUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateBenefitOptionListUsingPOSTForbidden struct {
}

// IsSuccess returns true when this update benefit option list using p o s t forbidden response has a 2xx status code
func (o *UpdateBenefitOptionListUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update benefit option list using p o s t forbidden response has a 3xx status code
func (o *UpdateBenefitOptionListUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update benefit option list using p o s t forbidden response has a 4xx status code
func (o *UpdateBenefitOptionListUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update benefit option list using p o s t forbidden response has a 5xx status code
func (o *UpdateBenefitOptionListUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update benefit option list using p o s t forbidden response a status code equal to that given
func (o *UpdateBenefitOptionListUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update benefit option list using p o s t forbidden response
func (o *UpdateBenefitOptionListUsingPOSTForbidden) Code() int {
	return 403
}

func (o *UpdateBenefitOptionListUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/benefitOptionList][%d] updateBenefitOptionListUsingPOSTForbidden", 403)
}

func (o *UpdateBenefitOptionListUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/benefitOptionList][%d] updateBenefitOptionListUsingPOSTForbidden", 403)
}

func (o *UpdateBenefitOptionListUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBenefitOptionListUsingPOSTNotFound creates a UpdateBenefitOptionListUsingPOSTNotFound with default headers values
func NewUpdateBenefitOptionListUsingPOSTNotFound() *UpdateBenefitOptionListUsingPOSTNotFound {
	return &UpdateBenefitOptionListUsingPOSTNotFound{}
}

/*
UpdateBenefitOptionListUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateBenefitOptionListUsingPOSTNotFound struct {
}

// IsSuccess returns true when this update benefit option list using p o s t not found response has a 2xx status code
func (o *UpdateBenefitOptionListUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update benefit option list using p o s t not found response has a 3xx status code
func (o *UpdateBenefitOptionListUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update benefit option list using p o s t not found response has a 4xx status code
func (o *UpdateBenefitOptionListUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update benefit option list using p o s t not found response has a 5xx status code
func (o *UpdateBenefitOptionListUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update benefit option list using p o s t not found response a status code equal to that given
func (o *UpdateBenefitOptionListUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update benefit option list using p o s t not found response
func (o *UpdateBenefitOptionListUsingPOSTNotFound) Code() int {
	return 404
}

func (o *UpdateBenefitOptionListUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/benefitOptionList][%d] updateBenefitOptionListUsingPOSTNotFound", 404)
}

func (o *UpdateBenefitOptionListUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/benefitOptionList][%d] updateBenefitOptionListUsingPOSTNotFound", 404)
}

func (o *UpdateBenefitOptionListUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBenefitOptionListUsingPOSTInternalServerError creates a UpdateBenefitOptionListUsingPOSTInternalServerError with default headers values
func NewUpdateBenefitOptionListUsingPOSTInternalServerError() *UpdateBenefitOptionListUsingPOSTInternalServerError {
	return &UpdateBenefitOptionListUsingPOSTInternalServerError{}
}

/*
UpdateBenefitOptionListUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateBenefitOptionListUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this update benefit option list using p o s t internal server error response has a 2xx status code
func (o *UpdateBenefitOptionListUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update benefit option list using p o s t internal server error response has a 3xx status code
func (o *UpdateBenefitOptionListUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update benefit option list using p o s t internal server error response has a 4xx status code
func (o *UpdateBenefitOptionListUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update benefit option list using p o s t internal server error response has a 5xx status code
func (o *UpdateBenefitOptionListUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update benefit option list using p o s t internal server error response a status code equal to that given
func (o *UpdateBenefitOptionListUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update benefit option list using p o s t internal server error response
func (o *UpdateBenefitOptionListUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *UpdateBenefitOptionListUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/benefitOptionList][%d] updateBenefitOptionListUsingPOSTInternalServerError", 500)
}

func (o *UpdateBenefitOptionListUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/benefitOptionList][%d] updateBenefitOptionListUsingPOSTInternalServerError", 500)
}

func (o *UpdateBenefitOptionListUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
