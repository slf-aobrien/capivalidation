// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateMemberGroupUsingPUT1Reader is a Reader for the UpdateMemberGroupUsingPUT1 structure.
type UpdateMemberGroupUsingPUT1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMemberGroupUsingPUT1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateMemberGroupUsingPUT1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateMemberGroupUsingPUT1Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateMemberGroupUsingPUT1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateMemberGroupUsingPUT1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateMemberGroupUsingPUT1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateMemberGroupUsingPUT1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateMemberGroupUsingPUT1InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/policy/memberGroup] updateMemberGroupUsingPUT_1", response, response.Code())
	}
}

// NewUpdateMemberGroupUsingPUT1OK creates a UpdateMemberGroupUsingPUT1OK with default headers values
func NewUpdateMemberGroupUsingPUT1OK() *UpdateMemberGroupUsingPUT1OK {
	return &UpdateMemberGroupUsingPUT1OK{}
}

/*
UpdateMemberGroupUsingPUT1OK describes a response with status code 200, with default header values.

Success
*/
type UpdateMemberGroupUsingPUT1OK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update member group using p u t1 o k response has a 2xx status code
func (o *UpdateMemberGroupUsingPUT1OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member group using p u t1 o k response has a 3xx status code
func (o *UpdateMemberGroupUsingPUT1OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group using p u t1 o k response has a 4xx status code
func (o *UpdateMemberGroupUsingPUT1OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member group using p u t1 o k response has a 5xx status code
func (o *UpdateMemberGroupUsingPUT1OK) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group using p u t1 o k response a status code equal to that given
func (o *UpdateMemberGroupUsingPUT1OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update member group using p u t1 o k response
func (o *UpdateMemberGroupUsingPUT1OK) Code() int {
	return 200
}

func (o *UpdateMemberGroupUsingPUT1OK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup][%d] updateMemberGroupUsingPUT1OK %s", 200, payload)
}

func (o *UpdateMemberGroupUsingPUT1OK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup][%d] updateMemberGroupUsingPUT1OK %s", 200, payload)
}

func (o *UpdateMemberGroupUsingPUT1OK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateMemberGroupUsingPUT1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMemberGroupUsingPUT1Created creates a UpdateMemberGroupUsingPUT1Created with default headers values
func NewUpdateMemberGroupUsingPUT1Created() *UpdateMemberGroupUsingPUT1Created {
	return &UpdateMemberGroupUsingPUT1Created{}
}

/*
UpdateMemberGroupUsingPUT1Created describes a response with status code 201, with default header values.

Created
*/
type UpdateMemberGroupUsingPUT1Created struct {
}

// IsSuccess returns true when this update member group using p u t1 created response has a 2xx status code
func (o *UpdateMemberGroupUsingPUT1Created) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member group using p u t1 created response has a 3xx status code
func (o *UpdateMemberGroupUsingPUT1Created) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group using p u t1 created response has a 4xx status code
func (o *UpdateMemberGroupUsingPUT1Created) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member group using p u t1 created response has a 5xx status code
func (o *UpdateMemberGroupUsingPUT1Created) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group using p u t1 created response a status code equal to that given
func (o *UpdateMemberGroupUsingPUT1Created) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update member group using p u t1 created response
func (o *UpdateMemberGroupUsingPUT1Created) Code() int {
	return 201
}

func (o *UpdateMemberGroupUsingPUT1Created) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup][%d] updateMemberGroupUsingPUT1Created", 201)
}

func (o *UpdateMemberGroupUsingPUT1Created) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup][%d] updateMemberGroupUsingPUT1Created", 201)
}

func (o *UpdateMemberGroupUsingPUT1Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupUsingPUT1BadRequest creates a UpdateMemberGroupUsingPUT1BadRequest with default headers values
func NewUpdateMemberGroupUsingPUT1BadRequest() *UpdateMemberGroupUsingPUT1BadRequest {
	return &UpdateMemberGroupUsingPUT1BadRequest{}
}

/*
UpdateMemberGroupUsingPUT1BadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateMemberGroupUsingPUT1BadRequest struct {
}

// IsSuccess returns true when this update member group using p u t1 bad request response has a 2xx status code
func (o *UpdateMemberGroupUsingPUT1BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group using p u t1 bad request response has a 3xx status code
func (o *UpdateMemberGroupUsingPUT1BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group using p u t1 bad request response has a 4xx status code
func (o *UpdateMemberGroupUsingPUT1BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member group using p u t1 bad request response has a 5xx status code
func (o *UpdateMemberGroupUsingPUT1BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group using p u t1 bad request response a status code equal to that given
func (o *UpdateMemberGroupUsingPUT1BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update member group using p u t1 bad request response
func (o *UpdateMemberGroupUsingPUT1BadRequest) Code() int {
	return 400
}

func (o *UpdateMemberGroupUsingPUT1BadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup][%d] updateMemberGroupUsingPUT1BadRequest", 400)
}

func (o *UpdateMemberGroupUsingPUT1BadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup][%d] updateMemberGroupUsingPUT1BadRequest", 400)
}

func (o *UpdateMemberGroupUsingPUT1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupUsingPUT1Unauthorized creates a UpdateMemberGroupUsingPUT1Unauthorized with default headers values
func NewUpdateMemberGroupUsingPUT1Unauthorized() *UpdateMemberGroupUsingPUT1Unauthorized {
	return &UpdateMemberGroupUsingPUT1Unauthorized{}
}

/*
UpdateMemberGroupUsingPUT1Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateMemberGroupUsingPUT1Unauthorized struct {
}

// IsSuccess returns true when this update member group using p u t1 unauthorized response has a 2xx status code
func (o *UpdateMemberGroupUsingPUT1Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group using p u t1 unauthorized response has a 3xx status code
func (o *UpdateMemberGroupUsingPUT1Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group using p u t1 unauthorized response has a 4xx status code
func (o *UpdateMemberGroupUsingPUT1Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member group using p u t1 unauthorized response has a 5xx status code
func (o *UpdateMemberGroupUsingPUT1Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group using p u t1 unauthorized response a status code equal to that given
func (o *UpdateMemberGroupUsingPUT1Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update member group using p u t1 unauthorized response
func (o *UpdateMemberGroupUsingPUT1Unauthorized) Code() int {
	return 401
}

func (o *UpdateMemberGroupUsingPUT1Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup][%d] updateMemberGroupUsingPUT1Unauthorized", 401)
}

func (o *UpdateMemberGroupUsingPUT1Unauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup][%d] updateMemberGroupUsingPUT1Unauthorized", 401)
}

func (o *UpdateMemberGroupUsingPUT1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupUsingPUT1Forbidden creates a UpdateMemberGroupUsingPUT1Forbidden with default headers values
func NewUpdateMemberGroupUsingPUT1Forbidden() *UpdateMemberGroupUsingPUT1Forbidden {
	return &UpdateMemberGroupUsingPUT1Forbidden{}
}

/*
UpdateMemberGroupUsingPUT1Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateMemberGroupUsingPUT1Forbidden struct {
}

// IsSuccess returns true when this update member group using p u t1 forbidden response has a 2xx status code
func (o *UpdateMemberGroupUsingPUT1Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group using p u t1 forbidden response has a 3xx status code
func (o *UpdateMemberGroupUsingPUT1Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group using p u t1 forbidden response has a 4xx status code
func (o *UpdateMemberGroupUsingPUT1Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member group using p u t1 forbidden response has a 5xx status code
func (o *UpdateMemberGroupUsingPUT1Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group using p u t1 forbidden response a status code equal to that given
func (o *UpdateMemberGroupUsingPUT1Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update member group using p u t1 forbidden response
func (o *UpdateMemberGroupUsingPUT1Forbidden) Code() int {
	return 403
}

func (o *UpdateMemberGroupUsingPUT1Forbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup][%d] updateMemberGroupUsingPUT1Forbidden", 403)
}

func (o *UpdateMemberGroupUsingPUT1Forbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup][%d] updateMemberGroupUsingPUT1Forbidden", 403)
}

func (o *UpdateMemberGroupUsingPUT1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupUsingPUT1NotFound creates a UpdateMemberGroupUsingPUT1NotFound with default headers values
func NewUpdateMemberGroupUsingPUT1NotFound() *UpdateMemberGroupUsingPUT1NotFound {
	return &UpdateMemberGroupUsingPUT1NotFound{}
}

/*
UpdateMemberGroupUsingPUT1NotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateMemberGroupUsingPUT1NotFound struct {
}

// IsSuccess returns true when this update member group using p u t1 not found response has a 2xx status code
func (o *UpdateMemberGroupUsingPUT1NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group using p u t1 not found response has a 3xx status code
func (o *UpdateMemberGroupUsingPUT1NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group using p u t1 not found response has a 4xx status code
func (o *UpdateMemberGroupUsingPUT1NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member group using p u t1 not found response has a 5xx status code
func (o *UpdateMemberGroupUsingPUT1NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group using p u t1 not found response a status code equal to that given
func (o *UpdateMemberGroupUsingPUT1NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update member group using p u t1 not found response
func (o *UpdateMemberGroupUsingPUT1NotFound) Code() int {
	return 404
}

func (o *UpdateMemberGroupUsingPUT1NotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup][%d] updateMemberGroupUsingPUT1NotFound", 404)
}

func (o *UpdateMemberGroupUsingPUT1NotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup][%d] updateMemberGroupUsingPUT1NotFound", 404)
}

func (o *UpdateMemberGroupUsingPUT1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupUsingPUT1InternalServerError creates a UpdateMemberGroupUsingPUT1InternalServerError with default headers values
func NewUpdateMemberGroupUsingPUT1InternalServerError() *UpdateMemberGroupUsingPUT1InternalServerError {
	return &UpdateMemberGroupUsingPUT1InternalServerError{}
}

/*
UpdateMemberGroupUsingPUT1InternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateMemberGroupUsingPUT1InternalServerError struct {
}

// IsSuccess returns true when this update member group using p u t1 internal server error response has a 2xx status code
func (o *UpdateMemberGroupUsingPUT1InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group using p u t1 internal server error response has a 3xx status code
func (o *UpdateMemberGroupUsingPUT1InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group using p u t1 internal server error response has a 4xx status code
func (o *UpdateMemberGroupUsingPUT1InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member group using p u t1 internal server error response has a 5xx status code
func (o *UpdateMemberGroupUsingPUT1InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update member group using p u t1 internal server error response a status code equal to that given
func (o *UpdateMemberGroupUsingPUT1InternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update member group using p u t1 internal server error response
func (o *UpdateMemberGroupUsingPUT1InternalServerError) Code() int {
	return 500
}

func (o *UpdateMemberGroupUsingPUT1InternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup][%d] updateMemberGroupUsingPUT1InternalServerError", 500)
}

func (o *UpdateMemberGroupUsingPUT1InternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroup][%d] updateMemberGroupUsingPUT1InternalServerError", 500)
}

func (o *UpdateMemberGroupUsingPUT1InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
