// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// InsertMemberGroupTransferRuleUsingPOSTReader is a Reader for the InsertMemberGroupTransferRuleUsingPOST structure.
type InsertMemberGroupTransferRuleUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InsertMemberGroupTransferRuleUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInsertMemberGroupTransferRuleUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewInsertMemberGroupTransferRuleUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewInsertMemberGroupTransferRuleUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInsertMemberGroupTransferRuleUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInsertMemberGroupTransferRuleUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/policy/memberGroupTransferRule] insertMemberGroupTransferRuleUsingPOST", response, response.Code())
	}
}

// NewInsertMemberGroupTransferRuleUsingPOSTOK creates a InsertMemberGroupTransferRuleUsingPOSTOK with default headers values
func NewInsertMemberGroupTransferRuleUsingPOSTOK() *InsertMemberGroupTransferRuleUsingPOSTOK {
	return &InsertMemberGroupTransferRuleUsingPOSTOK{}
}

/*
InsertMemberGroupTransferRuleUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type InsertMemberGroupTransferRuleUsingPOSTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this insert member group transfer rule using p o s t o k response has a 2xx status code
func (o *InsertMemberGroupTransferRuleUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this insert member group transfer rule using p o s t o k response has a 3xx status code
func (o *InsertMemberGroupTransferRuleUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert member group transfer rule using p o s t o k response has a 4xx status code
func (o *InsertMemberGroupTransferRuleUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this insert member group transfer rule using p o s t o k response has a 5xx status code
func (o *InsertMemberGroupTransferRuleUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this insert member group transfer rule using p o s t o k response a status code equal to that given
func (o *InsertMemberGroupTransferRuleUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the insert member group transfer rule using p o s t o k response
func (o *InsertMemberGroupTransferRuleUsingPOSTOK) Code() int {
	return 200
}

func (o *InsertMemberGroupTransferRuleUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupTransferRule][%d] insertMemberGroupTransferRuleUsingPOSTOK %s", 200, payload)
}

func (o *InsertMemberGroupTransferRuleUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupTransferRule][%d] insertMemberGroupTransferRuleUsingPOSTOK %s", 200, payload)
}

func (o *InsertMemberGroupTransferRuleUsingPOSTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *InsertMemberGroupTransferRuleUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInsertMemberGroupTransferRuleUsingPOSTCreated creates a InsertMemberGroupTransferRuleUsingPOSTCreated with default headers values
func NewInsertMemberGroupTransferRuleUsingPOSTCreated() *InsertMemberGroupTransferRuleUsingPOSTCreated {
	return &InsertMemberGroupTransferRuleUsingPOSTCreated{}
}

/*
InsertMemberGroupTransferRuleUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type InsertMemberGroupTransferRuleUsingPOSTCreated struct {
}

// IsSuccess returns true when this insert member group transfer rule using p o s t created response has a 2xx status code
func (o *InsertMemberGroupTransferRuleUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this insert member group transfer rule using p o s t created response has a 3xx status code
func (o *InsertMemberGroupTransferRuleUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert member group transfer rule using p o s t created response has a 4xx status code
func (o *InsertMemberGroupTransferRuleUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this insert member group transfer rule using p o s t created response has a 5xx status code
func (o *InsertMemberGroupTransferRuleUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this insert member group transfer rule using p o s t created response a status code equal to that given
func (o *InsertMemberGroupTransferRuleUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the insert member group transfer rule using p o s t created response
func (o *InsertMemberGroupTransferRuleUsingPOSTCreated) Code() int {
	return 201
}

func (o *InsertMemberGroupTransferRuleUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupTransferRule][%d] insertMemberGroupTransferRuleUsingPOSTCreated", 201)
}

func (o *InsertMemberGroupTransferRuleUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupTransferRule][%d] insertMemberGroupTransferRuleUsingPOSTCreated", 201)
}

func (o *InsertMemberGroupTransferRuleUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertMemberGroupTransferRuleUsingPOSTUnauthorized creates a InsertMemberGroupTransferRuleUsingPOSTUnauthorized with default headers values
func NewInsertMemberGroupTransferRuleUsingPOSTUnauthorized() *InsertMemberGroupTransferRuleUsingPOSTUnauthorized {
	return &InsertMemberGroupTransferRuleUsingPOSTUnauthorized{}
}

/*
InsertMemberGroupTransferRuleUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type InsertMemberGroupTransferRuleUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this insert member group transfer rule using p o s t unauthorized response has a 2xx status code
func (o *InsertMemberGroupTransferRuleUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert member group transfer rule using p o s t unauthorized response has a 3xx status code
func (o *InsertMemberGroupTransferRuleUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert member group transfer rule using p o s t unauthorized response has a 4xx status code
func (o *InsertMemberGroupTransferRuleUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert member group transfer rule using p o s t unauthorized response has a 5xx status code
func (o *InsertMemberGroupTransferRuleUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this insert member group transfer rule using p o s t unauthorized response a status code equal to that given
func (o *InsertMemberGroupTransferRuleUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the insert member group transfer rule using p o s t unauthorized response
func (o *InsertMemberGroupTransferRuleUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *InsertMemberGroupTransferRuleUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupTransferRule][%d] insertMemberGroupTransferRuleUsingPOSTUnauthorized", 401)
}

func (o *InsertMemberGroupTransferRuleUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupTransferRule][%d] insertMemberGroupTransferRuleUsingPOSTUnauthorized", 401)
}

func (o *InsertMemberGroupTransferRuleUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertMemberGroupTransferRuleUsingPOSTForbidden creates a InsertMemberGroupTransferRuleUsingPOSTForbidden with default headers values
func NewInsertMemberGroupTransferRuleUsingPOSTForbidden() *InsertMemberGroupTransferRuleUsingPOSTForbidden {
	return &InsertMemberGroupTransferRuleUsingPOSTForbidden{}
}

/*
InsertMemberGroupTransferRuleUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type InsertMemberGroupTransferRuleUsingPOSTForbidden struct {
}

// IsSuccess returns true when this insert member group transfer rule using p o s t forbidden response has a 2xx status code
func (o *InsertMemberGroupTransferRuleUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert member group transfer rule using p o s t forbidden response has a 3xx status code
func (o *InsertMemberGroupTransferRuleUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert member group transfer rule using p o s t forbidden response has a 4xx status code
func (o *InsertMemberGroupTransferRuleUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert member group transfer rule using p o s t forbidden response has a 5xx status code
func (o *InsertMemberGroupTransferRuleUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this insert member group transfer rule using p o s t forbidden response a status code equal to that given
func (o *InsertMemberGroupTransferRuleUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the insert member group transfer rule using p o s t forbidden response
func (o *InsertMemberGroupTransferRuleUsingPOSTForbidden) Code() int {
	return 403
}

func (o *InsertMemberGroupTransferRuleUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupTransferRule][%d] insertMemberGroupTransferRuleUsingPOSTForbidden", 403)
}

func (o *InsertMemberGroupTransferRuleUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupTransferRule][%d] insertMemberGroupTransferRuleUsingPOSTForbidden", 403)
}

func (o *InsertMemberGroupTransferRuleUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertMemberGroupTransferRuleUsingPOSTNotFound creates a InsertMemberGroupTransferRuleUsingPOSTNotFound with default headers values
func NewInsertMemberGroupTransferRuleUsingPOSTNotFound() *InsertMemberGroupTransferRuleUsingPOSTNotFound {
	return &InsertMemberGroupTransferRuleUsingPOSTNotFound{}
}

/*
InsertMemberGroupTransferRuleUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type InsertMemberGroupTransferRuleUsingPOSTNotFound struct {
}

// IsSuccess returns true when this insert member group transfer rule using p o s t not found response has a 2xx status code
func (o *InsertMemberGroupTransferRuleUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert member group transfer rule using p o s t not found response has a 3xx status code
func (o *InsertMemberGroupTransferRuleUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert member group transfer rule using p o s t not found response has a 4xx status code
func (o *InsertMemberGroupTransferRuleUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert member group transfer rule using p o s t not found response has a 5xx status code
func (o *InsertMemberGroupTransferRuleUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this insert member group transfer rule using p o s t not found response a status code equal to that given
func (o *InsertMemberGroupTransferRuleUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the insert member group transfer rule using p o s t not found response
func (o *InsertMemberGroupTransferRuleUsingPOSTNotFound) Code() int {
	return 404
}

func (o *InsertMemberGroupTransferRuleUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupTransferRule][%d] insertMemberGroupTransferRuleUsingPOSTNotFound", 404)
}

func (o *InsertMemberGroupTransferRuleUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/policy/memberGroupTransferRule][%d] insertMemberGroupTransferRuleUsingPOSTNotFound", 404)
}

func (o *InsertMemberGroupTransferRuleUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
