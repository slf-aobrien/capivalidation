// Code generated by go-swagger; DO NOT EDIT.

package focus

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// InsertPersonAddressUsingPOSTReader is a Reader for the InsertPersonAddressUsingPOST structure.
type InsertPersonAddressUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InsertPersonAddressUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInsertPersonAddressUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewInsertPersonAddressUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInsertPersonAddressUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewInsertPersonAddressUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInsertPersonAddressUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInsertPersonAddressUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInsertPersonAddressUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /compassintegrationapp/focus/person/address] insertPersonAddressUsingPOST", response, response.Code())
	}
}

// NewInsertPersonAddressUsingPOSTOK creates a InsertPersonAddressUsingPOSTOK with default headers values
func NewInsertPersonAddressUsingPOSTOK() *InsertPersonAddressUsingPOSTOK {
	return &InsertPersonAddressUsingPOSTOK{}
}

/*
InsertPersonAddressUsingPOSTOK describes a response with status code 200, with default header values.

Success
*/
type InsertPersonAddressUsingPOSTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this insert person address using p o s t o k response has a 2xx status code
func (o *InsertPersonAddressUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this insert person address using p o s t o k response has a 3xx status code
func (o *InsertPersonAddressUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert person address using p o s t o k response has a 4xx status code
func (o *InsertPersonAddressUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this insert person address using p o s t o k response has a 5xx status code
func (o *InsertPersonAddressUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this insert person address using p o s t o k response a status code equal to that given
func (o *InsertPersonAddressUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the insert person address using p o s t o k response
func (o *InsertPersonAddressUsingPOSTOK) Code() int {
	return 200
}

func (o *InsertPersonAddressUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/focus/person/address][%d] insertPersonAddressUsingPOSTOK %s", 200, payload)
}

func (o *InsertPersonAddressUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /compassintegrationapp/focus/person/address][%d] insertPersonAddressUsingPOSTOK %s", 200, payload)
}

func (o *InsertPersonAddressUsingPOSTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *InsertPersonAddressUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInsertPersonAddressUsingPOSTCreated creates a InsertPersonAddressUsingPOSTCreated with default headers values
func NewInsertPersonAddressUsingPOSTCreated() *InsertPersonAddressUsingPOSTCreated {
	return &InsertPersonAddressUsingPOSTCreated{}
}

/*
InsertPersonAddressUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type InsertPersonAddressUsingPOSTCreated struct {
}

// IsSuccess returns true when this insert person address using p o s t created response has a 2xx status code
func (o *InsertPersonAddressUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this insert person address using p o s t created response has a 3xx status code
func (o *InsertPersonAddressUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert person address using p o s t created response has a 4xx status code
func (o *InsertPersonAddressUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this insert person address using p o s t created response has a 5xx status code
func (o *InsertPersonAddressUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this insert person address using p o s t created response a status code equal to that given
func (o *InsertPersonAddressUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the insert person address using p o s t created response
func (o *InsertPersonAddressUsingPOSTCreated) Code() int {
	return 201
}

func (o *InsertPersonAddressUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/focus/person/address][%d] insertPersonAddressUsingPOSTCreated", 201)
}

func (o *InsertPersonAddressUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/focus/person/address][%d] insertPersonAddressUsingPOSTCreated", 201)
}

func (o *InsertPersonAddressUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertPersonAddressUsingPOSTBadRequest creates a InsertPersonAddressUsingPOSTBadRequest with default headers values
func NewInsertPersonAddressUsingPOSTBadRequest() *InsertPersonAddressUsingPOSTBadRequest {
	return &InsertPersonAddressUsingPOSTBadRequest{}
}

/*
InsertPersonAddressUsingPOSTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type InsertPersonAddressUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this insert person address using p o s t bad request response has a 2xx status code
func (o *InsertPersonAddressUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert person address using p o s t bad request response has a 3xx status code
func (o *InsertPersonAddressUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert person address using p o s t bad request response has a 4xx status code
func (o *InsertPersonAddressUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert person address using p o s t bad request response has a 5xx status code
func (o *InsertPersonAddressUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this insert person address using p o s t bad request response a status code equal to that given
func (o *InsertPersonAddressUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the insert person address using p o s t bad request response
func (o *InsertPersonAddressUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *InsertPersonAddressUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/focus/person/address][%d] insertPersonAddressUsingPOSTBadRequest", 400)
}

func (o *InsertPersonAddressUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/focus/person/address][%d] insertPersonAddressUsingPOSTBadRequest", 400)
}

func (o *InsertPersonAddressUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertPersonAddressUsingPOSTUnauthorized creates a InsertPersonAddressUsingPOSTUnauthorized with default headers values
func NewInsertPersonAddressUsingPOSTUnauthorized() *InsertPersonAddressUsingPOSTUnauthorized {
	return &InsertPersonAddressUsingPOSTUnauthorized{}
}

/*
InsertPersonAddressUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type InsertPersonAddressUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this insert person address using p o s t unauthorized response has a 2xx status code
func (o *InsertPersonAddressUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert person address using p o s t unauthorized response has a 3xx status code
func (o *InsertPersonAddressUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert person address using p o s t unauthorized response has a 4xx status code
func (o *InsertPersonAddressUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert person address using p o s t unauthorized response has a 5xx status code
func (o *InsertPersonAddressUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this insert person address using p o s t unauthorized response a status code equal to that given
func (o *InsertPersonAddressUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the insert person address using p o s t unauthorized response
func (o *InsertPersonAddressUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *InsertPersonAddressUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/focus/person/address][%d] insertPersonAddressUsingPOSTUnauthorized", 401)
}

func (o *InsertPersonAddressUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/focus/person/address][%d] insertPersonAddressUsingPOSTUnauthorized", 401)
}

func (o *InsertPersonAddressUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertPersonAddressUsingPOSTForbidden creates a InsertPersonAddressUsingPOSTForbidden with default headers values
func NewInsertPersonAddressUsingPOSTForbidden() *InsertPersonAddressUsingPOSTForbidden {
	return &InsertPersonAddressUsingPOSTForbidden{}
}

/*
InsertPersonAddressUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type InsertPersonAddressUsingPOSTForbidden struct {
}

// IsSuccess returns true when this insert person address using p o s t forbidden response has a 2xx status code
func (o *InsertPersonAddressUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert person address using p o s t forbidden response has a 3xx status code
func (o *InsertPersonAddressUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert person address using p o s t forbidden response has a 4xx status code
func (o *InsertPersonAddressUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert person address using p o s t forbidden response has a 5xx status code
func (o *InsertPersonAddressUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this insert person address using p o s t forbidden response a status code equal to that given
func (o *InsertPersonAddressUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the insert person address using p o s t forbidden response
func (o *InsertPersonAddressUsingPOSTForbidden) Code() int {
	return 403
}

func (o *InsertPersonAddressUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/focus/person/address][%d] insertPersonAddressUsingPOSTForbidden", 403)
}

func (o *InsertPersonAddressUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/focus/person/address][%d] insertPersonAddressUsingPOSTForbidden", 403)
}

func (o *InsertPersonAddressUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertPersonAddressUsingPOSTNotFound creates a InsertPersonAddressUsingPOSTNotFound with default headers values
func NewInsertPersonAddressUsingPOSTNotFound() *InsertPersonAddressUsingPOSTNotFound {
	return &InsertPersonAddressUsingPOSTNotFound{}
}

/*
InsertPersonAddressUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type InsertPersonAddressUsingPOSTNotFound struct {
}

// IsSuccess returns true when this insert person address using p o s t not found response has a 2xx status code
func (o *InsertPersonAddressUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert person address using p o s t not found response has a 3xx status code
func (o *InsertPersonAddressUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert person address using p o s t not found response has a 4xx status code
func (o *InsertPersonAddressUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this insert person address using p o s t not found response has a 5xx status code
func (o *InsertPersonAddressUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this insert person address using p o s t not found response a status code equal to that given
func (o *InsertPersonAddressUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the insert person address using p o s t not found response
func (o *InsertPersonAddressUsingPOSTNotFound) Code() int {
	return 404
}

func (o *InsertPersonAddressUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/focus/person/address][%d] insertPersonAddressUsingPOSTNotFound", 404)
}

func (o *InsertPersonAddressUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/focus/person/address][%d] insertPersonAddressUsingPOSTNotFound", 404)
}

func (o *InsertPersonAddressUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsertPersonAddressUsingPOSTInternalServerError creates a InsertPersonAddressUsingPOSTInternalServerError with default headers values
func NewInsertPersonAddressUsingPOSTInternalServerError() *InsertPersonAddressUsingPOSTInternalServerError {
	return &InsertPersonAddressUsingPOSTInternalServerError{}
}

/*
InsertPersonAddressUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type InsertPersonAddressUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this insert person address using p o s t internal server error response has a 2xx status code
func (o *InsertPersonAddressUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this insert person address using p o s t internal server error response has a 3xx status code
func (o *InsertPersonAddressUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this insert person address using p o s t internal server error response has a 4xx status code
func (o *InsertPersonAddressUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this insert person address using p o s t internal server error response has a 5xx status code
func (o *InsertPersonAddressUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this insert person address using p o s t internal server error response a status code equal to that given
func (o *InsertPersonAddressUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the insert person address using p o s t internal server error response
func (o *InsertPersonAddressUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *InsertPersonAddressUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /compassintegrationapp/focus/person/address][%d] insertPersonAddressUsingPOSTInternalServerError", 500)
}

func (o *InsertPersonAddressUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /compassintegrationapp/focus/person/address][%d] insertPersonAddressUsingPOSTInternalServerError", 500)
}

func (o *InsertPersonAddressUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
