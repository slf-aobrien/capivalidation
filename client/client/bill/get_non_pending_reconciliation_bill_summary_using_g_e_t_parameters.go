// Code generated by go-swagger; DO NOT EDIT.

package bill

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetNonPendingReconciliationBillSummaryUsingGETParams creates a new GetNonPendingReconciliationBillSummaryUsingGETParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetNonPendingReconciliationBillSummaryUsingGETParams() *GetNonPendingReconciliationBillSummaryUsingGETParams {
	return &GetNonPendingReconciliationBillSummaryUsingGETParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetNonPendingReconciliationBillSummaryUsingGETParamsWithTimeout creates a new GetNonPendingReconciliationBillSummaryUsingGETParams object
// with the ability to set a timeout on a request.
func NewGetNonPendingReconciliationBillSummaryUsingGETParamsWithTimeout(timeout time.Duration) *GetNonPendingReconciliationBillSummaryUsingGETParams {
	return &GetNonPendingReconciliationBillSummaryUsingGETParams{
		timeout: timeout,
	}
}

// NewGetNonPendingReconciliationBillSummaryUsingGETParamsWithContext creates a new GetNonPendingReconciliationBillSummaryUsingGETParams object
// with the ability to set a context for a request.
func NewGetNonPendingReconciliationBillSummaryUsingGETParamsWithContext(ctx context.Context) *GetNonPendingReconciliationBillSummaryUsingGETParams {
	return &GetNonPendingReconciliationBillSummaryUsingGETParams{
		Context: ctx,
	}
}

// NewGetNonPendingReconciliationBillSummaryUsingGETParamsWithHTTPClient creates a new GetNonPendingReconciliationBillSummaryUsingGETParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetNonPendingReconciliationBillSummaryUsingGETParamsWithHTTPClient(client *http.Client) *GetNonPendingReconciliationBillSummaryUsingGETParams {
	return &GetNonPendingReconciliationBillSummaryUsingGETParams{
		HTTPClient: client,
	}
}

/*
GetNonPendingReconciliationBillSummaryUsingGETParams contains all the parameters to send to the API endpoint

	for the get non pending reconciliation bill summary using g e t operation.

	Typically these are written to a http.Request.
*/
type GetNonPendingReconciliationBillSummaryUsingGETParams struct {

	/* BillGroupRuleKey.

	   billGroupRuleKey
	*/
	BillGroupRuleKey string

	/* PageEnd.

	   pageEnd
	*/
	PageEnd *string

	/* PageStart.

	   pageStart
	*/
	PageStart string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get non pending reconciliation bill summary using g e t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetNonPendingReconciliationBillSummaryUsingGETParams) WithDefaults() *GetNonPendingReconciliationBillSummaryUsingGETParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get non pending reconciliation bill summary using g e t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetNonPendingReconciliationBillSummaryUsingGETParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get non pending reconciliation bill summary using g e t params
func (o *GetNonPendingReconciliationBillSummaryUsingGETParams) WithTimeout(timeout time.Duration) *GetNonPendingReconciliationBillSummaryUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get non pending reconciliation bill summary using g e t params
func (o *GetNonPendingReconciliationBillSummaryUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get non pending reconciliation bill summary using g e t params
func (o *GetNonPendingReconciliationBillSummaryUsingGETParams) WithContext(ctx context.Context) *GetNonPendingReconciliationBillSummaryUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get non pending reconciliation bill summary using g e t params
func (o *GetNonPendingReconciliationBillSummaryUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get non pending reconciliation bill summary using g e t params
func (o *GetNonPendingReconciliationBillSummaryUsingGETParams) WithHTTPClient(client *http.Client) *GetNonPendingReconciliationBillSummaryUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get non pending reconciliation bill summary using g e t params
func (o *GetNonPendingReconciliationBillSummaryUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBillGroupRuleKey adds the billGroupRuleKey to the get non pending reconciliation bill summary using g e t params
func (o *GetNonPendingReconciliationBillSummaryUsingGETParams) WithBillGroupRuleKey(billGroupRuleKey string) *GetNonPendingReconciliationBillSummaryUsingGETParams {
	o.SetBillGroupRuleKey(billGroupRuleKey)
	return o
}

// SetBillGroupRuleKey adds the billGroupRuleKey to the get non pending reconciliation bill summary using g e t params
func (o *GetNonPendingReconciliationBillSummaryUsingGETParams) SetBillGroupRuleKey(billGroupRuleKey string) {
	o.BillGroupRuleKey = billGroupRuleKey
}

// WithPageEnd adds the pageEnd to the get non pending reconciliation bill summary using g e t params
func (o *GetNonPendingReconciliationBillSummaryUsingGETParams) WithPageEnd(pageEnd *string) *GetNonPendingReconciliationBillSummaryUsingGETParams {
	o.SetPageEnd(pageEnd)
	return o
}

// SetPageEnd adds the pageEnd to the get non pending reconciliation bill summary using g e t params
func (o *GetNonPendingReconciliationBillSummaryUsingGETParams) SetPageEnd(pageEnd *string) {
	o.PageEnd = pageEnd
}

// WithPageStart adds the pageStart to the get non pending reconciliation bill summary using g e t params
func (o *GetNonPendingReconciliationBillSummaryUsingGETParams) WithPageStart(pageStart string) *GetNonPendingReconciliationBillSummaryUsingGETParams {
	o.SetPageStart(pageStart)
	return o
}

// SetPageStart adds the pageStart to the get non pending reconciliation bill summary using g e t params
func (o *GetNonPendingReconciliationBillSummaryUsingGETParams) SetPageStart(pageStart string) {
	o.PageStart = pageStart
}

// WriteToRequest writes these params to a swagger request
func (o *GetNonPendingReconciliationBillSummaryUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param billGroupRuleKey
	qrBillGroupRuleKey := o.BillGroupRuleKey
	qBillGroupRuleKey := qrBillGroupRuleKey
	if qBillGroupRuleKey != "" {

		if err := r.SetQueryParam("billGroupRuleKey", qBillGroupRuleKey); err != nil {
			return err
		}
	}

	if o.PageEnd != nil {

		// query param pageEnd
		var qrPageEnd string

		if o.PageEnd != nil {
			qrPageEnd = *o.PageEnd
		}
		qPageEnd := qrPageEnd
		if qPageEnd != "" {

			if err := r.SetQueryParam("pageEnd", qPageEnd); err != nil {
				return err
			}
		}
	}

	// query param pageStart
	qrPageStart := o.PageStart
	qPageStart := qrPageStart
	if qPageStart != "" {

		if err := r.SetQueryParam("pageStart", qPageStart); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
