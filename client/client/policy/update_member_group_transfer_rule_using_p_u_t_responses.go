// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateMemberGroupTransferRuleUsingPUTReader is a Reader for the UpdateMemberGroupTransferRuleUsingPUT structure.
type UpdateMemberGroupTransferRuleUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMemberGroupTransferRuleUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateMemberGroupTransferRuleUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateMemberGroupTransferRuleUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateMemberGroupTransferRuleUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateMemberGroupTransferRuleUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateMemberGroupTransferRuleUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/policy/memberGroupTransferRule] updateMemberGroupTransferRuleUsingPUT", response, response.Code())
	}
}

// NewUpdateMemberGroupTransferRuleUsingPUTOK creates a UpdateMemberGroupTransferRuleUsingPUTOK with default headers values
func NewUpdateMemberGroupTransferRuleUsingPUTOK() *UpdateMemberGroupTransferRuleUsingPUTOK {
	return &UpdateMemberGroupTransferRuleUsingPUTOK{}
}

/*
UpdateMemberGroupTransferRuleUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type UpdateMemberGroupTransferRuleUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update member group transfer rule using p u t o k response has a 2xx status code
func (o *UpdateMemberGroupTransferRuleUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member group transfer rule using p u t o k response has a 3xx status code
func (o *UpdateMemberGroupTransferRuleUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group transfer rule using p u t o k response has a 4xx status code
func (o *UpdateMemberGroupTransferRuleUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member group transfer rule using p u t o k response has a 5xx status code
func (o *UpdateMemberGroupTransferRuleUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group transfer rule using p u t o k response a status code equal to that given
func (o *UpdateMemberGroupTransferRuleUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update member group transfer rule using p u t o k response
func (o *UpdateMemberGroupTransferRuleUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateMemberGroupTransferRuleUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupTransferRule][%d] updateMemberGroupTransferRuleUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberGroupTransferRuleUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupTransferRule][%d] updateMemberGroupTransferRuleUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberGroupTransferRuleUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateMemberGroupTransferRuleUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMemberGroupTransferRuleUsingPUTCreated creates a UpdateMemberGroupTransferRuleUsingPUTCreated with default headers values
func NewUpdateMemberGroupTransferRuleUsingPUTCreated() *UpdateMemberGroupTransferRuleUsingPUTCreated {
	return &UpdateMemberGroupTransferRuleUsingPUTCreated{}
}

/*
UpdateMemberGroupTransferRuleUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateMemberGroupTransferRuleUsingPUTCreated struct {
}

// IsSuccess returns true when this update member group transfer rule using p u t created response has a 2xx status code
func (o *UpdateMemberGroupTransferRuleUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member group transfer rule using p u t created response has a 3xx status code
func (o *UpdateMemberGroupTransferRuleUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group transfer rule using p u t created response has a 4xx status code
func (o *UpdateMemberGroupTransferRuleUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member group transfer rule using p u t created response has a 5xx status code
func (o *UpdateMemberGroupTransferRuleUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group transfer rule using p u t created response a status code equal to that given
func (o *UpdateMemberGroupTransferRuleUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update member group transfer rule using p u t created response
func (o *UpdateMemberGroupTransferRuleUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateMemberGroupTransferRuleUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupTransferRule][%d] updateMemberGroupTransferRuleUsingPUTCreated", 201)
}

func (o *UpdateMemberGroupTransferRuleUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupTransferRule][%d] updateMemberGroupTransferRuleUsingPUTCreated", 201)
}

func (o *UpdateMemberGroupTransferRuleUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupTransferRuleUsingPUTUnauthorized creates a UpdateMemberGroupTransferRuleUsingPUTUnauthorized with default headers values
func NewUpdateMemberGroupTransferRuleUsingPUTUnauthorized() *UpdateMemberGroupTransferRuleUsingPUTUnauthorized {
	return &UpdateMemberGroupTransferRuleUsingPUTUnauthorized{}
}

/*
UpdateMemberGroupTransferRuleUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateMemberGroupTransferRuleUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update member group transfer rule using p u t unauthorized response has a 2xx status code
func (o *UpdateMemberGroupTransferRuleUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group transfer rule using p u t unauthorized response has a 3xx status code
func (o *UpdateMemberGroupTransferRuleUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group transfer rule using p u t unauthorized response has a 4xx status code
func (o *UpdateMemberGroupTransferRuleUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member group transfer rule using p u t unauthorized response has a 5xx status code
func (o *UpdateMemberGroupTransferRuleUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group transfer rule using p u t unauthorized response a status code equal to that given
func (o *UpdateMemberGroupTransferRuleUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update member group transfer rule using p u t unauthorized response
func (o *UpdateMemberGroupTransferRuleUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateMemberGroupTransferRuleUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupTransferRule][%d] updateMemberGroupTransferRuleUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberGroupTransferRuleUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupTransferRule][%d] updateMemberGroupTransferRuleUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberGroupTransferRuleUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupTransferRuleUsingPUTForbidden creates a UpdateMemberGroupTransferRuleUsingPUTForbidden with default headers values
func NewUpdateMemberGroupTransferRuleUsingPUTForbidden() *UpdateMemberGroupTransferRuleUsingPUTForbidden {
	return &UpdateMemberGroupTransferRuleUsingPUTForbidden{}
}

/*
UpdateMemberGroupTransferRuleUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateMemberGroupTransferRuleUsingPUTForbidden struct {
}

// IsSuccess returns true when this update member group transfer rule using p u t forbidden response has a 2xx status code
func (o *UpdateMemberGroupTransferRuleUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group transfer rule using p u t forbidden response has a 3xx status code
func (o *UpdateMemberGroupTransferRuleUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group transfer rule using p u t forbidden response has a 4xx status code
func (o *UpdateMemberGroupTransferRuleUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member group transfer rule using p u t forbidden response has a 5xx status code
func (o *UpdateMemberGroupTransferRuleUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group transfer rule using p u t forbidden response a status code equal to that given
func (o *UpdateMemberGroupTransferRuleUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update member group transfer rule using p u t forbidden response
func (o *UpdateMemberGroupTransferRuleUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateMemberGroupTransferRuleUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupTransferRule][%d] updateMemberGroupTransferRuleUsingPUTForbidden", 403)
}

func (o *UpdateMemberGroupTransferRuleUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupTransferRule][%d] updateMemberGroupTransferRuleUsingPUTForbidden", 403)
}

func (o *UpdateMemberGroupTransferRuleUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberGroupTransferRuleUsingPUTNotFound creates a UpdateMemberGroupTransferRuleUsingPUTNotFound with default headers values
func NewUpdateMemberGroupTransferRuleUsingPUTNotFound() *UpdateMemberGroupTransferRuleUsingPUTNotFound {
	return &UpdateMemberGroupTransferRuleUsingPUTNotFound{}
}

/*
UpdateMemberGroupTransferRuleUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateMemberGroupTransferRuleUsingPUTNotFound struct {
}

// IsSuccess returns true when this update member group transfer rule using p u t not found response has a 2xx status code
func (o *UpdateMemberGroupTransferRuleUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member group transfer rule using p u t not found response has a 3xx status code
func (o *UpdateMemberGroupTransferRuleUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member group transfer rule using p u t not found response has a 4xx status code
func (o *UpdateMemberGroupTransferRuleUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member group transfer rule using p u t not found response has a 5xx status code
func (o *UpdateMemberGroupTransferRuleUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update member group transfer rule using p u t not found response a status code equal to that given
func (o *UpdateMemberGroupTransferRuleUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update member group transfer rule using p u t not found response
func (o *UpdateMemberGroupTransferRuleUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateMemberGroupTransferRuleUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupTransferRule][%d] updateMemberGroupTransferRuleUsingPUTNotFound", 404)
}

func (o *UpdateMemberGroupTransferRuleUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/policy/memberGroupTransferRule][%d] updateMemberGroupTransferRuleUsingPUTNotFound", 404)
}

func (o *UpdateMemberGroupTransferRuleUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
