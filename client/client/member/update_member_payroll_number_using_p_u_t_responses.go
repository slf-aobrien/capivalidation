// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"client/models"
)

// UpdateMemberPayrollNumberUsingPUTReader is a Reader for the UpdateMemberPayrollNumberUsingPUT structure.
type UpdateMemberPayrollNumberUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMemberPayrollNumberUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateMemberPayrollNumberUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateMemberPayrollNumberUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateMemberPayrollNumberUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateMemberPayrollNumberUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateMemberPayrollNumberUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateMemberPayrollNumberUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateMemberPayrollNumberUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /compassintegrationapp/member/update/payrollNumber] updateMemberPayrollNumberUsingPUT", response, response.Code())
	}
}

// NewUpdateMemberPayrollNumberUsingPUTOK creates a UpdateMemberPayrollNumberUsingPUTOK with default headers values
func NewUpdateMemberPayrollNumberUsingPUTOK() *UpdateMemberPayrollNumberUsingPUTOK {
	return &UpdateMemberPayrollNumberUsingPUTOK{}
}

/*
UpdateMemberPayrollNumberUsingPUTOK describes a response with status code 200, with default header values.

Success
*/
type UpdateMemberPayrollNumberUsingPUTOK struct {
	Payload *models.ResponseWrapperBoolean
}

// IsSuccess returns true when this update member payroll number using p u t o k response has a 2xx status code
func (o *UpdateMemberPayrollNumberUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member payroll number using p u t o k response has a 3xx status code
func (o *UpdateMemberPayrollNumberUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member payroll number using p u t o k response has a 4xx status code
func (o *UpdateMemberPayrollNumberUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member payroll number using p u t o k response has a 5xx status code
func (o *UpdateMemberPayrollNumberUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update member payroll number using p u t o k response a status code equal to that given
func (o *UpdateMemberPayrollNumberUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update member payroll number using p u t o k response
func (o *UpdateMemberPayrollNumberUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateMemberPayrollNumberUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/payrollNumber][%d] updateMemberPayrollNumberUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberPayrollNumberUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/payrollNumber][%d] updateMemberPayrollNumberUsingPUTOK %s", 200, payload)
}

func (o *UpdateMemberPayrollNumberUsingPUTOK) GetPayload() *models.ResponseWrapperBoolean {
	return o.Payload
}

func (o *UpdateMemberPayrollNumberUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperBoolean)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMemberPayrollNumberUsingPUTCreated creates a UpdateMemberPayrollNumberUsingPUTCreated with default headers values
func NewUpdateMemberPayrollNumberUsingPUTCreated() *UpdateMemberPayrollNumberUsingPUTCreated {
	return &UpdateMemberPayrollNumberUsingPUTCreated{}
}

/*
UpdateMemberPayrollNumberUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateMemberPayrollNumberUsingPUTCreated struct {
}

// IsSuccess returns true when this update member payroll number using p u t created response has a 2xx status code
func (o *UpdateMemberPayrollNumberUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update member payroll number using p u t created response has a 3xx status code
func (o *UpdateMemberPayrollNumberUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member payroll number using p u t created response has a 4xx status code
func (o *UpdateMemberPayrollNumberUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member payroll number using p u t created response has a 5xx status code
func (o *UpdateMemberPayrollNumberUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update member payroll number using p u t created response a status code equal to that given
func (o *UpdateMemberPayrollNumberUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update member payroll number using p u t created response
func (o *UpdateMemberPayrollNumberUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateMemberPayrollNumberUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/payrollNumber][%d] updateMemberPayrollNumberUsingPUTCreated", 201)
}

func (o *UpdateMemberPayrollNumberUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/payrollNumber][%d] updateMemberPayrollNumberUsingPUTCreated", 201)
}

func (o *UpdateMemberPayrollNumberUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberPayrollNumberUsingPUTBadRequest creates a UpdateMemberPayrollNumberUsingPUTBadRequest with default headers values
func NewUpdateMemberPayrollNumberUsingPUTBadRequest() *UpdateMemberPayrollNumberUsingPUTBadRequest {
	return &UpdateMemberPayrollNumberUsingPUTBadRequest{}
}

/*
UpdateMemberPayrollNumberUsingPUTBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateMemberPayrollNumberUsingPUTBadRequest struct {
}

// IsSuccess returns true when this update member payroll number using p u t bad request response has a 2xx status code
func (o *UpdateMemberPayrollNumberUsingPUTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member payroll number using p u t bad request response has a 3xx status code
func (o *UpdateMemberPayrollNumberUsingPUTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member payroll number using p u t bad request response has a 4xx status code
func (o *UpdateMemberPayrollNumberUsingPUTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member payroll number using p u t bad request response has a 5xx status code
func (o *UpdateMemberPayrollNumberUsingPUTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update member payroll number using p u t bad request response a status code equal to that given
func (o *UpdateMemberPayrollNumberUsingPUTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update member payroll number using p u t bad request response
func (o *UpdateMemberPayrollNumberUsingPUTBadRequest) Code() int {
	return 400
}

func (o *UpdateMemberPayrollNumberUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/payrollNumber][%d] updateMemberPayrollNumberUsingPUTBadRequest", 400)
}

func (o *UpdateMemberPayrollNumberUsingPUTBadRequest) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/payrollNumber][%d] updateMemberPayrollNumberUsingPUTBadRequest", 400)
}

func (o *UpdateMemberPayrollNumberUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberPayrollNumberUsingPUTUnauthorized creates a UpdateMemberPayrollNumberUsingPUTUnauthorized with default headers values
func NewUpdateMemberPayrollNumberUsingPUTUnauthorized() *UpdateMemberPayrollNumberUsingPUTUnauthorized {
	return &UpdateMemberPayrollNumberUsingPUTUnauthorized{}
}

/*
UpdateMemberPayrollNumberUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateMemberPayrollNumberUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update member payroll number using p u t unauthorized response has a 2xx status code
func (o *UpdateMemberPayrollNumberUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member payroll number using p u t unauthorized response has a 3xx status code
func (o *UpdateMemberPayrollNumberUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member payroll number using p u t unauthorized response has a 4xx status code
func (o *UpdateMemberPayrollNumberUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member payroll number using p u t unauthorized response has a 5xx status code
func (o *UpdateMemberPayrollNumberUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update member payroll number using p u t unauthorized response a status code equal to that given
func (o *UpdateMemberPayrollNumberUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update member payroll number using p u t unauthorized response
func (o *UpdateMemberPayrollNumberUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateMemberPayrollNumberUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/payrollNumber][%d] updateMemberPayrollNumberUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberPayrollNumberUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/payrollNumber][%d] updateMemberPayrollNumberUsingPUTUnauthorized", 401)
}

func (o *UpdateMemberPayrollNumberUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberPayrollNumberUsingPUTForbidden creates a UpdateMemberPayrollNumberUsingPUTForbidden with default headers values
func NewUpdateMemberPayrollNumberUsingPUTForbidden() *UpdateMemberPayrollNumberUsingPUTForbidden {
	return &UpdateMemberPayrollNumberUsingPUTForbidden{}
}

/*
UpdateMemberPayrollNumberUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateMemberPayrollNumberUsingPUTForbidden struct {
}

// IsSuccess returns true when this update member payroll number using p u t forbidden response has a 2xx status code
func (o *UpdateMemberPayrollNumberUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member payroll number using p u t forbidden response has a 3xx status code
func (o *UpdateMemberPayrollNumberUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member payroll number using p u t forbidden response has a 4xx status code
func (o *UpdateMemberPayrollNumberUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member payroll number using p u t forbidden response has a 5xx status code
func (o *UpdateMemberPayrollNumberUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update member payroll number using p u t forbidden response a status code equal to that given
func (o *UpdateMemberPayrollNumberUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update member payroll number using p u t forbidden response
func (o *UpdateMemberPayrollNumberUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateMemberPayrollNumberUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/payrollNumber][%d] updateMemberPayrollNumberUsingPUTForbidden", 403)
}

func (o *UpdateMemberPayrollNumberUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/payrollNumber][%d] updateMemberPayrollNumberUsingPUTForbidden", 403)
}

func (o *UpdateMemberPayrollNumberUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberPayrollNumberUsingPUTNotFound creates a UpdateMemberPayrollNumberUsingPUTNotFound with default headers values
func NewUpdateMemberPayrollNumberUsingPUTNotFound() *UpdateMemberPayrollNumberUsingPUTNotFound {
	return &UpdateMemberPayrollNumberUsingPUTNotFound{}
}

/*
UpdateMemberPayrollNumberUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateMemberPayrollNumberUsingPUTNotFound struct {
}

// IsSuccess returns true when this update member payroll number using p u t not found response has a 2xx status code
func (o *UpdateMemberPayrollNumberUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member payroll number using p u t not found response has a 3xx status code
func (o *UpdateMemberPayrollNumberUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member payroll number using p u t not found response has a 4xx status code
func (o *UpdateMemberPayrollNumberUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update member payroll number using p u t not found response has a 5xx status code
func (o *UpdateMemberPayrollNumberUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update member payroll number using p u t not found response a status code equal to that given
func (o *UpdateMemberPayrollNumberUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update member payroll number using p u t not found response
func (o *UpdateMemberPayrollNumberUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateMemberPayrollNumberUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/payrollNumber][%d] updateMemberPayrollNumberUsingPUTNotFound", 404)
}

func (o *UpdateMemberPayrollNumberUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/payrollNumber][%d] updateMemberPayrollNumberUsingPUTNotFound", 404)
}

func (o *UpdateMemberPayrollNumberUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMemberPayrollNumberUsingPUTInternalServerError creates a UpdateMemberPayrollNumberUsingPUTInternalServerError with default headers values
func NewUpdateMemberPayrollNumberUsingPUTInternalServerError() *UpdateMemberPayrollNumberUsingPUTInternalServerError {
	return &UpdateMemberPayrollNumberUsingPUTInternalServerError{}
}

/*
UpdateMemberPayrollNumberUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateMemberPayrollNumberUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update member payroll number using p u t internal server error response has a 2xx status code
func (o *UpdateMemberPayrollNumberUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update member payroll number using p u t internal server error response has a 3xx status code
func (o *UpdateMemberPayrollNumberUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update member payroll number using p u t internal server error response has a 4xx status code
func (o *UpdateMemberPayrollNumberUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update member payroll number using p u t internal server error response has a 5xx status code
func (o *UpdateMemberPayrollNumberUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update member payroll number using p u t internal server error response a status code equal to that given
func (o *UpdateMemberPayrollNumberUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update member payroll number using p u t internal server error response
func (o *UpdateMemberPayrollNumberUsingPUTInternalServerError) Code() int {
	return 500
}

func (o *UpdateMemberPayrollNumberUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/payrollNumber][%d] updateMemberPayrollNumberUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberPayrollNumberUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /compassintegrationapp/member/update/payrollNumber][%d] updateMemberPayrollNumberUsingPUTInternalServerError", 500)
}

func (o *UpdateMemberPayrollNumberUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
